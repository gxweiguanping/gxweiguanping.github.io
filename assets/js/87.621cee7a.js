(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{417:function(s,a,t){"use strict";t.r(a);var n=t(8),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql函数"}},[s._v("#")]),s._v(" MySQL函数")]),s._v(" "),a("h2",{attrs:{id:"sql-avg-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-avg-函数"}},[s._v("#")]),s._v(" SQL AVG() 函数")]),s._v(" "),a("p",[a("code",[s._v("AVG()")]),s._v(" 是 SQL 中的一个聚合函数，它用于计算一列中数值的平均值。")]),s._v(" "),a("p",[s._v("基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("column_name")]),s._v(" 是你要计算平均值的列的名字。")]),s._v(" "),a("li",[a("code",[s._v("table_name")]),s._v(" 是你从中选择数据的表的名字。")]),s._v(" "),a("li",[a("code",[s._v("WHERE condition")]),s._v(" 是一个可选的条件语句，用来限制哪些行应该被包括在计算中。")])]),s._v(" "),a("p",[s._v("例如，如果你有一个叫做 "),a("code",[s._v("Orders")]),s._v(" 的表，里面有一个叫做 "),a("code",[s._v("Quantity")]),s._v(" 的列，你可以像这样计算所有订单的平均数量：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Quantity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果你只想计算 "),a("code",[s._v("CustomerID")]),s._v(" 为 1 的订单的平均数量，你可以添加一个 "),a("code",[s._v("WHERE")]),s._v(" 条件，像这样：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Quantity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" CustomerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("注意，"),a("code",[s._v("AVG()")]),s._v(" 函数会自动忽略 "),a("code",[s._v("NULL")]),s._v(" 值。如果你不想忽略 "),a("code",[s._v("NULL")]),s._v(" 值，你需要使用其他方法来处理它们，例如使用 "),a("code",[s._v("COALESCE")]),s._v(" 函数将它们替换为 0。")]),s._v(" "),a("h2",{attrs:{id:"sql-count-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-count-函数"}},[s._v("#")]),s._v(" SQL COUNT() 函数")]),s._v(" "),a("p",[a("code",[s._v("COUNT()")]),s._v(" 是 SQL 中的一个聚合函数，它用来计算一列中的行数。")]),s._v(" "),a("p",[a("code",[s._v("COUNT()")]),s._v(" 函数的基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("column_name")]),s._v(" 是你想要计算行数的列的名称。")]),s._v(" "),a("li",[a("code",[s._v("table_name")]),s._v(" 是你从中选择数据的表的名字。")]),s._v(" "),a("li",[a("code",[s._v("WHERE condition")]),s._v(" 是一个可选的条件语句，用来限制哪些行应被计算。")])]),s._v(" "),a("p",[s._v("例如，如果你有一个名为 "),a("code",[s._v("Orders")]),s._v(" 的表，你可以计算表中的订单数量：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果你想计算特定客户（比如 "),a("code",[s._v("CustomerID")]),s._v(" 为 1）的订单数量，你可以添加一个 "),a("code",[s._v("WHERE")]),s._v(" 条件：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" CustomerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("COUNT()")]),s._v(" 函数会忽略 "),a("code",[s._v("NULL")]),s._v(" 值。如果你想包括 "),a("code",[s._v("NULL")]),s._v(" 值，你应该计算表中的行数，而不是列中的值。你可以通过 "),a("code",[s._v("COUNT(*)")]),s._v(" 来实现这一点。")]),s._v(" "),a("li",[a("code",[s._v("COUNT()")]),s._v(" 函数返回的是一个 "),a("code",[s._v("bigint")]),s._v(" 数据类型的结果。")])]),s._v(" "),a("h2",{attrs:{id:"sql-max-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-max-函数"}},[s._v("#")]),s._v(" SQL MAX() 函数")]),s._v(" "),a("p",[a("code",[s._v("MAX()")]),s._v(" 是 SQL 中的一个聚合函数，它用来返回一列中的最大值。")]),s._v(" "),a("p",[a("code",[s._v("MAX()")]),s._v(" 函数的基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("column_name")]),s._v(" 是你想要获取最大值的列的名称。")]),s._v(" "),a("li",[a("code",[s._v("table_name")]),s._v(" 是你从中选择数据的表的名字。")]),s._v(" "),a("li",[a("code",[s._v("WHERE condition")]),s._v(" 是一个可选的条件语句，用来限制哪些行应被考虑。")])]),s._v(" "),a("p",[s._v("例如，如果你有一个名为 "),a("code",[s._v("Orders")]),s._v(" 的表，你可以获取订单金额 ("),a("code",[s._v("OrderAmount")]),s._v(") 的最大值：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderAmount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果你想找到特定客户（比如 "),a("code",[s._v("CustomerID")]),s._v(" 为 1）的最大订单金额，你可以添加一个 "),a("code",[s._v("WHERE")]),s._v(" 条件：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderAmount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" CustomerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("MAX()")]),s._v(" 函数可以用于数字，日期和字符类型的列，但不能用于 "),a("code",[s._v("boolean")]),s._v(" 类型的列。")]),s._v(" "),a("li",[a("code",[s._v("MAX()")]),s._v(" 函数会忽略 "),a("code",[s._v("NULL")]),s._v(" 值。如果你想包括 "),a("code",[s._v("NULL")]),s._v(" 值，你需要用其他方法处理。")])]),s._v(" "),a("h2",{attrs:{id:"sql-min-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-min-函数"}},[s._v("#")]),s._v(" SQL MIN() 函数")]),s._v(" "),a("p",[a("code",[s._v("MIN()")]),s._v(" 是 SQL 中的一个聚合函数，用于返回一列中的最小值。")]),s._v(" "),a("p",[a("code",[s._v("MIN()")]),s._v(" 函数的基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("column_name")]),s._v(" 是你想要获取最小值的列的名称。")]),s._v(" "),a("li",[a("code",[s._v("table_name")]),s._v(" 是你从中选择数据的表的名字。")]),s._v(" "),a("li",[a("code",[s._v("WHERE condition")]),s._v(" 是一个可选的条件语句，用来限制哪些行应被考虑。")])]),s._v(" "),a("p",[s._v("例如，假设你有一个名为 "),a("code",[s._v("Orders")]),s._v(" 的表，你想找到订单金额 ("),a("code",[s._v("OrderAmount")]),s._v(") 的最小值，你可以这样做：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderAmount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果你想找出特定客户（例如 "),a("code",[s._v("CustomerID")]),s._v(" 为 1）的最小订单金额，你可以添加一个 "),a("code",[s._v("WHERE")]),s._v(" 条件：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("sqlCopy codeSELECT "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderAmount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" CustomerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("MIN()")]),s._v(" 函数可以用于数字，日期和字符类型的列，但不能用于 "),a("code",[s._v("boolean")]),s._v(" 类型的列。")]),s._v(" "),a("li",[a("code",[s._v("MIN()")]),s._v(" 函数会忽略 "),a("code",[s._v("NULL")]),s._v(" 值。如果你想包括 "),a("code",[s._v("NULL")]),s._v(" 值，你需要用其他方法处理。")])]),s._v(" "),a("h2",{attrs:{id:"sql-sum-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-sum-函数"}},[s._v("#")]),s._v(" SQL SUM() 函数")]),s._v(" "),a("p",[a("code",[s._v("SUM()")]),s._v(" 是 SQL 中的一个聚合函数，它用来计算一列（数值类型）的总和。")]),s._v(" "),a("p",[a("code",[s._v("SUM()")]),s._v(" 函数的基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("column_name")]),s._v(" 是你想要计算总和的列的名称。")]),s._v(" "),a("li",[a("code",[s._v("table_name")]),s._v(" 是你从中选择数据的表的名字。")]),s._v(" "),a("li",[a("code",[s._v("WHERE condition")]),s._v(" 是一个可选的条件语句，用来限制哪些行应被考虑。")])]),s._v(" "),a("p",[s._v("例如，假设你有一个名为 "),a("code",[s._v("Orders")]),s._v(" 的表，你想计算所有订单的总金额 ("),a("code",[s._v("OrderAmount")]),s._v(")，你可以这样做：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderAmount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果你只想计算特定客户（例如 "),a("code",[s._v("CustomerID")]),s._v(" 为 1）的订单总金额，你可以添加一个 "),a("code",[s._v("WHERE")]),s._v(" 条件：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderAmount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" CustomerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("SUM()")]),s._v(" 函数只能用于数值类型的列。")]),s._v(" "),a("li",[a("code",[s._v("SUM()")]),s._v(" 函数会忽略 "),a("code",[s._v("NULL")]),s._v(" 值。如果你想包括 "),a("code",[s._v("NULL")]),s._v(" 值，你需要用其他方法处理。")])]),s._v(" "),a("h2",{attrs:{id:"sql-having-子句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-having-子句"}},[s._v("#")]),s._v(" SQL HAVING 子句")]),s._v(" "),a("p",[a("code",[s._v("HAVING")]),s._v("子句在SQL中用于配合"),a("code",[s._v("GROUP BY")]),s._v("子句使用，其允许你对分组后的数据应用过滤条件。这与 "),a("code",[s._v("WHERE")]),s._v(" 子句的工作方式类似，但 "),a("code",[s._v("HAVING")]),s._v(" 主要用于处理聚合函数（如 "),a("code",[s._v("COUNT()")]),s._v("， "),a("code",[s._v("AVG()")]),s._v("， "),a("code",[s._v("SUM()")]),s._v("， "),a("code",[s._v("MAX()")]),s._v("， "),a("code",[s._v("MIN()")]),s._v("等）的结果。")]),s._v(" "),a("p",[a("code",[s._v("HAVING")]),s._v(" 子句的基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" aggregate_function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" condition\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HAVING")]),s._v(" condition\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("例如，假设你有一个名为 "),a("code",[s._v("Orders")]),s._v(" 的表，你想找出订单数量超过 10 的客户 ("),a("code",[s._v("CustomerID")]),s._v(")，可以这样做：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CustomerID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" CustomerID\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HAVING")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("OrderID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("在这个例子中， "),a("code",[s._v("GROUP BY")]),s._v(" 子句首先按 "),a("code",[s._v("CustomerID")]),s._v(" 对订单进行分组，然后 "),a("code",[s._v("HAVING")]),s._v(" 子句过滤出订单数量超过10的客户。")]),s._v(" "),a("p",[s._v("注意： "),a("code",[s._v("HAVING")]),s._v(" 子句始终位于 "),a("code",[s._v("GROUP BY")]),s._v(" 子句之后，但在 "),a("code",[s._v("ORDER BY")]),s._v(" 子句之前。")]),s._v(" "),a("h2",{attrs:{id:"sql-concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-concat"}},[s._v("#")]),s._v(" SQL CONCAT")]),s._v(" "),a("p",[s._v("在SQL中，"),a("code",[s._v("CONCAT()")]),s._v("函数用于将两个或更多的字符串组合成一个字符串。")]),s._v(" "),a("p",[a("code",[s._v("CONCAT()")]),s._v("函数的基本语法是：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("CONCAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" string2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stringN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("例如，假设你有一个包含名(first_name)和姓(last_name)的表(person)，并且你想将这两个字段组合在一起显示全名，你可以这样做：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CONCAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" last_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Full Name'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在这个例子中，"),a("code",[s._v("' '")]),s._v("是一个字符串，包含一个空格，用于分隔名和姓，以创建更可读的全名。")]),s._v(" "),a("p",[s._v("需要注意的是，"),a("code",[s._v("CONCAT()")]),s._v("函数的行为和支持的参数数量可能会根据不同的数据库系统（如MySQL、PostgreSQL、SQLite等）有所不同。")]),s._v(" "),a("h2",{attrs:{id:"sql-group-concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-group-concat"}},[s._v("#")]),s._v(" SQL GROUP_CONCAT")]),s._v(" "),a("p",[a("code",[s._v("GROUP_CONCAT()")]),s._v(" 是一个聚合函数，主要在 MySQL 数据库中使用。它会将由逗号分隔的字符串结果连接到一起。当你想要在单个字符串中创建组的值列表时，这个函数非常有用。")]),s._v(" "),a("p",[a("code",[s._v("GROUP_CONCAT()")]),s._v(" 函数的基本语法是：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("sqlCopy code\nGROUP_CONCAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression SEPARATOR sep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("其中，expression 是你想要连接的字段，sep 是字段之间的分隔符。")]),s._v(" "),a("p",[s._v("例如，如果你有一个表（students），表中包含学生名字和他们所在的班级：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Student")]),s._v(" "),a("th",[s._v("Class")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("Bob")]),s._v(" "),a("td",[s._v("Math")])]),s._v(" "),a("tr",[a("td",[s._v("Alice")]),s._v(" "),a("td",[s._v("Math")])]),s._v(" "),a("tr",[a("td",[s._v("Eve")]),s._v(" "),a("td",[s._v("Science")])]),s._v(" "),a("tr",[a("td",[s._v("Bob")]),s._v(" "),a("td",[s._v("Science")])]),s._v(" "),a("tr",[a("td",[s._v("Alice")]),s._v(" "),a("td",[s._v("History")])])])]),s._v(" "),a("p",[s._v("你可以使用 "),a("code",[s._v("GROUP_CONCAT()")]),s._v(" 函数获取每个班级的学生列表：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GROUP_CONCAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Student SEPARATOR "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("', '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" students\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这将返回：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Class")]),s._v(" "),a("th",[s._v("Students")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("Math")]),s._v(" "),a("td",[s._v("Bob, Alice")])]),s._v(" "),a("tr",[a("td",[s._v("Science")]),s._v(" "),a("td",[s._v("Eve, Bob")])]),s._v(" "),a("tr",[a("td",[s._v("History")]),s._v(" "),a("td",[s._v("Alice")])])])]),s._v(" "),a("p",[s._v("需要注意的是 "),a("code",[s._v("GROUP_CONCAT()")]),s._v(" 在其他数据库系统中可能不存在，比如 PostgreSQL，或者名字可能不同，如 SQLite 中的 "),a("code",[s._v("GROUP_CONCAT()")]),s._v(" 与 SQL Server 中的 "),a("code",[s._v("STRING_AGG()")]),s._v(" 功能类似。")]),s._v(" "),a("h2",{attrs:{id:"sql-date-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-date-format"}},[s._v("#")]),s._v(" SQL DATE_FORMAT")]),s._v(" "),a("p",[s._v("DATE_FORMAT函数是MySQL中特定的函数，用于将日期按照指定的格式进行格式化。它允许您将日期或日期时间值转换为具有所需格式的字符串。")]),s._v(" "),a("p",[s._v("DATE_FORMAT函数的语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("DATE_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其中，"),a("code",[s._v("date")]),s._v("是要格式化的日期或日期时间值，"),a("code",[s._v("format")]),s._v("指定了要使用的格式模式。")]),s._v(" "),a("p",[s._v("例如")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" DATE_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("date")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Websites"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"sql-ifnull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-ifnull"}},[s._v("#")]),s._v(" SQL IFNULL")]),s._v(" "),a("p",[a("code",[s._v("IFNULL")]),s._v(" 是一种在 SQL 中常用的函数，用于处理 NULL 值。它接收两个参数：第一个参数是待检查的表达式或字段，第二个参数是当第一个参数为 NULL 时要返回的值。如果第一个参数不为 NULL，则返回该参数的值；如果第一个参数为 NULL，则返回第二个参数的值。")]),s._v(" "),a("p",[s._v("语法如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("IFNULL(expression, value)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("expression")]),s._v("：待检查的表达式或字段。")]),s._v(" "),a("li",[a("code",[s._v("value")]),s._v("：当 "),a("code",[s._v("expression")]),s._v(" 为 NULL 时要返回的值。")])]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" IFNULL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'N/A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" column_alias "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上述示例中，如果 "),a("code",[s._v("column_name")]),s._v(" 的值为 NULL，则返回 'N/A'；否则返回 "),a("code",[s._v("column_name")]),s._v(" 的值。")]),s._v(" "),a("p",[a("code",[s._v("IFNULL")]),s._v(" 函数常用于处理查询结果中的 NULL 值，可以通过指定默认值来确保结果的完整性和一致性。")])])}),[],!1,null,null,null);a.default=e.exports}}]);