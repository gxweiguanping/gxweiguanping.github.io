(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{478:function(t,e,r){"use strict";r.r(e);var v=r(8),_=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[t._v("Nginx 是一款高性能、高并发的 Web 服务器和反向代理服务器，常用于提供静态资源、负载均衡、HTTP 缓存、SSL 终端等功能。")]),t._v(" "),e("h2",{attrs:{id:"代理服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代理服务"}},[t._v("#")]),t._v(" "),e("strong",[t._v("代理服务")])]),t._v(" "),e("p",[t._v("什么是代理？来一张图了解下")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240112144009585.png",alt:"image-20240112144009585"}})]),t._v(" "),e("p",[t._v("代理又分为"),e("code",[t._v("正向代理")]),t._v("和"),e("code",[t._v("反向代理")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"正向代理-forward-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正向代理-forward-proxy"}},[t._v("#")]),t._v(" 正向代理（Forward Proxy）")]),t._v(" "),e("p",[t._v("一般情况下，如果没有特别说明，代理技术默认说的是正向代理技术。关于正向代理的概念如下：")]),t._v(" "),e("p",[t._v("正向代理是一个位于客户端【用户A】和原始服务器【服务器B】之间的服务器【代理服务器Z】，为了从原始服务器取得内容，【用户 A】 向【代理服务器 Z】 发送一个请求并指定目标（【服务器B】），然后【代理服务器 Z】 向【服务器 B】 转交请求并将获得的内容返回给客户端。客户端必须要进行一些特别设置才能使用正向代理。如下图：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240112144354431.png",alt:"image-20240112144354431"}})]),t._v(" "),e("p",[t._v("从上面的概念中，我们可以看出，所谓的正向代理就是代理服务器替代访问方【用户A】去访问目标服务器【服务器B】。而为什么要用代理服务器去代替访问方【用户A】去访问【服务器 B】 呢？这就要从代理服务器使用的作用说起。使用正向代理服务器作用主要有以下几点：")]),t._v(" "),e("p",[e("strong",[t._v("1、本就无法访问的服务器 B")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240112144959700.png",alt:"image-20240112144959700"}})]),t._v(" "),e("p",[t._v("我们抛除复杂的网络路由情节来看上图，图中路由器从左到右命名为 【R1】、【R2】。假设最初【用户 A】 要访问【服务器 B】 需要经过 【R1】 和 【R2】 路由器这样一个路由节点，如果【路由器 R1 】或者【路由器 R2】 发生故障，那么就无法访问【服务器 B 】了。但是如果【用户 A 】让【代理服务器 Z】 去代替自己访问【服务器 B】，由于【代理服务器 Z】 没有在【路由器 R1】 或【 R2】 节点中，而是通过其它的路由节点访问【服务器 B】，那么【用户 A】 就可以得到【服务器 B】 的数据了。")]),t._v(" "),e("p",[t._v("现实中的例子就是"),e("code",[t._v("翻墙")]),t._v("。不过自从 VPN 技术被广泛应用外，"),e("code",[t._v("翻墙")]),t._v("不但使用了传统的正向代理技术，有的还使用了 VPN 技术。")]),t._v(" "),e("p",[e("strong",[t._v("2、Cache 作用")])]),t._v(" "),e("p",[t._v("Cache（缓存）技术和代理服务技术是紧密联系的（不光是正向代理，反向代理也使用了Cache（缓存）技术。还如上图所示，如果在【用户 A 】访问【服务器 B】 某【数据Y】 之前，已经有人通过【代理服务器 Z】 访问过【服务器 B】 上得【数据Y】，那么【代理服务器 Z】 会把【数据 Y】保存一段时间，如果有人正好取该【数据 Y】，那么【代理服务器 Z 】不再访问【服务器 B】，而把缓存的【数据Y】直接发给【用户 A】。这一技术在 Cache 中术语就叫 Cache 命中。如果有更多的像【用户 A】 的用户来访问【代理服务器 Z】，那么这些用户都可以直接从【代理服务器 Z】 中取得【数据Y】，而不用千里迢迢的去【服务器 B】 下载数据了。")]),t._v(" "),e("p",[e("strong",[t._v("3、客户端访问授权")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240112145959652.png",alt:"image-20240112145959652"}})]),t._v(" "),e("p",[t._v("【防火墙】作为网关，用来过滤外网对其的访问。假设【用户 A】 和【用户 B 】都设置了【代理服务器Z】，【用户 A】 允许访问互联网，而【用户 B 】不允许访问互联网（这个在【代理服务器 Z 】上做限制）这样【用户 A 】因为授权，可以通过代理服务器访问到【服务器 B】，而【用户 B 】因为没有被【代理服务器 Z 】授权，所以访问【服务器 B】 时，数据包会被直接丢弃。")]),t._v(" "),e("p",[e("strong",[t._v("4、隐藏访问者的行踪")])]),t._v(" "),e("p",[t._v("我们可以看出【服务器 B 】并不知道访问自己的实际是【用户 A】，因为【代理服务器 Z】 代替【用户 A 】去直接与【服务器 B 】进行交互。如果【代理服务器 Z】 被【用户 A 】完全控制（或不完全控制），会惯以"),e("code",[t._v("肉鸡")]),t._v("术语称呼：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240112150713836.png",alt:"image-20240112150713836"}})]),t._v(" "),e("p",[t._v("总结：正向代理是一个位于客户端和原始服务器（origin server）之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标（原始服务器），然后代理向原始服务器转交请求并将获得的内容返回给客户端。客户端必须设置正向代理服务器，当然前提是要知道正向代理服务器的 IP 地址，还有代理程序的端口。")]),t._v(" "),e("h3",{attrs:{id:"反向代理-reverse-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反向代理-reverse-proxy"}},[t._v("#")]),t._v(" 反向代理（reverse proxy）")]),t._v(" "),e("p",[t._v("反向代理正好与正向代理相反，对于客户端而言代理服务器就像是原始服务器，并且客户端不需要进行任何特别的设置。客户端向反向代理的命名空间中的内容发送普通请求，接着反向代理将判断向何处（原始服务器）转交请求，并将获得的内容返回给客户端。")]),t._v(" "),e("p",[t._v("使用反向代理服务器的作用如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240112151228348.png",alt:"image-20240112151228348"}})]),t._v(" "),e("p",[t._v("【用户 A】 始终认为它访问的是【原始服务器 B 】而不是【代理服务器 Z】，但实用际上【反向代理服务器Z】接受【用户 A】 的应答，从【原始资源服务器 B】 中取得【用户 A 】的需求资源，然后发送给【用户 A】。由于防火墙的作用，只允许【代理服务器 Z 】访问【原始资源服务器 B】。尽管在这个虚拟的环境下，反向代理的保护了原始资源服务器 B，但用户 A 并不知情。")]),t._v(" "),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[e("strong",[t._v("正向代理（Forward Proxy）:")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("工作原理：")]),t._v(" 正向代理位于客户端和目标服务器之间，代表客户端向目标服务器发起请求。客户端通过正向代理访问目标服务器，而不是直接连接目标服务器。")]),t._v(" "),e("li",[e("strong",[t._v("用途：")]),t._v(" 正向代理通常用于隐藏客户端身份、访问受限制的资源、提供匿名性、过滤内容等。例如，翻墙工具就是正向代理的一种应用。")])]),t._v(" "),e("p",[e("strong",[t._v("反向代理（Reverse Proxy）:")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("工作原理：")]),t._v(" 反向代理位于目标服务器和客户端之间，代表目标服务器向客户端提供服务。客户端通过反向代理访问目标服务器，而不直接连接到目标服务器。")]),t._v(" "),e("li",[e("strong",[t._v("用途：")]),t._v(" 反向代理用于隐藏服务器的真实信息、负载均衡、缓存静态内容、提供安全性等。例如，Web服务器前面的反向代理可以处理多个后端服务器的请求，将流量分发到不同的服务器上。")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("总结")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("正向代理：")]),t._v(" "),e("strong",[t._v("代理客户端")]),t._v("，隐藏客户端身份，访问目标服务器。")]),t._v(" "),e("li",[e("strong",[t._v("反向代理：")]),t._v(" "),e("strong",[t._v("代理目标服务器")]),t._v("，隐藏服务器信息，提供服务给客户端。")])])])])}),[],!1,null,null,null);e.default=_.exports}}]);