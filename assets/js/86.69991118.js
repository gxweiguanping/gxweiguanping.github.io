(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{416:function(s,a,t){"use strict";t.r(a);var e=t(8),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql高级语法教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql高级语法教程"}},[s._v("#")]),s._v(" MySQL高级语法教程")]),s._v(" "),a("h2",{attrs:{id:"sql-like-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-like-操作符"}},[s._v("#")]),s._v(" SQL LIKE 操作符")]),s._v(" "),a("p",[s._v("SQL 的 "),a("code",[s._v("LIKE")]),s._v(" 操作符用于在 "),a("code",[s._v("WHERE")]),s._v(" 子句中搜索列中的指定模式。语法为：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" column1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" columnN "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v('这里的 "pattern" 可以包含两种通配符：')]),s._v(" "),a("ol",[a("li",[a("code",[s._v("%")]),s._v("：表示任意数量（包括 0）的任意字符。例如，"),a("code",[s._v("'a%'")]),s._v(" 匹配以 'a' 开始的任何字符串，"),a("code",[s._v("'%a'")]),s._v(" 匹配以 'a' 结束的任何字符串，"),a("code",[s._v("'%a%'")]),s._v(" 匹配包含 'a' 的任何字符串。")]),s._v(" "),a("li",[a("code",[s._v("_")]),s._v("：表示任意单个字符。例如，"),a("code",[s._v("'a_'")]),s._v(" 匹配以 'a' 开始的任何两个字符的字符串，"),a("code",[s._v("'_a'")]),s._v(" 匹配以 'a' 结束的任何两个字符的字符串，"),a("code",[s._v("'_a_'")]),s._v(" 匹配包含 'a' 的任何三个字符的字符串。")])]),s._v(" "),a("p",[s._v("这是一个使用 "),a("code",[s._v("LIKE")]),s._v(" 的示例：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" FirstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'J%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这将选择 \"Employees\" 表中 FirstName 开头为 'J' 的所有行。")]),s._v(" "),a("p",[s._v("注意，"),a("code",[s._v("LIKE")]),s._v(" 操作符是大小写敏感的，这意味着 "),a("code",[s._v("'a%'")]),s._v(" 和 "),a("code",[s._v("'A%'")]),s._v(" 会返回不同的结果。如果你希望进行大小写不敏感的匹配，可以使用函数 "),a("code",[s._v("LOWER()")]),s._v(" 或 "),a("code",[s._v("UPPER()")]),s._v(" 将列值和模式转换为相同的大小写。")]),s._v(" "),a("p",[a("code",[s._v("LIKE CONCAT")]),s._v(" 和 "),a("code",[s._v("LIKE")]),s._v(" 是在 SQL 中用于模糊匹配的操作符，它们之间的区别如下：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("LIKE")]),s._v("："),a("code",[s._v("LIKE")]),s._v(" 是用于模糊匹配的关键字，它可以在 "),a("code",[s._v("WHERE")]),s._v(" 子句中与通配符配合使用，来匹配符合指定模式的字符串。例如，"),a("code",[s._v("column LIKE 'abc%'")]),s._v(' 表示匹配以 "abc" 开头的字符串。')]),s._v(" "),a("li",[a("code",[s._v("CONCAT")]),s._v("："),a("code",[s._v("CONCAT")]),s._v(" 是 SQL 中的一个函数，用于连接多个字符串。它将多个字符串拼接在一起，生成一个新的字符串。例如，"),a("code",[s._v("CONCAT('abc', 'def')")]),s._v(' 返回结果为 "abcdef"。')])]),s._v(" "),a("p",[s._v("当涉及到模糊匹配时，有时候我们需要动态构造模糊匹配的模式。这时可以使用 "),a("code",[s._v("LIKE CONCAT")]),s._v(" 来实现动态拼接模糊匹配的字符串。通过将 "),a("code",[s._v("LIKE")]),s._v(" 和 "),a("code",[s._v("CONCAT")]),s._v(" 结合使用，可以将模糊匹配的模式动态生成。")]),s._v(" "),a("p",[s._v("例如，如果要匹配以特定字符串开头并以特定字符串结尾的情况，可以使用 "),a("code",[s._v("LIKE CONCAT")]),s._v("，如 "),a("code",[s._v("column LIKE CONCAT('abc', '%')")]),s._v('。这将匹配以 "abc" 开头的字符串。')]),s._v(" "),a("p",[s._v("总结起来，"),a("code",[s._v("LIKE")]),s._v(" 是用于模糊匹配的操作符，而 "),a("code",[s._v("CONCAT")]),s._v(" 是用于字符串拼接的函数。"),a("code",[s._v("LIKE CONCAT")]),s._v(" 可以动态构造模糊匹配的模式。")]),s._v(" "),a("p",[s._v("在SQL中，索引用于快速查找和检索数据库表中的数据。当你在一列上创建索引时，数据库会创建一个快速查找表来帮助它更快地查找数据。")]),s._v(" "),a("p",[s._v("当使用 "),a("code",[s._v("LIKE")]),s._v(" 语句时，是否可以使用索引取决于你的模式（pattern）如何开始：")]),s._v(" "),a("ol",[a("li",[s._v("当你的模式以通配符开始，例如 "),a("code",[s._v("%abc")]),s._v("，SQL 无法使用索引。这是因为索引通常是基于列值的开始部分构建的，如果模式以通配符开始，那么数据库无法使用索引来提高查询性能。")]),s._v(" "),a("li",[s._v("相反，如果你的模式不是以通配符开始，例如 "),a("code",[s._v("abc%")]),s._v(" 或 "),a("code",[s._v("abc%def")]),s._v("，SQL 可以利用索引来加速查询。这是因为在这种情况下，数据库可以使用索引来快速定位满足模式开始部分的行，然后检查这些行是否满足整个模式。")])]),s._v(" "),a("p",[s._v("总的来说，如果你想在使用 "),a("code",[s._v("LIKE")]),s._v(" 查询时获得索引的优势，那么你的模式不应该以通配符开始。这是一个通常在数据库优化中使用的策略。然而，实际情况可能会更复杂，因为是否使用索引还取决于其他因素，例如数据库管理系统（DBMS）的实现、表的大小、索引的类型（例如，B-tree、hash、bitmap 等）、索引的选择性以及查询的其他部分。对于复杂的查询和大型数据库，通常需要数据库管理员或者有经验的开发者来确定最优的索引策略。")]),s._v(" "),a("h2",{attrs:{id:"sql-in-not-in操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-in-not-in操作符"}},[s._v("#")]),s._v(" SQL IN & NOT IN操作符")]),s._v(" "),a("p",[a("code",[s._v("IN")]),s._v(" 是 SQL 中的一个操作符，用于在 "),a("code",[s._v("WHERE")]),s._v(" 子句中指定多个可能的值。你可以用它来测试列中的值是否在一组指定的值中。")]),s._v(" "),a("p",[s._v("下面是一些使用 "),a("code",[s._v("IN")]),s._v(" 操作符的例子：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("基本用法")]),s._v("：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Germany'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'France'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'UK'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上述查询从 "),a("code",[s._v("Customers")]),s._v(' 表中选取所有国家（Country）是 "Germany"，"France" 或 "UK" 的记录。')]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("与子查询一起使用")]),s._v("：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" CustomerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CustomerID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" Quantity "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这个查询从 "),a("code",[s._v("Customers")]),s._v(" 表中选取所有的客户，这些客户在 "),a("code",[s._v("Orders")]),s._v(" 表中有至少一条订单的数量（Quantity）大于10。")]),s._v(" "),a("ol",[a("li",[a("strong",[a("code",[s._v("NOT IN")]),s._v(" 用法")]),s._v("：")])]),s._v(" "),a("p",[s._v("你也可以使用 "),a("code",[s._v("NOT IN")]),s._v(" 来选取不在指定值集合中的记录。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Germany'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'France'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'UK'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上述查询从 "),a("code",[s._v("Customers")]),s._v(' 表中选取所有国家（Country）不是 "Germany"，"France" 或 "UK" 的记录。')]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("IN")]),s._v(" 操作符可以使你的 SQL 语句更清晰、更简洁，特别是当你需要匹配多个值时。")]),s._v(" "),a("h2",{attrs:{id:"sql-exists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-exists"}},[s._v("#")]),s._v(" SQL EXISTS")]),s._v(" "),a("p",[a("code",[s._v("EXISTS")]),s._v(" 是 SQL 中用于判断子查询是否返回结果的关键字。它通常与 "),a("code",[s._v("SELECT")]),s._v(" 语句结合使用，用于检查主查询中的条件是否满足子查询的结果。")]),s._v(" "),a("p",[a("code",[s._v("EXISTS")]),s._v(" 关键字的语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("subquery"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其中，"),a("code",[s._v("subquery")]),s._v(" 是一个子查询，它可以是一个完整的 "),a("code",[s._v("SELECT")]),s._v(" 语句或其他返回结果集的子查询。")]),s._v(" "),a("p",[a("code",[s._v("EXISTS")]),s._v(" 的工作原理如下：")]),s._v(" "),a("ol",[a("li",[s._v("首先，执行子查询，并获取其结果集。")]),s._v(" "),a("li",[s._v("如果子查询返回至少一行结果，则 "),a("code",[s._v("EXISTS")]),s._v(" 返回 "),a("code",[s._v("TRUE")]),s._v("，表示主查询中的条件满足。")]),s._v(" "),a("li",[s._v("如果子查询没有返回任何结果，则 "),a("code",[s._v("EXISTS")]),s._v(" 返回 "),a("code",[s._v("FALSE")]),s._v("，表示主查询中的条件不满足。")])]),s._v(" "),a("p",[s._v("在使用 "),a("code",[s._v("EXISTS")]),s._v(" 时，常见的用法是将子查询的结果与主查询中的条件进行关联，以实现更复杂的查询逻辑。通常，子查询中的列将与主查询中的列进行比较，以确定是否存在满足条件的记录。")]),s._v(" "),a("p",[s._v("以下是一个示例，演示了如何使用 "),a("code",[s._v("EXISTS")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("sqlCopy codeSELECT column1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" column3\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table2\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" table1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("column1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" table2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("column3\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在上述示例中，主查询从 "),a("code",[s._v("table1")]),s._v(" 表中选择列 "),a("code",[s._v("column1")]),s._v("、"),a("code",[s._v("column2")]),s._v(" 等，并通过 "),a("code",[s._v("EXISTS")]),s._v(" 判断是否存在满足条件的记录。子查询从 "),a("code",[s._v("table2")]),s._v(" 表中选择列 "),a("code",[s._v("column3")]),s._v("，并将其与主查询中的条件进行比较。")]),s._v(" "),a("p",[a("code",[s._v("EXISTS")]),s._v(" 的优点是可以实现高效的查询，因为它只需要判断子查询是否返回结果，而不需要获取所有的子查询结果。这在处理大型数据集时尤为重要。")]),s._v(" "),a("p",[s._v("需要注意的是，"),a("code",[s._v("EXISTS")]),s._v(" 只返回布尔值（"),a("code",[s._v("TRUE")]),s._v(" 或 "),a("code",[s._v("FALSE")]),s._v("），而不返回实际的结果集。它通常用于条件判断、子查询优化和相关查询等场景。")]),s._v(" "),a("h2",{attrs:{id:"sql-between-not-between-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-between-not-between-操作符"}},[s._v("#")]),s._v(" SQL BETWEEN & NOT BETWEEN 操作符")]),s._v(" "),a("p",[a("code",[s._v("BETWEEN")]),s._v(" 是 SQL 中的一个操作符，它用于在 "),a("code",[s._v("WHERE")]),s._v(" 子句中选择给定范围内的值。范围的边界包含在内。")]),s._v(" "),a("p",[s._v("这是一个简单的 "),a("code",[s._v("BETWEEN")]),s._v(" 语句的例子：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Products\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" Price "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("BETWEEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这个查询从 "),a("code",[s._v("Products")]),s._v(" 表中选择价格 "),a("code",[s._v("Price")]),s._v(" 在10到20之间的所有产品。")]),s._v(" "),a("p",[s._v("你也可以使用 "),a("code",[s._v("BETWEEN")]),s._v(" 与日期一起使用：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" OrderDate "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("BETWEEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2023-01-01'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2023-12-31'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这个查询从 "),a("code",[s._v("Orders")]),s._v(" 表中选取 "),a("code",[s._v("OrderDate")]),s._v(" 在2023年之间的所有订单。")]),s._v(" "),a("p",[s._v("如果你需要选择在某个范围之外的值，你可以使用 "),a("code",[s._v("NOT BETWEEN")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Products\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" Price "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("BETWEEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这个查询从 "),a("code",[s._v("Products")]),s._v(" 表中选择价格 "),a("code",[s._v("Price")]),s._v(" 不在10到20之间的所有产品。")]),s._v(" "),a("p",[s._v("需要注意的是，"),a("code",[s._v("BETWEEN")]),s._v(" 操作符是闭区间，包含区间的边界。即，上述例子中的价格等于10或者20的产品也会被选取。")]),s._v(" "),a("h2",{attrs:{id:"sql-别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-别名"}},[s._v("#")]),s._v(" SQL 别名")]),s._v(" "),a("p",[s._v('在 SQL 中，"别名"是一个由用户定义的替代名，用于给表或者列起一个新名字。别名可以在查询中提高可读性，或者在连接多个表时消除任何可能的歧义。')]),s._v(" "),a("p",[a("strong",[s._v("列别名")]),s._v("： 你可以给查询结果的列赋一个别名，这会在结果中改变列的头部显示。比如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CustomerID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" CustomerName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" Customer\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在这个查询中，"),a("code",[s._v("CustomerID")]),s._v(" 列将显示为 "),a("code",[s._v("ID")]),s._v("，"),a("code",[s._v("CustomerName")]),s._v(" 列将显示为 "),a("code",[s._v("Customer")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("表别名")]),s._v("： 在更复杂的查询中，特别是涉及到多个表的联接时，表别名非常有用。比如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("OrderID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("OrderDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CustomerName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" c\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" o "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CustomerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CustomerID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在这个查询中，"),a("code",[s._v("Customers")]),s._v(" 表被别名为 "),a("code",[s._v("c")]),s._v("，"),a("code",[s._v("Orders")]),s._v(" 表被别名为 "),a("code",[s._v("o")]),s._v("。这样在查询的其他部分，就可以使用这些更简洁的别名，而不是原始的表名。")]),s._v(" "),a("h2",{attrs:{id:"sql-inner-join-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-inner-join-关键字"}},[s._v("#")]),s._v(" SQL INNER JOIN 关键字")]),s._v(" "),a("p",[s._v("在 SQL 中，"),a("code",[s._v("JOIN")]),s._v(" 语句用于在两个或更多的表之间组合行，基于这些表之间的相关列之间的关系。")]),s._v(" "),a("p",[s._v("有多种类型的 SQL 连接，这里是最常见的几种：")]),s._v(" "),a("p",[a("strong",[s._v("INNER JOIN")]),s._v("："),a("code",[s._v("INNER JOIN")]),s._v(" 关键字选择那些在两个或多个表中都有匹配的记录的记录。如果表中的任一行在另一表中没有匹配，那么结果是没有这些记录的行。例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("OrderID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CustomerName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CustomerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CustomerID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在这个例子中，"),a("code",[s._v("INNER JOIN")]),s._v(" 返回了 "),a("code",[s._v("Orders")]),s._v(" 表中的 "),a("code",[s._v("CustomerID")]),s._v(" 与 "),a("code",[s._v("Customers")]),s._v(" 表中的 "),a("code",[s._v("CustomerID")]),s._v(" 匹配的所有记录。")]),s._v(" "),a("h2",{attrs:{id:"sql-left-join-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-left-join-关键字"}},[s._v("#")]),s._v(" SQL LEFT JOIN 关键字")]),s._v(" "),a("p",[a("strong",[s._v("LEFT JOIN")]),s._v("："),a("code",[s._v("LEFT JOIN")]),s._v(" 关键字从第一个（左边）表返回所有的行，即使右边的表中没有匹配的行。例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CustomerName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("OrderID\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CustomerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("CustomerID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这个查询将返回 "),a("code",[s._v("Customers")]),s._v(" 表的所有记录，即使 "),a("code",[s._v("Orders")]),s._v(" 表中没有匹配的记录。")]),s._v(" "),a("h2",{attrs:{id:"sql-right-join-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-right-join-关键字"}},[s._v("#")]),s._v(" SQL RIGHT JOIN 关键字")]),s._v(" "),a("p",[a("strong",[s._v("RIGHT  JOIN")]),s._v("："),a("code",[s._v("RIGHT JOIN")]),s._v(" 关键字从第二个（右边）表返回所有的行，即使左边的表中没有匹配的行。")]),s._v(" "),a("h2",{attrs:{id:"sql-not-null-约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-not-null-约束"}},[s._v("#")]),s._v(" SQL NOT NULL 约束")]),s._v(" "),a("p",[s._v("在 SQL 中，"),a("code",[s._v("NOT NULL")]),s._v(" 约束确保列不能有 NULL 值。")]),s._v(" "),a("p",[s._v("在创建表时，你可以使用 "),a("code",[s._v("NOT NULL")]),s._v(" 约束。例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" Customers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    ID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Email "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    City "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在这个例子中，"),a("code",[s._v("ID")]),s._v(" 和 "),a("code",[s._v("Name")]),s._v(" 列不能接受 NULL 值，但其他列可以。")]),s._v(" "),a("p",[s._v("如果你试图在 "),a("code",[s._v("NOT NULL")]),s._v(" 约束的列中插入 NULL 值，将会收到错误。")]),s._v(" "),a("p",[s._v("你也可以使用 "),a("code",[s._v("ALTER TABLE")]),s._v(" 语句在已有的表上添加 "),a("code",[s._v("NOT NULL")]),s._v(" 约束。例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MODIFY")]),s._v(" Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在这个例子中，现有的 "),a("code",[s._v("Customers")]),s._v(" 表的 "),a("code",[s._v("Name")]),s._v(" 列被修改为不接受 NULL 值。如果 "),a("code",[s._v("Name")]),s._v(" 列中已有 NULL 值，你将无法添加 "),a("code",[s._v("NOT NULL")]),s._v(" 约束，除非你首先更改这些 NULL 值。")]),s._v(" "),a("h2",{attrs:{id:"sql-unique-约束sql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-unique-约束sql"}},[s._v("#")]),s._v(" SQL UNIQUE 约束SQL")]),s._v(" "),a("p",[s._v("在 SQL 中，"),a("code",[s._v("UNIQUE")]),s._v(" 约束确保所有在一列中的值都是唯一的。")]),s._v(" "),a("p",[s._v("当创建表时，你可以使用 "),a("code",[s._v("UNIQUE")]),s._v(" 约束，例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" Customers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    ID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Email "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    Address "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    City "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在这个例子中，"),a("code",[s._v("Email")]),s._v(" 列必须包含唯一值。如果你尝试插入与现有值重复的值，你会收到一个错误。")]),s._v(" "),a("p",[s._v("你也可以在已存在的表上添加 "),a("code",[s._v("UNIQUE")]),s._v(" 约束。例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在这个例子中，"),a("code",[s._v("Customers")]),s._v(" 表的 "),a("code",[s._v("Email")]),s._v(" 列被添加了 "),a("code",[s._v("UNIQUE")]),s._v(" 约束。如果 "),a("code",[s._v("Email")]),s._v(" 列中已有重复值，你将无法添加 "),a("code",[s._v("UNIQUE")]),s._v(" 约束，除非你首先更改这些重复的值。")]),s._v(" "),a("p",[s._v("还可以在多个列上定义一个 "),a("code",[s._v("UNIQUE")]),s._v(" 约束，这被称为复合 "),a("code",[s._v("UNIQUE")]),s._v(" 约束。例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" Customers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    ID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    FirstName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    LastName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONSTRAINT")]),s._v(" uc_Customer "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("FirstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("在这个例子中，"),a("code",[s._v("FirstName")]),s._v(" 和 "),a("code",[s._v("LastName")]),s._v(" 列的组合必须是唯一的。")]),s._v(" "),a("h2",{attrs:{id:"create-index-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-index-语句"}},[s._v("#")]),s._v(" CREATE INDEX 语句")]),s._v(" "),a("p",[s._v("在 SQL 中，索引用于加速查询性能，特别是对于大量数据的表，索引可以极大地提高查询效率。")]),s._v(" "),a("p",[a("code",[s._v("CREATE INDEX")]),s._v(" 语句用于在一个表上创建索引。基本的语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("index_name")]),s._v(" 是你为新索引选择的名字。")]),s._v(" "),a("li",[a("code",[s._v("table_name")]),s._v(" 是你想在上面创建索引的表的名字。")]),s._v(" "),a("li",[a("code",[s._v("column1, column2, ...")]),s._v(" 是你想在上面创建索引的列的名字。")])]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" idx_lastname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" Customers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在这个例子中，我们在 "),a("code",[s._v("Customers")]),s._v(" 表的 "),a("code",[s._v("LastName")]),s._v(" 列上创建了一个名为 "),a("code",[s._v("idx_lastname")]),s._v(" 的索引。这意味着数据库会对 "),a("code",[s._v("LastName")]),s._v(" 列进行排序，并为每个值保留一个指针，从而加快对 "),a("code",[s._v("LastName")]),s._v(" 列的查询。")]),s._v(" "),a("p",[s._v("注意，索引可以极大地提高查询速度，但创建和维护索引也需要时间，特别是对于大量数据的表，插入、更新和删除操作可能会变慢，因为每次对表的修改都需要更新索引。因此，是否创建索引需要根据具体情况权衡。")]),s._v(" "),a("p",[s._v("此外，还有一些特殊类型的索引，例如唯一索引、全文索引等，它们的创建方式略有不同，你可能需要查阅具体的数据库文档来了解如何创建这些特殊类型的索引。")]),s._v(" "),a("h2",{attrs:{id:"with-recursive递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#with-recursive递归"}},[s._v("#")]),s._v(" WITH RECURSIVE递归")]),s._v(" "),a("p",[a("code",[s._v("WITH RECURSIVE")]),s._v(" 是一种在 SQL 查询中使用的关键字组合，用于创建递归公共表达式（Recursive CTE，Common Table Expression）。递归公共表达式允许您在查询中定义一个递归结构，通过多次迭代自身来构建结果集，特别适用于处理层次性数据结构，例如树形结构或图形结构。")]),s._v(" "),a("p",[s._v("基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" RECURSIVE cte_name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 初始查询部分")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 递归查询部分")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" cte_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" cte_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("cte_name")]),s._v("：递归公共表达式的名称，用于在迭代中引用它自己。")]),s._v(" "),a("li",[a("code",[s._v("column_list")]),s._v("：指定要返回的列。")]),s._v(" "),a("li",[s._v("初始查询部分：在 "),a("code",[s._v("SELECT ...")]),s._v(" 子句中定义初始查询。")]),s._v(" "),a("li",[s._v("递归查询部分：在 "),a("code",[s._v("SELECT ... FROM cte_name JOIN ...")]),s._v(" 子句中定义递归查询，通常是将 "),a("code",[s._v("cte_name")]),s._v(" 与其他表联接，并定义终止条件。")])]),s._v(" "),a("p",[s._v("例如：处理树形结构")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" sys_depart "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 部门ID")]),s._v("\n    parent_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 父级部门ID，如果为顶级部门则为NULL")]),s._v("\n    depart_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 部门名称")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("1、我们希望通过一个 id=1 的查询，获取其所有子节点的信息。这些子节点是与 id=1 相关联的节点。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" RECURSIVE RecursiveCTE "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n\t\tid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\tparent_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\tdepart_name\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n\t\tsys_depart \n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v("\n\t\tid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v("\n\t\tsd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\tsd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\tsd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("depart_name\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("\n\t\tsys_depart sd\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" RecursiveCTE rc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id \n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" RecursiveCTE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("2、查询部门及其父级部门，构建出部门层级关系")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" RECURSIVE RecursiveCTE "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" parent_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" depart_name\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" sys_depart\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("depart_name\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" sys_depart sd\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" RecursiveCTE rc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" RecursiveCTE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("上述示例从 "),a("code",[s._v("sys_depart")]),s._v(" 表中递归地查询部门及其父级部门，构建出部门层级关系。")])])}),[],!1,null,null,null);a.default=n.exports}}]);