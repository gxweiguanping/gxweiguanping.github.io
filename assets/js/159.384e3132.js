(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{489:function(s,a,t){"use strict";t.r(a);var r=t(8),e=Object(r.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mq引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mq引言"}},[s._v("#")]),s._v(" MQ引言")]),s._v(" "),a("h2",{attrs:{id:"什么是mq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是mq"}},[s._v("#")]),s._v(" 什么是MQ")]),s._v(" "),a("p",[s._v("MQ(Message Quene) :  翻译为消息队列,通过典型的生产者和消费者模型,生产者不断向消息队列中生产消息，消费者不断的从队列中获取消息。")]),s._v(" "),a("p",[s._v("因为"),a("code",[s._v("消息的生产和消费都是异步的")]),s._v("，而且只关心消息的发送和接收，没有业务逻辑的侵入,轻松的实现系统间解耦。")]),s._v(" "),a("p",[s._v("别名为 "),a("code",[s._v("消息中间件")]),s._v("通过利用高效可靠的消息传递机制进行平台无关的数据交流，并基于数据通信来进行分布式系统的集成。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Producer")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Queue")]),s._v("                     "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Consumer")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  produce "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("                        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  consume "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Message")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Queue")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("                        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"mq有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mq有哪些"}},[s._v("#")]),s._v(" MQ有哪些")]),s._v(" "),a("p",[s._v("当今市场上有许多主流的消息中间件可供选择。其中包括老牌的ActiveMQ和RabbitMQ，它们已经在行业中建立了良好的声誉。此外，Kafka也备受瞩目，成为了炙手可热的选择。另外，阿里巴巴还自主开发了RocketMQ，也是一款备受关注的消息中间件。这些消息中间件都具有各自的特点和优势，可以根据具体需求来选择最适合的解决方案。")]),s._v(" "),a("h2",{attrs:{id:"不同mq特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同mq特点"}},[s._v("#")]),s._v(" 不同MQ特点")]),s._v(" "),a("ol",[a("li",[s._v("ActiveMQ是一款老牌的消息中间件，完全支持JMS规范，具有丰富的API和多种集群架构模式。在中小型企业中广受欢迎。")]),s._v(" "),a("li",[s._v("Kafka是一款分布式发布-订阅消息系统，追求高吞吐量，适用于大量数据的互联网服务的数据收集业务。不支持事务，对消息的重复、丢失、错误要求较低。")]),s._v(" "),a("li",[s._v("RocketMQ是阿里开源的消息中间件，具有高吞吐量、高可用性的特点。对消息的可靠传输及事务性进行了优化，广泛应用于交易、充值、流计算、消息推送等场景。")]),s._v(" "),a("li",[s._v("RabbitMQ是使用Erlang语言开发的开源消息队列系统，基于AMQP协议实现。适用于对数据一致性、稳定性和可靠性要求较高的企业系统。")])]),s._v(" "),a("p",[s._v("总体而言，RabbitMQ较为可靠，适用于对数据一致性要求高的场景；Kafka适用于高吞吐量的处理，一般应用在大数据日志处理或对实时性、可靠性要求稍低的场景；RocketMQ具有高吞吐量和高可用性，适用于大规模分布式系统应用。")])])}),[],!1,null,null,null);a.default=e.exports}}]);