(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{359:function(s,t,a){"use strict";a.r(t);var n=a(8),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"垃圾收集算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集算法"}},[s._v("#")]),s._v(" 垃圾收集算法")]),s._v(" "),t("p",[s._v("在堆里存放着几乎所有的Java对象实例，在GC执行垃圾回收之前，首先需要区分出内存中"),t("code",[s._v("哪些是存活对象")]),s._v("，"),t("code",[s._v("哪些是已经死亡的对象")]),s._v("。只有被标记为己经死亡的对象，GC才会在执行垃圾回收时，释放掉其所占用的内存空间，因此这个过程我们可以称为"),t("code",[s._v("垃圾标记阶段")]),s._v("。")]),s._v(" "),t("p",[s._v("那么在JVM中究竟是如何标记一个死亡对象呢？简单来说，当一个对象已经不再被任何的存活对象继续引用时，就可以宣判为已经死亡。")]),s._v(" "),t("p",[s._v("判断对象存活一般有两种方式："),t("code",[s._v("引用计数算法")]),s._v("和"),t("code",[s._v("可达性分析算法")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"标记阶段-引用计数算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标记阶段-引用计数算法"}},[s._v("#")]),s._v(" 标记阶段：引用计数算法")]),s._v(" "),t("blockquote",[t("p",[s._v("引用计数是历史最悠久的一种算法，最早George E. Collins在1960的时候首次提出，60年后的今天，该算法依然被很多编程语言使用。")])]),s._v(" "),t("p",[t("code",[s._v("在实际的Java虚拟机中，引用计数法并不是主要的垃圾回收算法。")])]),s._v(" "),t("h4",{attrs:{id:"基本思想"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本思想"}},[s._v("#")]),s._v(" "),t("strong",[s._v("基本思想")])]),s._v(" "),t("p",[s._v("假设有一个对象A，任何一个对象对A的引用，那么对象A的 引用计数器+1，当引用失败时，对象A的引用计数器就-1，如果对象A的计数器的值为0，就说明对象A没有引用了，可以被回收。")]),s._v(" "),t("h4",{attrs:{id:"优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[s._v("#")]),s._v(" "),t("strong",[s._v("优缺点")])]),s._v(" "),t("p",[t("strong",[s._v("优点：")])]),s._v(" "),t("ul",[t("li",[s._v("实时性较高，无需等到内存不够的时候，才开始回收，"),t("code",[s._v("运行时根据对象的计数器是否为0，就可以直接回收")]),s._v("。")]),s._v(" "),t("li",[s._v("在垃圾回收过程中，"),t("code",[s._v("应用无需挂起")]),s._v("。如果申请内存时，内存不足，则立刻报outofmemory 错误。")]),s._v(" "),t("li",[s._v("区域性，更新对象的计数器时，只是影响到该对象，不会扫描全部对象。")])]),s._v(" "),t("p",[t("strong",[s._v("缺点：")])]),s._v(" "),t("ul",[t("li",[s._v("每次对象被引用时，都需要去更新计数器，有一点时间开销。")]),s._v(" "),t("li",[s._v("浪费CPU资源，即使内存够用，仍然在运行时进行计数器的统计。")]),s._v(" "),t("li",[t("code",[s._v("无法解决循环引用问题")]),s._v("：如果存在循环引用（对象之间形成一个环状结构），那么引用计数器永远不会变为零，这些对象将无法被回收，导致内存泄漏。（最大的缺点）")])]),s._v(" "),t("h4",{attrs:{id:"什么是循环引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是循环引用"}},[s._v("#")]),s._v(" 什么是循环引用？")]),s._v(" "),t("p",[s._v("假设有两个类：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Person")]),s._v("和"),t("code",[s._v("Car")]),s._v("，它们之间形成了循环引用。")]),s._v(" "),t("li",[t("code",[s._v("Person")]),s._v("类有一个成员变量"),t("code",[s._v("car")]),s._v("，用来引用"),t("code",[s._v("Car")]),s._v("对象。")]),s._v(" "),t("li",[t("code",[s._v("Car")]),s._v("类有一个成员变量"),t("code",[s._v("owner")]),s._v("，用来引用"),t("code",[s._v("Person")]),s._v("对象。")])]),s._v(" "),t("p",[s._v("这样，"),t("code",[s._v("Person")]),s._v("对象和"),t("code",[s._v("Car")]),s._v("对象之间形成了一个循环引用关系。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230725150159600.png",alt:"image-20230725150159600"}})]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),s._v(" car"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setCar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),s._v(" car"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("car "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" car"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" owner"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setOwner")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" owner"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("owner "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" owner"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("现在，我们创建两个对象"),t("code",[s._v("person")]),s._v("和"),t("code",[s._v("car")]),s._v("，并相互引用：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @Description -XX:+PrintGCDetails\n * @Author MrWei\n * @Date 2023/8/20 13:32\n **/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ReferenceCounting")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" person "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),s._v(" car "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setCar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("car"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        car"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setOwner")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时person和car形成了循环引用")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// System.gc();")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("在这个例子中，"),t("code",[s._v("person")]),s._v("对象持有对"),t("code",[s._v("car")]),s._v("对象的引用，同时"),t("code",[s._v("car")]),s._v("对象持有对"),t("code",[s._v("person")]),s._v("对象的引用，它们之间形成了循环引用。由于引用计数法需要维护引用计数器，当"),t("code",[s._v("person")]),s._v("和"),t("code",[s._v("car")]),s._v("相互引用时，它们的"),t("code",[s._v("引用计数器永远不会变为零")]),s._v("，即使它们不再被其他对象引用，也不会被垃圾回收。")]),s._v(" "),t("h4",{attrs:{id:"反证java虚拟机没有使用引用计数法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反证java虚拟机没有使用引用计数法"}},[s._v("#")]),s._v(" 反证Java虚拟机没有使用引用计数法")]),s._v(" "),t("p",[s._v("我们只需要分析GC的处理日志就可以看到，在我们进行显式指定进行垃圾回收后，"),t("code",[s._v("eden区的空间占用明显减少了")]),s._v("，这就证明了上面的"),t("code",[s._v("person")]),s._v("对象和"),t("code",[s._v("car")]),s._v("对象已经被回到了，"),t("code",[s._v("如果java虚拟机使用的是引用计数法，那么它应该是不能被回收的")]),s._v("。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230820133420511.png",alt:"image-20230820133420511"}})]),s._v(" "),t("p",[s._v("指定进行垃圾回收后")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230820133609345.png",alt:"image-20230820133609345"}})]),s._v(" "),t("h3",{attrs:{id:"标记阶段-可达性分析算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标记阶段-可达性分析算法"}},[s._v("#")]),s._v(" 标记阶段：可达性分析算法")]),s._v(" "),t("h4",{attrs:{id:"基本思想-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本思想-2"}},[s._v("#")]),s._v(" 基本思想")]),s._v(" "),t("p",[s._v("这个算法的基本思路就是通过一系列称为“GC Roots”的根对象作为起始节点集，从这些节点开始，根据引用关系向下搜索，搜索过程所走过的路径称为“引用链”（Reference Chain），如果某个对象到GC Roots间没有任何引用链相连，或者用图论的话来说就是从GC Roots到这个对象不可达时，则证明此对象是不可能再被使用的。")]),s._v(" "),t("p",[s._v("如下图所示，对象object 5、object 6、object 7虽然互有关联，但是它们到GC Roots是不可达的，因此它们将会被判定为可回收的对象。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230820162733271.png",alt:"image-20230820162733271"}})]),s._v(" "),t("p",[t("strong",[s._v("在Java技术体系中，固定可作为GC Roots的对象包括以下几种：")])]),s._v(" "),t("ul",[t("li",[s._v("虚拟机栈中引用的对象 （栈帧的本地变量表），比如：各个线程被调用的方法中使用到的参数、局部变量、临时变量等。")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// obj是虚拟机栈中引用的对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("本地方法栈内JNI（通常说的本地方法）引用的对象")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("native")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nativeMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nativeMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// nativeMethod中使用JNI引用的对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("方法区中类静态属性引用的对象，比如：Java的引用类型静态变量")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// obj是方法区中类静态属性引用的对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("方法区中常量引用的对象 ，比如：字符串常量池（String Table）里的引用")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// str是方法区中常量引用的对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("所有被同步锁synchronized持有的对象")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// this是被同步锁持有的对象")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("Java虚拟机内部的引用。 基本数据类型对应的Class对象，一些常驻的异常对象（如：NullPointerException、OutOfMemoryError），系统类加载器。")])]),s._v(" "),t("li",[t("p",[s._v("反映java虚拟机内部情况的JMXBean、JVMTI中注册的回调、本地代码缓存等。")])])]),s._v(" "),t("p",[s._v("除了这些固定的GC Roots集合以外，根据"),t("code",[s._v("用户所选用的垃圾收集器")]),s._v("以及"),t("code",[s._v("当前回收的内存区域不同")]),s._v("，还可以有其他对象"),t("code",[s._v("临时性")]),s._v("地加入，共同构成完整GC Roots集合。")]),s._v(" "),t("p",[s._v("比如："),t("code",[s._v("分代收集")]),s._v("和"),t("code",[s._v("局部回收（PartialGC）")]),s._v("。")]),s._v(" "),t("p",[s._v("如果只针对Java堆中某一块区域发起垃圾收集时（如最典型的只针对新生代的垃圾收集），必须考虑到内存区域是虚拟机自己的实现细节（在用户视角里任何内存区域都是不可见的），更不是孤立封闭的，所以某个区域里的对象完全有可能被位于堆中其他区域的对象所引用，这时候就需要将这些关联区域的对象也一并加入GC Roots集合中去，才能保证可达性分析的正确性。")]),s._v(" "),t("p",[t("strong",[s._v("大白话解释：")])]),s._v(" "),t("p",[s._v("当针对Java堆中的某一块区域进行垃圾收集时，需要考虑到内存区域之间的关联关系，以确保可达性分析的正确性。")]),s._v(" "),t("p",[s._v("假设我们使用的是分代垃圾收集器，其中包括新生代和老年代两个区域。在新生代中，有一个"),t("code",[s._v("对象A")]),s._v("被引用，并且在老年代中有一个"),t("code",[s._v("对象B")]),s._v("引用了"),t("code",[s._v("对象A")]),s._v("。此时，如果只对新生代进行垃圾收集，那么"),t("code",[s._v("对象A")]),s._v("将被标记"),t("code",[s._v("为可回收的垃圾对象")]),s._v("，因为在新生代中没有其他引用指向它。")]),s._v(" "),t("p",[s._v("然而，由于"),t("code",[s._v("对象B")]),s._v("位于老年代中，它仍然引用着"),t("code",[s._v("对象A")]),s._v("。如果不考虑跨区域的引用关系，将"),t("code",[s._v("对象A")]),s._v("回收，就会导致"),t("code",[s._v("对象B")]),s._v("引用了一个无效的对象，可能会"),t("code",[s._v("导致程序出现错误")]),s._v("。")]),s._v(" "),t("p",[s._v("因此，在进行垃圾收集时，需要将关联区域的对象一并加入GC Roots集合中，以确保可达性分析的正确性。在这个例子中，对象B所在的老年代也需要被考虑在内，以保证对象A的可达性。")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("p",[s._v("如果要使用可达性分析算法来判断内存是否可回收，那么分析工作必须在一个能保障一致性的快照中进行。这点不满足的话分析结果的准确性就无法保证。")]),s._v(" "),t("p",[s._v("这点也是导致GC进行时必须"),t("code",[s._v("stop The World")]),s._v("的一个重要原因。即使是"),t("code",[s._v("号称（几乎）不会发生停顿的CMS收集器")]),s._v("中，枚举根节点时也是必须要停顿的。")])]),s._v(" "),t("h3",{attrs:{id:"对象的finalization机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象的finalization机制"}},[s._v("#")]),s._v(" 对象的finalization机制")]),s._v(" "),t("blockquote",[t("p",[s._v("对象的finalization机制是Java中的一种垃圾回收机制，用于在对象被垃圾收集器回收之前执行一些清理操作。当一个对象不再被引用时，垃圾收集器会将其标记为可回收的垃圾对象。在对象被回收之前，会先调用它的finalize()方法。")])]),s._v(" "),t("p",[s._v("finalize()方法是Object类中定义的一个方法，所有的Java对象都可以继承它。它的默认实现是空方法，即什么也不做。在finalize()方法中，可以进行一些清理操作，例如"),t("code",[s._v("关闭文件")]),s._v("、"),t("code",[s._v("释放资源")]),s._v("等。")]),s._v(" "),t("p",[s._v("永远不要主动调用某个对象的finalize()方法I应该交给垃圾回收机制调用。理由包括下面三点：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在finalize()时可能会导致对象复活。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("finalize()方法的执行时间是没有保障的，它完全由GC线程决定，极端情况下，若不发生GC，则finalize()方法将没有执行机会")]),s._v("。")])]),s._v(" "),t("li",[t("p",[s._v("一个糟糕的finalize()会严重影响GC的性能。")])])]),s._v(" "),t("h4",{attrs:{id:"虚拟机中的对象三种可能状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机中的对象三种可能状态"}},[s._v("#")]),s._v(" 虚拟机中的对象三种可能状态")]),s._v(" "),t("p",[s._v("由于finalize()方法的存在，"),t("code",[s._v("虚拟机中的对象一般处于三种可能的状态")]),s._v("。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("虚拟机中的对象状态")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("可触及的")])]),s._v(" "),t("td",[s._v("从根节点开始，可以通过一系列引用链到达这个对象。这意味着对象仍然被活动的引用所引用，因此可能被垃圾收集器回收。")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("可复活的")])]),s._v(" "),t("td",[s._v("当对象的所有引用都被释放时，对象进入可复活状态。此时，对象的finalize()方法可能会被调用。在finalize()方法中，对象有机会重新被引用，从而使其变为可触及状态。如果对象在finalize()方法中被重新引用，那么它将不会被垃圾收集器回收。")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("不可触及的")])]),s._v(" "),t("td",[s._v("如果对象的finalize()方法被调用，并且没有被重新引用，那么对象将进入不可触及状态。不可触及的对象不再被任何活动的引用所引用，也不会再被finalize()方法调用。"),t("code",[s._v("这些对象将被垃圾收集器回收，释放内存资源")]),s._v("。")])])])]),s._v(" "),t("h4",{attrs:{id:"具体过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#具体过程"}},[s._v("#")]),s._v(" 具体过程")]),s._v(" "),t("p",[s._v("判定一个对象objA是否可回收，至少要经历两次标记过程：")]),s._v(" "),t("p",[s._v("1、如果对象objA到GC Roots没有引用链，则进行第一次标记。")]),s._v(" "),t("p",[s._v("2、进行筛选，判断此对象是否有必要执行finalize()方法")]),s._v(" "),t("p",[s._v("3、如果对象objA没有重写finalize()方法，或者finalize()方法已经被虚拟机调用过，则虚拟机视为“没有必要执行”，objA被判定为不可触及的。")]),s._v(" "),t("p",[s._v("4、如果对象objA重写了finalize()方法，且还未执行过，那么objA会被插入到F-Queue队列中，由一个虚拟机自动创建的、低优先级的Finalizer线程触发其finalize()方法执行。")]),s._v(" "),t("p",[s._v("5、finalize()方法是"),t("code",[s._v("对象逃脱死亡的最后机会")]),s._v("，稍后GC会对F-Queue队列中的对象进行第二次标记。如果objA在finalize()方法中与引用链上的任何一个对象建立了联系，那么在第二次标记时，objA会被移出"),t("code",[s._v("即将回收集合")]),s._v("。之后，对象会再次出现没有引用存在的情况。在这个情况下，finalize方法不会被再次调用，对象会直接变成不可触及的状态，也就是说，"),t("code",[s._v("一个对象的finalize方法只会被调用一次")]),s._v("。")]),s._v(" "),t("h4",{attrs:{id:"举例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[s._v("#")]),s._v(" 举例")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("jvm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("finalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @Description\n * @Author MrWei\n * @Date 2023/8/20 20:22\n **/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 类变量，属于GC Roots的一部分")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),s._v(" canReliveObj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"调用当前类重写的finalize()方法"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        canReliveObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("canReliveObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("canReliveObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-----------------第一次gc操作------------"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为Finalizer线程的优先级比较低，暂停2秒，以等待它")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("canReliveObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"对象不可触及"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"对象可触及"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-----------------第二次gc操作------------"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("canReliveObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下面代码和上面代码是一样的，但是 canReliveObj却自救失败了")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("canReliveObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"对象不可触及"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"对象可触及"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br")])]),t("p",[t("strong",[s._v("输出结果")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("第一次gc操作"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n对象不可触及\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("第二次gc操作"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n调用当前类重写的"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("方法\n对象可触及\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("在这个例子中，我们创建了一个名为"),t("code",[s._v("CanReliveObj")]),s._v("的类。在"),t("code",[s._v("finalize()")]),s._v("方法中，我们将"),t("code",[s._v("canReliveObj")]),s._v("重新赋值为当前对象，这样在垃圾回收之前，对象有可能复活。在"),t("code",[s._v("main()")]),s._v("方法中，我们首先将"),t("code",[s._v("canReliveObj")]),s._v("引用置为null，然后调用"),t("code",[s._v("System.gc()")]),s._v("进行垃圾回收。在第一次垃圾回收之后，我们暂停2秒钟等待Finalizer线程执行，然后判断"),t("code",[s._v("canReliveObj")]),s._v("是否为null。如果对象复活成功，那么"),t("code",[s._v("canReliveObj")]),s._v("不为null，否则为null。接着，我们再次将"),t("code",[s._v("canReliveObj")]),s._v("置为null，进行第二次垃圾回收，最后再次判断"),t("code",[s._v("canReliveObj")]),s._v("是否为null。根据输出结果，我们可以看到第一次垃圾回收之后，对象成功复活，但是第二次垃圾回收之后，对象未能复活，最终被回收。")]),s._v(" "),t("h3",{attrs:{id:"jprofiler的gc-roots溯源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jprofiler的gc-roots溯源"}},[s._v("#")]),s._v(" JProfiler的GC Roots溯源")]),s._v(" "),t("p",[s._v("我们在实际的开发中，一般不会查找全部的GC Roots，可能只是查找某个对象的整个链路，或者称为GC Roots溯源，这个时候，我们就可以使用JProfiler。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230820211114079.png",alt:"image-20230820211114079"}})]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @Description\n * @Author MrWei\n * @Date 2023/8/20 20:46\n **/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MemoryLeakExample")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" objects "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" object "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            objects"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"数据加载完成了"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("h3",{attrs:{id:"清除阶段-标记-清除算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除阶段-标记-清除算法"}},[s._v("#")]),s._v(" 清除阶段：标记-清除算法")]),s._v(" "),t("h4",{attrs:{id:"基本思想-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本思想-3"}},[s._v("#")]),s._v(" 基本思想")]),s._v(" "),t("p",[s._v("标记清除算法是将垃圾回收分为2个阶段，分别是标记和清除。")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("标记阶段（Marking Phase）：")]),s._v(" 在这个阶段，垃圾回收器会从根对象开始，通过可达性分析标记所有从根对象可达的对象。通常，根对象包括程序中的全局变量、静态变量以及活动线程的栈上的对象。")]),s._v(" "),t("li",[t("strong",[s._v("清除阶段（Sweeping Phase）：")]),s._v(" 在标记阶段之后，垃圾回收器会遍历整个堆内存，检查每个对象的标记状态。如果一个对象没有被标记为可达，即意味着它是垃圾对象，将会被回收。")]),s._v(" "),t("li",[t("strong",[s._v("回收阶段：")]),s._v(" 在清除阶段，标记为垃圾的对象会被回收，并将内存空间释放回可用的内存池，以供后续的对象分配使用。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230821144832534.png",alt:"image-20230821144832534"}})]),s._v(" "),t("p",[s._v("上面这张图代表的是程序运行期间所有对象的状态，假设这会儿有效内存空间耗尽了，JVM将会停止应用程序的运行并开启GC线程，然后开始进行标记工作，按照根搜索算法，标记完以后，所有从root对象可达的对象就被标记为了存活的对象，此时已经完成了第一阶段标记。")]),s._v(" "),t("p",[s._v("接下来，就要执行第二阶段清除了，那么清除完以后，剩下的对象以及对象的状态如下图所示 ：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230821145029953.png",alt:"image-20230821145029953"}})]),s._v(" "),t("p",[s._v("可以看到，没有被标记的对象将会回收清除掉，而被标记的对象将会留下，并且会将标记位重新归0。接下来就不用说了，唤醒停止的程序线程，让程序继续运行即可。")]),s._v(" "),t("h4",{attrs:{id:"优缺点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点-2"}},[s._v("#")]),s._v(" "),t("strong",[s._v("优缺点")])]),s._v(" "),t("p",[t("strong",[s._v("优点")])]),s._v(" "),t("ul",[t("li",[s._v("**解决循环引用问题：**标记清除算法解决了引用计数算法中的循环引用的问题，没有从root节点引用的对象都会被回收。")])]),s._v(" "),t("p",[t("strong",[s._v("缺点")])]),s._v(" "),t("ul",[t("li",[s._v("**效率较低：**标记和清除两个动作都需要遍历所有的对象，并且在GC时，需要"),t("code",[s._v("停止应用程序")]),s._v("，对于交互性要求比较高的应用而言这个体验是非常差的。")]),s._v(" "),t("li",[t("strong",[s._v("产生内存碎片：")]),s._v(" 通过标记清除算法清理出来的内存，"),t("code",[s._v("碎片化")]),s._v("较为严重，被回收的对象可能存在于内存的各个角落，所以清理出来的"),t("code",[s._v("内存是不连贯")]),s._v("的。这可能会导致后续内存分配的效率降低，尤其是大对象难以找到足够的连续空间。")])]),s._v(" "),t("h3",{attrs:{id:"清除阶段-标记-复制算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除阶段-标记-复制算法"}},[s._v("#")]),s._v(" 清除阶段：标记-复制算法")]),s._v(" "),t("p",[s._v("复制算法的核心就是，将可用内存按容量划分为大小相等的两块，每次只用其中的一块，在垃圾回收时，将存活着的对象复制到另一个内存空间中，然后将该内存空间清空，交换两个内存的角色，完成垃圾的回收。")]),s._v(" "),t("p",[s._v("如果内存中的垃圾对象较多，需要复制的对象就较少，这种情况下适合使用该方式并且效率比较高，反之，则不适合。")]),s._v(" "),t("h4",{attrs:{id:"基本思想-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本思想-4"}},[s._v("#")]),s._v(" 基本思想")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230821145620919.png",alt:"image-20230821145620919"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230821145933619.png",alt:"image-20230821145933619"}})]),s._v(" "),t("h4",{attrs:{id:"优缺点-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点-3"}},[s._v("#")]),s._v(" "),t("strong",[s._v("优缺点")])]),s._v(" "),t("p",[t("strong",[s._v("优点")])]),s._v(" "),t("ul",[t("li",[s._v("高效的内存回收： 由于只需简单地复制存活对象，标记-复制算法通常能够快速回收垃圾，避免了标记清除算法中的迭代查找过程。")]),s._v(" "),t("li",[s._v("解决碎片化问题： 标记-复制算法有效地解决了内存碎片化问题，通过将存活对象复制到一块新的连续内存区域，避免了碎片问题。")]),s._v(" "),t("li",[s._v("连续内存分配： 复制过程后留下的内存空间是连续的，这有助于后续的内存分配，提高了内存分配的效率。")])]),s._v(" "),t("p",[t("strong",[s._v("缺点")])]),s._v(" "),t("ul",[t("li",[s._v("浪费一半空间： 在标记-复制算法中，需要保留一块与原内存区域同样大小的空间作为目标区域，因此会浪费一半的内存空间。")]),s._v(" "),t("li",[s._v("对象复制开销：需要将存活对象从原内存复制到目标内存，这会产生额外的内存和计算开销。")])]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("p",[s._v("如果内存中多数对象都是存活的，这种算法将会产生大量的内存间复制的开销，但对于多数对象都是可回收的情况，算法需要复制的就是占少数的存活对象。")])]),s._v(" "),t("h3",{attrs:{id:"清除阶段-标记-整理算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除阶段-标记-整理算法"}},[s._v("#")]),s._v(" 清除阶段：标记-整理算法")]),s._v(" "),t("h4",{attrs:{id:"基本思想-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本思想-5"}},[s._v("#")]),s._v(" 基本思想")]),s._v(" "),t("p",[s._v("标记压缩算法是在"),t("code",[s._v("标记清除算法的基础之上")]),s._v("，做了优化改进的算法。和标记清除算法一样，也是从根节点开始，对对象的引用进行标记，在清理阶段，并不是简单的清理未标记的对象，而是将存活的对象压缩到内存的一端，然后清理边界以外的垃圾，从而解决了碎片化的问题。")]),s._v(" "),t("p",[s._v("标记-压缩法的步骤：")]),s._v(" "),t("ol",[t("li",[s._v("标记阶段（Marking Phase）： 在这个阶段，垃圾回收器会从根对象开始，通过可达性分析标记所有从根对象可达的对象。通常，根对象包括程序中的全局变量、静态变量以及活动线程的栈上的对象。与标记-清除法类似，此阶段标记所有存活的对象。")]),s._v(" "),t("li",[s._v("压缩阶段（Compacting Phase）： 在标记阶段之后，垃圾回收器会遍历整个堆内存，将所有存活的对象压缩到堆内存的一端。这个过程会消除堆内存中的碎片，使得堆内存变得更加连续。")]),s._v(" "),t("li",[s._v("回收阶段： 在压缩阶段，标记为垃圾的对象会被回收，并将内存空间释放回可用的内存池，以供后续的对象分配使用。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230821144832534.png",alt:"image-20230821144832534"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230821151741332.png",alt:"image-20230821151741332"}})]),s._v(" "),t("h4",{attrs:{id:"指针碰撞-bump-the-pointer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指针碰撞-bump-the-pointer"}},[s._v("#")]),s._v(" 指针碰撞（Bump the Pointer）")]),s._v(" "),t("p",[s._v("如果内存空间以规整和有序的方式分布，即已用和未用的内存都各自一边，彼此之间维系着一个记录下一次分配起始点的标记指针，当为新对象分配内存时，只需要通过修改指针的偏移量将新对象分配在第一个空闲内存位置上，这种分配方式就叫做指针碰撞（Bump tHe Pointer）。")]),s._v(" "),t("h4",{attrs:{id:"优缺点-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点-4"}},[s._v("#")]),s._v(" "),t("strong",[s._v("优缺点")])]),s._v(" "),t("p",[t("strong",[s._v("优点")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("解决碎片化问题：")]),s._v(" 标记压缩算法能够有效地消除内存碎片，通过将存活对象紧凑排列，提供更大的连续内存块。")]),s._v(" "),t("li",[t("strong",[s._v("改善内存分配效率：")]),s._v(" 标记压缩算法可以提供更多的连续内存空间，从而改善后续内存分配的效率。")])]),s._v(" "),t("p",[t("strong",[s._v("缺点")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("移动对象开销：")]),s._v(" 标记压缩算法需要将存活对象移动到紧凑的内存区域，这涉及到对象的复制和更新引用，可能会导致一些额外的计算开销。")]),s._v(" "),t("li",[t("strong",[s._v("暂停时间延长：")]),s._v(" 由于需要移动对象，标记压缩算法可能会引起较长的垃圾回收暂停时间，对某些应用的实时性能造成影响。")])]),s._v(" "),t("h3",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("维度")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("Mark-Sweep")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("Mark-Compact")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("Copying")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("速率")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("中等")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("最慢")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("最快")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("空间开销")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("少（但会堆积碎片）")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("少（不堆积碎片）")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("通常需要活对象的2倍空间（不堆积碎片）")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("移动对象")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("否")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("是")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("是")])])])]),s._v(" "),t("ol",[t("li",[s._v("复制算法（Copying）是效率最高的垃圾收集算法，但会浪费较多的内存。它将堆内存分为两个区域，每次只使用其中一个区域，将存活的对象复制到另一个区域，然后清空原区域。这样可以保证内存连续，不会产生碎片，但需要额外的空间来存储复制的对象。")]),s._v(" "),t("li",[s._v("标记-整理算法（Mark-Compact）在效率和空间开销方面相对平衡。它也有标记和清除的阶段，但在清除阶段会进行内存整理，将存活的对象向一端移动，然后清理掉边界之外的内存。这样可以减少碎片的产生，但整理过程会增加一定的时间开销。")]),s._v(" "),t("li",[s._v("标记-清除算法（Mark-Sweep）是最慢的垃圾收集算法，但空间开销较小。它也有标记和清除的阶段，但不进行内存整理。标记阶段标记出存活的对象，清除阶段清理掉未标记的对象。这样会产生大量的碎片，可能导致内存分配效率下降。")])]),s._v(" "),t("p",[s._v("综合来看，"),t("code",[s._v("复制算法适用于对象存活率较低的场景")]),s._v("，"),t("code",[s._v("标记-整理算法适用于对象存活率较高且希望减少碎片的场景")]),s._v("，"),t("code",[s._v("标记-清除算法适用于空间开销要求较低的场景")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"分代收集算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分代收集算法"}},[s._v("#")]),s._v(" 分代收集算法")]),s._v(" "),t("p",[s._v("前面所有这些算法中，并没有一种算法可以完全替代其他算法，它们都具有自己独特的优势和特点。分代收集算法应运而生。")]),s._v(" "),t("p",[s._v("分代收集算法，是基于这样一个事实：不同的对象的生命周期是不一样的。因此，"),t("code",[s._v("不同生命周期的对象可以采取不同的收集方式，以便提高回收效率")]),s._v("。一般是把Java堆分为新生代和老年代，这样就可以根据各个年代的特点使用不同的回收算法，以提高垃圾回收的效率。")]),s._v(" "),t("p",[s._v("在Java程序运行的过程中，会产生大量的对象，其中有些对象是与业务信息相关，比如Http请求中的Session对象、线程、Socket连接、单例对象，这类对象跟业务直接挂钩，因此生命周期比较长。")]),s._v(" "),t("p",[s._v("但是还有一些对象，主要是程序运行过程中生成的临时变量，这些对象生命周期会比较短，比如：String对象，由于其不变类的特性，系统会产生大量的这些对象，有些对象甚至只用一次即可回收。")]),s._v(" "),t("p",[t("code",[s._v("目前几乎所有的GC都采用分代收集算法执行垃圾回收的。")])]),s._v(" "),t("h4",{attrs:{id:"年轻代-young-gen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#年轻代-young-gen"}},[s._v("#")]),s._v(" 年轻代（Young Gen）")]),s._v(" "),t("p",[s._v("年轻代特点：区域相对老年代较小，对象生命周期短、存活率低，回收频繁。")]),s._v(" "),t("p",[s._v("这种情况复制算法的回收整理，速度是最快的。复制算法的效率只和当前存活对象大小有关，因此很适用于年轻代的回收。而复制算法内存利用率不高的问题，通过HotSpot中的两个survivor的设计得到缓解。")]),s._v(" "),t("h4",{attrs:{id:"老年代-tenured-gen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#老年代-tenured-gen"}},[s._v("#")]),s._v(" 老年代（Tenured Gen）")]),s._v(" "),t("p",[s._v("老年代特点：区域较大，对象生命周期长、存活率高，回收不及年轻代频繁。")]),s._v(" "),t("p",[s._v("这种情况存在大量存活率高的对象，复制算法明显变得不合适。一般是由"),t("code",[s._v("标记-清除")]),s._v("或者是"),t("code",[s._v("标记-清除")]),s._v("与"),t("code",[s._v("标记-整理")]),s._v("的混合实现。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Mark（标记）阶段的开销与存活对象的数量成正比。")])]),s._v(" "),t("li",[t("p",[s._v("Sweep（清除）阶段的开销与所管理区域的大小成正相关。")])]),s._v(" "),t("li",[t("p",[s._v("Compact（整理）阶段的开销与存活对象的数据成正比。")])])]),s._v(" "),t("p",[s._v("以HotSpot中的CMS回收器为例，CMS是基于Mark-Sweep实现的，对于对象的回收效率很高。而对于碎片问题，CMS采用基于Mark-Compact算法的Serial Old回收器作为补偿措施：当内存回收不佳（碎片导致的Concurrent Mode Failure时），将采用Serial Old执行Full GC以达到对老年代内存的整理。")]),s._v(" "),t("p",[t("code",[s._v("分代的思想被现有的虚拟机广泛使用。几乎所有的垃圾回收器都区分新生代和老年代。")])]),s._v(" "),t("h3",{attrs:{id:"增量收集算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增量收集算法"}},[s._v("#")]),s._v(" 增量收集算法")]),s._v(" "),t("p",[s._v("上述现有的算法，在垃圾回收过程中，应用软件将处于一种"),t("code",[s._v("Stop the World")]),s._v("的状态。在"),t("code",[s._v("Stop the World")]),s._v("状态下，应用程序所有的线程都会挂起，暂停一切正常的工作，等待垃圾回收的完成。如果垃圾回收时间过长，应用程序会被挂起很久，将严重影响用户体验或者系统的稳定性。为了解决这个问题，即对实时垃圾收集算法的研究直接导致了增量收集（Incremental Collecting）算法的诞生。")]),s._v(" "),t("h4",{attrs:{id:"基本思想-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本思想-6"}},[s._v("#")]),s._v(" 基本思想")]),s._v(" "),t("p",[s._v("如果一次性将所有的垃圾进行处理，需要造成系统长时间的停顿，那么就可以让垃圾收集线程和应用程序线程交替执行。每次，垃圾收集线程只收集一小片区域的内存空间，接着切换到应用程序线程。依次反复，直到垃圾收集完成。")]),s._v(" "),t("p",[s._v("总的来说，增量收集算法的基础仍是传统的标记-清除和复制算法。增量收集算法通过对线程间冲突的妥善处理，允许垃圾收集线程以分阶段的方式完成标记、清理或复制工作")]),s._v(" "),t("h4",{attrs:{id:"缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),t("p",[s._v("使用这种方式，由于在垃圾回收过程中，间断性地还执行了应用程序代码，所以能减少系统的停顿时间。但是，因为线程切换和上下文转换的消耗，会使得垃圾回收的总体成本上升，造成系统吞吐量的下降。")]),s._v(" "),t("h3",{attrs:{id:"分区算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分区算法"}},[s._v("#")]),s._v(" 分区算法")]),s._v(" "),t("p",[s._v("一般来说，在相同条件下，堆空间越大，一次GC时所需要的时间就越长，那么GC产生的停顿也越长。为了更好地控制GC产生的停顿时间，将一块大的内存区域分割成多个小块，根据目标的停顿时间，每次合理地回收若干个小区间，而不是整个堆空间，从而减少一次GC所产生的停顿。")]),s._v(" "),t("p",[s._v("分代算法将按照"),t("code",[s._v("对象的生命周期长短划分成两个部分")]),s._v("，分区算法将"),t("code",[s._v("整个堆空间划分成连续的不同小区间")]),s._v("。")]),s._v(" "),t("p",[s._v("每一个小区间都独立使用，独立回收。这种算法的好处是可以控制一次回收多少个小区间。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230828210956697.png",alt:"image-20230828210956697"}})]),s._v(" "),t("p",[s._v("在JVM的分区算法中，Humongous是一种特殊的分区类型，用于存储非常大的对象。")]),s._v(" "),t("p",[s._v("在JVM中，对象的大小通常被限制在一个较小的范围内，例如在年轻代中，对象的大小通常不超过Eden区的大小。然而，有时候会出现非常大的对象，它们的大小超过了年轻代的限制。")]),s._v(" "),t("p",[s._v("为了处理这种情况，JVM引入了Humongous分区。当一个对象的大小超过了年轻代的限制时，JVM会将该对象直接分配到Humongous分区中。Humongous分区通常位于老年代中，它可以容纳大型对象，并且不会受到年轻代的限制。")]),s._v(" "),t("p",[s._v("Humongous分区的存在可以避免将大型对象分配到年轻代中，从而减少了年轻代的垃圾回收频率。同时，Humongous分区也有助于提高大型对象的分配和回收效率。")])])}),[],!1,null,null,null);t.default=e.exports}}]);