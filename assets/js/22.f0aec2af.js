(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{352:function(a,s,t){"use strict";t.r(s);var n=t(8),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"本地方法栈和本地方法接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈和本地方法接口"}},[a._v("#")]),a._v(" 本地方法栈和本地方法接口")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230814144741134.png",alt:"image-20230814144741134"}})]),a._v(" "),s("h3",{attrs:{id:"本地方法栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈"}},[a._v("#")]),a._v(" 本地方法栈")]),a._v(" "),s("p",[a._v("本地方法栈（Native Method Stack）是 JVM 运行时数据区域之一，用于管理 Java 线程调用本地方法（Native Method）的执行情况。本地方法是使用其他编程语言（如 C、C++）编写的，通过 JNI（Java Native Interface）与 Java 代码进行交互。")]),a._v(" "),s("p",[a._v("以下是关于 JVM 本地方法栈的一些重要信息：")]),a._v(" "),s("ol",[s("li",[s("strong",[a._v("作用与特点：")]),a._v(" 本地方法栈主要用于管理本地方法的调用，它和 Java 虚拟机栈（Java Stack）类似，但是两者有明显的区别。"),s("code",[a._v("本地方法栈的主要任务是确保本地方法的调用和执行可以正确进行，以及提供对本地方法的参数传递、返回值和异常处理的支持")]),a._v("。")]),a._v(" "),s("li",[s("strong",[a._v("本地方法栈与 Java 虚拟机栈的区别：")]),a._v(" 虽然本地方法栈与 Java 虚拟机栈都用于管理方法的调用和执行，但两者之间存在区别。"),s("code",[a._v("Java 虚拟机栈主要用于执行 Java 方法，保存了方法的局部变量、操作数栈等信息")]),a._v("。而"),s("code",[a._v("本地方法栈用于执行本地方法，保存了本地方法的参数、返回值等信息")]),a._v("。本地方法栈通常不需要进行深度的方法调用，因此其内存占用和大小相对较小。")]),a._v(" "),s("li",[s("strong",[a._v("本地方法栈的异常：")]),a._v(" 与 Java 虚拟机栈类似，本地方法栈也可能发生"),s("code",[a._v("栈溢出异常（StackOverflowError）")]),a._v("和"),s("code",[a._v("内存不足异常（OutOfMemoryError）")]),a._v("。栈溢出通常由于本地方法递归调用过深造成，而内存不足异常则可能由于本地方法栈分配的内存超过了系统可用的本地内存资源。")])]),a._v(" "),s("p",[s("code",[a._v("并不是所有的JVM都支持本地方法。因为Java虚拟机规范并没有明确要求本地方法栈的使用语言、具体实现方式、数据结构等")]),a._v("。如果JVM产品不打算支持native方法，也可以无需实现本地方法栈。")]),a._v(" "),s("p",[a._v("在Hotspot JVM中，直接将本地方法栈和虚拟机栈合二为一。")]),a._v(" "),s("h3",{attrs:{id:"本地接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地接口"}},[a._v("#")]),a._v(" 本地接口")]),a._v(" "),s("p",[s("strong",[a._v("本地接口（Java Native Interface，JNI）：")]),a._v(" 本地接口是 Java 提供的一种机制，允许 Java 代码与其他编程语言编写的本地代码进行交互。通过 JNI，Java 程序可以调用本地代码中的函数，也可以将 Java 对象传递给本地代码，实现 Java 与本地代码的互操作。JNI 提供了一组标准的 API，允许 Java 代码通过本地方法来访问本地库中的函数。")]),a._v(" "),s("p",[a._v("以下是一个简单的 JNI 示例，展示了如何在 Java 中调用本地代码：")]),a._v(" "),s("p",[s("strong",[a._v("1、创建本地库源代码：")])]),a._v(" "),s("p",[a._v("假设我们有一个名为 "),s("code",[a._v("MyNativeLibrary")]),a._v(" 的本地库，其中包含一个 C 函数 "),s("code",[a._v("printHello")]),a._v('，用于在控制台打印 "Hello, JNI!"。')]),a._v(" "),s("p",[a._v("我们需要将这个本地库放置在适当的位置，以便 Java 程序可以正确地加载和调用它。")]),a._v(" "),s("p",[a._v("假设我们的项目结构如下：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("MyJavaProject/\n├── src/\n│   ├── main/\n│   │   ├── java/\n│   │   │   └── MyJavaProgram.java\n│   │   └── c/\n│   │       ├── MyNativeLibrary.c\n│   │       └── MyNativeLibrary.h\n└── target/\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("p",[s("code",[a._v("MyJavaProgram.java")]),a._v(" 是我们的 Java 程序，它调用了 "),s("code",[a._v("MyNativeLibrary")]),a._v(" 中的本地方法。")]),a._v(" "),s("p",[s("code",[a._v("MyNativeLibrary.c")]),a._v(" 包含了本地方法的实现，如下所示：")]),a._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// MyNativeLibrary.c")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// 本地库源代码示例，包含一个简单的函数用于在控制台输出 "Hello, JNI!"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 包含标准输入输出头文件，用于打印信息到控制台")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("<stdio.h>")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 包含 JNI 头文件，用于与 Java 代码进行交互")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MyNativeLibrary.h"')])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 实现 Java_MyNativeLibrary_printHello 函数")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 该函数在 Java 中声明为 native，并与本地库中的对应函数绑定")]),a._v("\nJNIEXPORT "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" JNICALL "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Java_MyNativeLibrary_printHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("JNIEnv "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" jobject obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// 在控制台输出 "Hello, JNI!"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello, JNI!\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br")])]),s("p",[s("strong",[a._v("2、生成本地库：")])]),a._v(" "),s("p",[a._v("编译 C 源代码生成本地库文件。在命令行中执行以下命令：")]),a._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[a._v("gcc "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("shared "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("o libMyNativeLibrary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("so "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("I$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("JAVA_HOME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("include "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("I$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("JAVA_HOME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("include"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("linux MyNativeLibrary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("c\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("这将生成一个名为 "),s("code",[a._v("libMyNativeLibrary.so")]),a._v(" 的本地库文件。")]),a._v(" "),s("p",[s("strong",[a._v("3、将本地库文件放到指定位置")])]),a._v(" "),s("p",[a._v("现在，我们需要将生成的 "),s("code",[a._v("libMyNativeLibrary.so")]),a._v(" 文件放置在 JVM 能够找到的位置。在 Unix/Linux 系统上，我们可以将它放置在 "),s("code",[a._v("/usr/lib")]),a._v(" 或 "),s("code",[a._v("/usr/local/lib")]),a._v(" 等标准的库路径中。")]),a._v(" "),s("p",[a._v("另一种方法是，在运行 Java 程序时，通过设置 "),s("code",[a._v("java.library.path")]),a._v(" 系统属性来指定本地库文件所在的目录。假设我们将生成的本地库文件放置在项目的根目录下的 "),s("code",[a._v("lib")]),a._v(" 文件夹中，我们可以使用以下命令来运行 Java 程序：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("java -Djava.library.path=./lib MyJavaProgram\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("这样 JVM 就能够找到并加载 "),s("code",[a._v("libMyNativeLibrary.so")]),a._v(" 本地库文件，并在 "),s("code",[a._v("MyJavaProgram")]),a._v(" 中调用其中的本地方法。")]),a._v(" "),s("p",[s("strong",[a._v("4、创建 Java 类：")])]),a._v(" "),s("p",[a._v("创建一个名为 "),s("code",[a._v("MyNativeLibrary")]),a._v(" 的 Java 类，该类将调用本地库中的函数。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// MyNativeLibrary.java")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyNativeLibrary")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("loadLibrary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MyNativeLibrary"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("native")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyNativeLibrary")]),a._v(" library "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyNativeLibrary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        library"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br")])]),s("p",[s("strong",[a._v("5、生成和运行 Java 代码：")])]),a._v(" "),s("p",[a._v("使用 "),s("code",[a._v("javac")]),a._v(" 命令编译 Java 类，并使用 "),s("code",[a._v("java")]),a._v(" 命令运行程序。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("javac "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyNativeLibrary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java\njava "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MyNativeLibrary")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("当运行程序时，Java 代码会加载本地库，然后调用其中的 "),s("code",[a._v("printHello")]),a._v(' 函数，输出 "Hello, JNI!" 到控制台。')]),a._v(" "),s("p",[a._v("这个示例演示了如何在 Java 中调用本地代码，通过 JNI 实现了 Java 代码与 C 代码之间的交互。在实际应用中，JNI 可以用于各种用途，例如优化性能、调用底层系统库等。")])])}),[],!1,null,null,null);s.default=e.exports}}]);