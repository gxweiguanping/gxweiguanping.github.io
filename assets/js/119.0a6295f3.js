(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{449:function(s,e,a){"use strict";a.r(e);var r=a(8),t=Object(r.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"安装mysql8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装mysql8"}},[s._v("#")]),s._v(" 安装mysql8")]),s._v(" "),e("h3",{attrs:{id:"步骤1-拉取-mysql-8-0-镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤1-拉取-mysql-8-0-镜像"}},[s._v("#")]),s._v(" "),e("strong",[s._v("步骤1：拉取 MySQL 8.0 镜像")])]),s._v(" "),e("p",[s._v("在命令行中输入以下命令，从 Docker Hub 下载 MySQL 8.0 的 Docker 镜像：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull mysql:8.0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"步骤2-创建并运行-mysql-容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤2-创建并运行-mysql-容器"}},[s._v("#")]),s._v(" "),e("strong",[s._v("步骤2：创建并运行 MySQL 容器")])]),s._v(" "),e("p",[s._v("然后，你可以使用以下命令来创建并运行一个名为 "),e("code",[s._v("mysql_master")]),s._v(" 的 MySQL 容器。这个命令将会设置 MySQL 的 root 用户的密码为 "),e("code",[s._v("123456")]),s._v("，并将 MySQL 的 3306 端口映射到宿主机的 3306 端口：")]),s._v(" "),e("p",[e("strong",[s._v("注意：")]),s._v("--lower-case-table-names=1在首次启动的时候就需要加上，如果忘记加上，那么必须新建映射的data目录的（/docker/mysql_master/data）")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker run  \n-p 3306:3306 \\\n--name mysql_master \\\n-v /docker/mysql_master/conf:/etc/mysql/conf.d \\\n-v /docker/mysql_master/logs:/logs\\ \n-v /docker/mysql_master/data:/var/lib/mysql\\ \n--privileged=true \\\n-e MYSQL_ROOT_PASSWORD=123456 \\\n--restart=always\\\n-d mysql:8.0 \\\n--lower-case-table-names=1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("ul",[e("li",[e("code",[s._v("docker run")]),s._v(": 这是 Docker 命令行接口的一个基本命令，用于启动新的 Docker 容器。")]),s._v(" "),e("li",[e("code",[s._v("-p 3306:3306")]),s._v(": 这个参数指示 Docker 将主机的 3306 端口映射到 Docker 容器的 3306 端口，这样你就可以从主机的 3306 端口访问到 Docker 容器内运行的 MySQL 服务器。")]),s._v(" "),e("li",[e("code",[s._v("--name mysql_master")]),s._v(": 这个参数为 Docker 容器指定了一个名字 "),e("code",[s._v("mysql_master")]),s._v("，这样你就可以用 "),e("code",[s._v("docker stop mysql_master")]),s._v(" 这样的命令来停止容器，而不是使用容器 ID。")]),s._v(" "),e("li",[e("code",[s._v("-v /docker/mysql_master/conf:/etc/mysql/conf.d")]),s._v(": 这个参数创建了一个数据卷，将主机上的 "),e("code",[s._v("/docker/mysql_master/conf")]),s._v(" 目录挂载到容器的 "),e("code",[s._v("/etc/mysql/conf.d")]),s._v(" 目录。这样你就可以直接在主机上编辑 MySQL 的配置文件。")]),s._v(" "),e("li",[e("code",[s._v("-v /docker/mysql_master/logs:/logs")]),s._v(": 这个参数创建了一个数据卷，将主机上的 "),e("code",[s._v("/docker/mysql_master/logs")]),s._v(" 目录挂载到容器的 "),e("code",[s._v("/logs")]),s._v(" 目录。这样你可以在主机上直接查看 MySQL 的日志文件。")]),s._v(" "),e("li",[e("code",[s._v("-v /docker/mysql_master/data:/var/lib/mysql")]),s._v(": 这个参数创建了一个数据卷，将主机上的 "),e("code",[s._v("/docker/mysql_master/data")]),s._v(" 目录挂载到容器的 "),e("code",[s._v("/var/lib/mysql")]),s._v(" 目录。这样 MySQL 数据库的所有数据都会被保存在主机上，即使容器被删除，数据也不会丢失。")]),s._v(" "),e("li",[e("code",[s._v("--privileged=true")]),s._v(": 这个参数启动了特权模式，容器内的 root 用户拥有真正的 root 权限。特权模式使得容器可以访问宿主机的所有设备，并且可以执行所有能在宿主机上执行的操作。")]),s._v(" "),e("li",[e("code",[s._v("-e MYSQL_ROOT_PASSWORD=123456")]),s._v(": 这个参数设置了环境变量 "),e("code",[s._v("MYSQL_ROOT_PASSWORD")]),s._v("，在 MySQL 服务器初始化时，这将成为 MySQL "),e("code",[s._v("root")]),s._v(" 用户的密码。")]),s._v(" "),e("li",[e("code",[s._v("--restart=always")]),s._v(": 这个参数设置了 Docker 容器的重启策略为 "),e("code",[s._v("always")]),s._v("，这意味着只要 Docker 服务在运行，当容器退出时就会自动重启容器。")]),s._v(" "),e("li",[e("code",[s._v("-d")]),s._v(': 这个标志表示 "detached" 模式，这意味着 Docker 容器将在后台运行。')]),s._v(" "),e("li",[e("code",[s._v("mysql:8.0")]),s._v(": 这是 Docker 镜像的名字和标签，这里我们使用的是 MySQL 8.0 的镜像。")]),s._v(" "),e("li",[e("code",[s._v("--lower-case-table-names=1")]),s._v(": 这是 MySQL 的配置选项，设置为 1 表示表名存储为小写。这个选项在某些情况下是必需的，例如在区分大小写的文件系统上。")])]),s._v(" "),e("h3",{attrs:{id:"步骤3-验证-mysql-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤3-验证-mysql-安装"}},[s._v("#")]),s._v(" "),e("strong",[s._v("步骤3：验证 MySQL 安装")])]),s._v(" "),e("p",[s._v("要验证 MySQL 是否正常运行，你可以尝试连接到 MySQL 服务器。首先，你需要在 MySQL 容器中打开一个 bash 终端：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" mysql_master "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后，你可以用 "),e("code",[s._v("mysql")]),s._v(" 命令来连接 MySQL：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("mysql "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" root "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这个命令将提示你输入密码，你应该输入在创建 MySQL 容器时设置的密码（在这个例子中，是 "),e("code",[s._v("my_password")]),s._v("）。如果一切正常，你应该能看到 MySQL 的命令提示符。")])])}),[],!1,null,null,null);e.default=t.exports}}]);