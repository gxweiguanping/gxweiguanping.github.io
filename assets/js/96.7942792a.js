(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{425:function(t,e,v){"use strict";v.r(e);var _=v(8),a=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"简介与使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介与使用场景"}},[t._v("#")]),t._v(" 简介与使用场景")]),t._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.influxdata.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网地址"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("InfluxDB是一个由InfluxData开发的"),e("code",[t._v("开源时序型数据")]),t._v("。它由"),e("code",[t._v("go语言编写")]),t._v("写成，着力于"),e("code",[t._v("高性能地查询与存储时序型数据")]),t._v("。InfluxDB被广泛应用于存储系统的监控数据，iot行业的实时数据等场景。")]),t._v(" "),e("blockquote",[e("p",[t._v("所谓的时序：跟时间有关的数据称之为时序。")])]),t._v(" "),e("h2",{attrs:{id:"influxdb有三大特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#influxdb有三大特性"}},[t._v("#")]),t._v(" InfluxDB有三大特性")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Time Series(时间序列)")]),t._v("∶你可以使用与时间有关的相关函数〈如最大，最小，求和等)。")]),t._v(" "),e("li",[e("code",[t._v("Metrics(度量)")]),t._v("∶你可以实时对大量数据进行计算。")]),t._v(" "),e("li",[e("code",[t._v("Eevents(事件)")]),t._v("︰它支持任意的事件数据。")])]),t._v(" "),e("h2",{attrs:{id:"influxdb特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#influxdb特点"}},[t._v("#")]),t._v(" InfluxDB特点")]),t._v(" "),e("ul",[e("li",[t._v("为时间序列数据专门编写的自定义高性能数据存储。TSM引擎具有高性能的写入和数据压缩")]),t._v(" "),e("li",[t._v("Golang编写，没有其它的依赖。")]),t._v(" "),e("li",[t._v("提供简单、高性能的写入、查询 http api，Native HTTP API，内置http支持，使用http读写。")]),t._v(" "),e("li",[t._v("插件支持其它数据写入协议，例如graphite、collectd、0penTSDB。")]),t._v(" "),e("li",[t._v("支持类sql查询语句。")]),t._v(" "),e("li",[t._v("tags可以索引序列化，提供快速有效的查询。")]),t._v(" "),e("li",[t._v("Retention policies"),e("code",[t._v("自动处理过期数据")]),t._v("。")]),t._v(" "),e("li",[t._v("Continuous queries自动聚合，提高查询效率。")]),t._v(" "),e("li",[t._v("schemaless(无结构)，可以是任意数量的列。")]),t._v(" "),e("li",[t._v("连续查询自动聚合，提高查询效率。无模式(无结构)，可以是任意数量的列。")]),t._v(" "),e("li",[t._v("min、max、sum、count、mean 、median一系列函数，方便统计。")]),t._v(" "),e("li",[t._v("Built-in Explorer自带管理工具。")])]),t._v(" "),e("h2",{attrs:{id:"使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),e("p",[t._v("时序数据以时间作为主要的查询纬度，通常会将连续的多个时序数据绘制成线，制作基于时间的多纬度报表，用于揭示数据背后的趋势、规律、异常，进行实时在线预测和预警，"),e("code",[t._v("时序数据普遍存在于IT基础设施、运维监控系统和物联网中")]),t._v("。如："),e("code",[t._v("监控数据统计")]),t._v("。每毫秒记录一下电脑内存的使用情况，然后就可以根据统计的数据，利用图形化界面（InfluxDB V1一般配合Grafana)制作内存使用情况的折线图;可以理解为按时间记录一些数据（常用的监控数据、埋点统计数据等），然后制作图表做统计;")]),t._v(" "),e("p",[t._v("比如。我们可以写一个程序将服务器上CPU的使用情况每隔10秒钟向InfluxDB中写入一条数据。接着，我们写一个查询语句，查询过去 30秒CPU的平均使用情况，然后让这个查询语句也每隔10秒钟执行一次。")]),t._v(" "),e("p",[t._v("最终，我们配置一条报警规则，如果查询语句的执行结果达到报警要求，就立刻触发报警。")]),t._v(" "),e("h2",{attrs:{id:"_1-x的tick技术栈与2-x的进一步融合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-x的tick技术栈与2-x的进一步融合"}},[t._v("#")]),t._v(" 1.X的TICK技术栈与2.x的进一步融合")]),t._v(" "),e("p",[t._v("时序数据一般应用在监控场景。大体上，数据的应用可以分为4步走。")]),t._v(" "),e("ol",[e("li",[t._v("数据采集")]),t._v(" "),e("li",[t._v("存储")]),t._v(" "),e("li",[t._v("查询")]),t._v(" "),e("li",[t._v("报警")])]),t._v(" "),e("p",[t._v("这样一看，只给一个数据库其实只能完成数据的存储和查询功能，上游的采集和下游的报警都需要自己来实现。因此InfluxData")]),t._v(" "),e("p",[t._v("在 InfluxDB1.x的时候推出了TICK生态来推出start全套的解决方案。")]),t._v(" "),e("p",[t._v("到了2.x，TICK进一步融合，ICK的功能全部融入了InfluxDB，仅需安装InfluxDB就能得到一个管理页面，而且附带了定时任务和报警功能。")]),t._v(" "),e("h2",{attrs:{id:"tick是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tick是什么"}},[t._v("#")]),t._v(" TICK是什么？")]),t._v(" "),e("p",[t._v("TICK 是由 influxdata 公司研发的一套解决方案，能用于资源监控、存储和查询，并具有丰富的插件支持，在物联网也有广泛用途。")]),t._v(" "),e("p",[t._v("TICK 是一个缩写，包含了四个部分：")]),t._v(" "),e("ul",[e("li",[t._v("Telegraf：是一个 plugin-driver 服务器，用于"),e("code",[t._v("收集和报告指标")]),t._v("。简单来说就是从其运行的系统中获取各种指标，然后通过输出插件将指标数据发送到各种其他的数据存储服务或消息队列中，包括InfluxDB、Graphite、MQTT、Kafka等等。")]),t._v(" "),e("li",[t._v("InfluxDB：是一个时间序列数据库（意味着数据发生的时间戳与数据本身同样重要），用于"),e("code",[t._v("处理高写入和查询的场景")]),t._v("，并且具有专门为"),e("code",[t._v("时间戳数据设计的存储引擎")]),t._v("，但更新和插入数据操作会受限。对于DevOps监控、物联网监控和实时分析等用例特别有帮助。")]),t._v(" "),e("li",[t._v("Chronograf：TICK 的"),e("code",[t._v("管理用户界面")]),t._v("和"),e("code",[t._v("可视化组件")]),t._v("，可以通过它配置监控和警报的设置。")]),t._v(" "),e("li",[t._v("Kapacitor：是一个原生的数据处理引擎，他可以处理来自 influxDB 的流数据和批数据，并允许我们插入自定义的逻辑和自定义的函数，以"),e("code",[t._v("处理警报")]),t._v("等操作。")])]),t._v(" "),e("h2",{attrs:{id:"版本比较与选型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本比较与选型"}},[t._v("#")]),t._v(" 版本比较与选型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}}),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("1.x")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("2.x")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("数据模型")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用数据库和保留策略作为数据的主要组织结构")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用桶（buckets）来存储数据。桶是数据库和保留策略的结合，提供了一种更简单的方式来管理数据的生命周期")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("查询语言")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用InfluxQL作为查询语言，它的风格近似SQL")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("引入了一种新的查询语言，叫做Flux，可以使用函数与管道符，是一种更符合时序数据特性的更具表现力的查询语言`")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("用户管理")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("基于用户名和密码的用户管理")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("引入了基于令牌的用户管理。每个令牌都与一个或多个权限相关联，这使得权限管理更加灵活和安全")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("任务和警报")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用Kapacitor进行任务管理和警报")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将这些功能集成到了核心数据库中。用户可以直接在InfluxDB 2.x中创建和管理任务和警报。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Dashboard")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("使用Chronograf作为其官方的可视化工具")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("将可视化功能集成到了核心数据库中，用户可以直接在InfluxDB 2.x中创建和管理仪表板")])])])]),t._v(" "),e("p",[t._v("市场现状：目前企业里面用InfluxDB 1.X和 InfluxDB 2.X都有人在用，数量上InfluxDB1.X占多一些。")]),t._v(" "),e("p",[t._v("集群：InfluxDB 从0.11版本开始，就闭源了集群功能的代码。也就是说，只能免费试用InfluxDB的单节点版（开源)，想要集群等功能就需要购买企业版。不过就InfluxDE1.8来说，有开源项目根据0.11的代码思路提供了InfluxDB开源的集群方案。")]),t._v(" "),e("p",[t._v("项目参考地址："),e("a",{attrs:{href:"https://github.com/chengshiwen/influxdb-cluster",target:"_blank",rel:"noopener noreferrer"}},[t._v("InfluxDB Cluster对应1.8.10"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);