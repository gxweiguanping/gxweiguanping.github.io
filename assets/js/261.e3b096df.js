(window.webpackJsonp=window.webpackJsonp||[]).push([[261],{592:function(t,a,s){"use strict";s.r(a);var e=s(8),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"注册中心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册中心"}},[t._v("#")]),t._v(" 注册中心")]),t._v(" "),a("h2",{attrs:{id:"注册中心是用来干什么的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册中心是用来干什么的"}},[t._v("#")]),t._v(" 注册中心是用来干什么的？")]),t._v(" "),a("p",[t._v("注册中心是用来管理和维护分布式系统中各个服务的地址和元数据的组件。它主要用于实现 "),a("code",[t._v("服务发现")]),t._v(" 和 "),a("code",[t._v("服务注册")]),t._v(" 功能。")]),t._v(" "),a("p",[t._v("总结一下注册中心的作用：")]),t._v(" "),a("ol",[a("li",[t._v("服务注册 ：各个服务在启动时向注册中心注册自己的网络地址、服务实例信息和其他相关元数据。这样，其他服务就可以通过注册中心获取到当前可用的服务列表。")]),t._v(" "),a("li",[t._v("服务发现 ：客户端通过向注册中心查询特定服务的注册信息，获得可用的服务实例列表。这样客户端就可以根据需要选择合适的服务进行调用，实现了服务间的解耦。")]),t._v(" "),a("li",[t._v("负载均衡 ：注册中心可以对同一服务的多个实例进行负载均衡，将请求分发到不同的实例上，提高整体的系统性能和可用性。")]),t._v(" "),a("li",[t._v("故障恢复 ：注册中心能够监测和检测服务的状态，当服务实例发生故障或下线时，可以及时更新注册信息，从而保证服务能够正常工作。")]),t._v(" "),a("li",[t._v("服务治理 ：通过注册中心可以进行服务的配置管理、动态扩缩容、服务路由、灰度发布等操作，实现对服务的动态管理和控制。")])]),t._v(" "),a("h2",{attrs:{id:"springcloud可以选择哪些注册中心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springcloud可以选择哪些注册中心"}},[t._v("#")]),t._v(" SpringCloud可以选择哪些注册中心？")]),t._v(" "),a("p",[t._v("SpringCloud可以与多种注册中心进行集成，常见的注册中心包括：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Eureka")]),t._v("：Eureka 是 Netflix 开源的服务发现框架，具有高可用、弹性、可扩展等特点，并与 Spring Cloud 集成良好。")]),t._v(" "),a("li",[t._v("Consul：Consul 是一种分布式服务发现和配置管理系统，由 HashiCorp 开发。它提供了服务注册、服务发现、健康检查、键值存储等功能，并支持多数据中心部署。")]),t._v(" "),a("li",[t._v("ZooKeeper：ZooKeeper 是 Apache 基金会开源的分布式协调服务，可以用作服务注册中心。它具有高可用、一致性、可靠性等特点。")]),t._v(" "),a("li",[a("code",[t._v("Nacos")]),t._v("：Nacos 是阿里巴巴开源的一个动态服务发现、配置管理和服务管理平台。它提供了服务注册和发现、配置管理、动态 DNS 服务等功能。")]),t._v(" "),a("li",[t._v("etcd：etcd 是 CoreOS 开源的一种分布式键值存储系统，可以被用作服务注册中心。它具有高可用、强一致性、分布式复制等特性。")])]),t._v(" "),a("h2",{attrs:{id:"nacos的负责注册表结构是怎么样的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nacos的负责注册表结构是怎么样的"}},[t._v("#")]),t._v(" Nacos的负责注册表结构是怎么样的？")]),t._v(" "),a("p",[t._v("Nacos采用了数据的分级存储模型，最外层是Namespace，用来隔离环境。然后是Group，用来对服务分组。接下来就是服务（Service)了，一个服务包含多个实例，但是可能处于不同机房，因此Service下有多个集群(Cluster) ，Cluster下是不同的实例 ( Instance)。")]),t._v(" "),a("p",[t._v("对应到ava代码中，Nacos采用了一个多层的Map来表示。结构为Map<String, Map<String, Service>>，其中最外层Map的key就是namespaceld，值是一个Map。内层Map的key是group拼接serviceName，值是Service对象。Service对象内部又是一个Map,key是集群名称，值是Cluster对象。而Cluster对象内部维护了Instance的集合。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240413213328699.png",alt:"image-20240413213328699"}})]),t._v(" "),a("h2",{attrs:{id:"eureka、nacos的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eureka、nacos的区别"}},[t._v("#")]),t._v(" Eureka、Nacos的区别？")]),t._v(" "),a("p",[t._v("Nacos与Eureka有相同点，也有不同之处，可以从以下几点来描述:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("特性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Eureka")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Nacos")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("接口方式")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Nacos对外暴露了Rest风格的API接口，用来实现服务注册、发现等功能")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Eureka对外暴露了Rest风格的API接口，用来实现服务注册、发现等功能")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("实例类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Nacos的实例有永久和临时实例之分")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Eureka只支持临时实例")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("健康检测")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Nacos对临时实例采用心跳模式检测，对永久实例采用主动请求来检测")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Eureka只支持心跳模式")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("服务发现")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Nacos支持定时拉取和订阅推送两种模式")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Eureka只支持定时拉取模式")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("CAP")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("AP（可用性和分区容忍性）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("既支持AP，也支持CP")])])])]),t._v(" "),a("h2",{attrs:{id:"nacos的临时实例和永久实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nacos的临时实例和永久实例"}},[t._v("#")]),t._v(" Nacos的临时实例和永久实例")]),t._v(" "),a("p",[a("strong",[t._v("临时实例")]),t._v("\n临时实例在注册到注册中心之后仅仅只保存在服务端内部一个缓存中，不会持久化到磁盘这个服务端内部的缓存在注册中心一般被称为服务注册表当服务实例出现异常或者下线之后，就会把这个服务实例从服务注册表中剔除。")]),t._v(" "),a("p",[a("strong",[t._v("永久实例")]),t._v("\n永久服务实例不仅仅会存在服务注册表中，同时也会被持久化到磁盘文件中当服务实例出现异常或者下线，Nacos只会将服务实例的健康状态设置为不健康，并不会对将其从服务注册表中剔除所以这个服务实例的信息还是可以从注册中心看到，只不过处于不健康状态。")]),t._v(" "),a("p",[t._v("这是就是两者最最最基本的区别")]),t._v(" "),a("h2",{attrs:{id:"nacos的服务注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nacos的服务注册"}},[t._v("#")]),t._v(" Nacos的服务注册")]),t._v(" "),a("h3",{attrs:{id:"_1-x版本实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x版本实现"}},[t._v("#")]),t._v(" 1.x版本实现")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("Nacos")]),t._v("在"),a("code",[t._v("1.x")]),t._v("版本的时候，服务注册是通过"),a("code",[t._v("Http")]),t._v("接口实现的")]),t._v(" "),a("h4",{attrs:{id:"接口信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口信息"}},[t._v("#")]),t._v(" 接口信息")]),t._v(" "),a("p",[a("strong",[t._v("请求类型")]),t._v("：POST")]),t._v(" "),a("p",[a("strong",[t._v("请求路径")])]),t._v(" "),a("div",{staticClass:"language-plain line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[t._v("/nacos/v1/ns/instance\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("请求参数")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("是否必选")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ip")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("服务实例IP")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("port")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("服务实例port")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("namespaceId")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("命名空间ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("weight")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("权重")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("enabled")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是否上线")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("healthy")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是否健康")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("metadata")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("扩展信息")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("clusterName")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("集群名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("serviceName")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("服务名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("groupName")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("分组名")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("ephemeral")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是否临时实例")])])])]),t._v(" "),a("h4",{attrs:{id:"代码实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" serviceName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" groupName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NacosException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAMING_LOGGER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[REGISTER-SERVICE]{} registering service {} with instance: {}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" namespaceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" params "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" initialCapacity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonParams")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAMESPACE_ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("namespaceld"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonParams")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SERVICE_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("serviceName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonParams")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GROUP_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" groupName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonParams")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLUSTER_NAME")]),t._v("，instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClusterName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ip"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"port"')]),t._v("，"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("value0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"weight"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("value0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWeight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("value0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEnabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"healthy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("value0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isHealthy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ephemeral"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("value0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEphemeral")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tparams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"metadata"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JacksonUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJson")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMetadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reqApi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UtilAndComs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nacosUrlInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[t._v("整个逻辑比较简单，因为"),a("code",[t._v("Nacos")]),t._v("服务端本身就是用"),a("code",[t._v("SpringBoot")]),t._v("写的")]),t._v(" "),a("p",[t._v("但是在2.x版本的实现就比较复杂了")]),t._v(" "),a("h3",{attrs:{id:"_2-x版本的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-x版本的实现"}},[t._v("#")]),t._v(" 2.x版本的实现")]),t._v(" "),a("h4",{attrs:{id:"通信协议的改变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通信协议的改变"}},[t._v("#")]),t._v(" 通信协议的改变")]),t._v(" "),a("p",[t._v("2.x"),a("code",[t._v("版本相比于")]),t._v("1.x"),a("code",[t._v("版本最主要的升级就是客户端和服务端通信协议的改变，由")]),t._v("1.x"),a("code",[t._v("版本的")]),t._v("Http"),a("code",[t._v("改成了")]),t._v("2.x"),a("code",[t._v("版本")]),t._v("gRPC")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("gRPC")]),t._v("是谷歌公司开发的一个高性能、开源和通用的"),a("code",[t._v("RPC")]),t._v("框架，"),a("code",[t._v("Java")]),t._v("版本的实现底层也是基于"),a("code",[t._v("Netty")]),t._v("来的")])]),t._v(" "),a("p",[t._v("之所以改成了"),a("code",[t._v("gRPC")]),t._v("，主要是因为"),a("code",[t._v("Http")]),t._v("请求会频繁创建和销毁连接，白白浪费资源所以在2.x版本之后，为了提升性能，就将通信协议改成了"),a("code",[t._v("gRPC")])]),t._v(" "),a("p",[t._v("根据官网显示，整体的效果还是很明显，相比于"),a("code",[t._v("1.x")]),t._v("版本，注册性能总体提升至少2倍虽然通信方式改成了"),a("code",[t._v("gRPC")]),t._v("，但是"),a("code",[t._v("2.x")]),t._v("版本服务端依然保留了"),a("code",[t._v("Http")]),t._v("注册的接口，所以用"),a("code",[t._v("1.x")]),t._v("的Nacos SDK依然可以注册到"),a("code",[t._v("2.x")]),t._v("版本的服务端。")]),t._v(" "),a("h4",{attrs:{id:"具体的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体的实现"}},[t._v("#")]),t._v(" 具体的实现")]),t._v(" "),a("p",[a("code",[t._v("Nacos")]),t._v("客户端在启动的时候，会通过"),a("code",[t._v("gRPC")]),t._v("跟服务端建立长连接")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240414124644108.png",alt:"image-20240414124644108"}})]),t._v(" "),a("p",[t._v("这个连接会一直存在，之后客户端与服务端所有的通信都是基于这个长连接来的，当客户端发起注册的时候，就会通过这个长连接，将服务实例的信息发送给服务端")]),t._v(" "),a("p",[t._v("服务端拿到服务实例，跟"),a("code",[t._v("1.x")]),t._v("一样，也会存到服务注册表除了注册之外，当注册的是临时实例时，"),a("code",[t._v("2.x")]),t._v("还会将服务实例信息存储到客户端中的一个缓存中，供"),a("code",[t._v("Redo")]),t._v("操作")]),t._v(" "),a("blockquote",[a("p",[t._v("所谓的Redo操作，其实就是一个补偿机制，本质是个定时任务，默认每3s执行一次\n这个定时任务作用是，当客户端与服务端重新建立连接时（因为一些异常原因导致连接断开），那么之前注册的服务实例肯定还要继续注册服务端（断开连接服务实例就会被剔除服务注册表）\n所以这个Redo操作一个很重要的作用就是重连之后的重新注册的作用\n除了注册之外，比如服务订阅之类的操作也需要Redo操作，当连接重新建立，之前客户端的操作都需要Redo一下")])]),t._v(" "),a("h2",{attrs:{id:"nacos的心跳机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nacos的心跳机制"}},[t._v("#")]),t._v(" Nacos的心跳机制")]),t._v(" "),a("p",[t._v("心跳机制，也可以被称为"),a("code",[t._v("保活机制")]),t._v("，它的作用就是服务实例告诉注册中心这个服务实例还活着")]),t._v(" "),a("p",[t._v("在正常情况下，服务关闭了，那么服务会主动向"),a("code",[t._v("Nacos")]),t._v("服务端发送一个服务下线的请求，"),a("code",[t._v("Nacos")]),t._v("服务端在接收到请求之后，会将这个服务实例从"),a("code",[t._v("服务注册表中剔除")])]),t._v(" "),a("p",[t._v("但是对于异常情况下，比如出现网络问题，可能导致这个注册的服务实例无法提供服务，处于不可用状态，也就是不健康，而此时在没有任何机制的情况下，服务端是无法知道这个服务处于不可用状态")]),t._v(" "),a("p",[t._v("所以为了避免这种情况，一些注册中心，就比如"),a("code",[t._v("Nacos、Eureka")]),t._v("，就会用心跳机制来判断这个服务实例是否能正常")]),t._v(" "),a("p",[t._v("在Nacos中，心跳机制仅仅是"),a("code",[t._v("针对临时实例来说的")]),t._v("，"),a("code",[t._v("临时实例需要靠心跳机制来保活")])]),t._v(" "),a("p",[a("code",[t._v("心跳机制")]),t._v("在"),a("code",[t._v("1.x")]),t._v("和"),a("code",[t._v("2.x")]),t._v("版本的实现也是不一样的")]),t._v(" "),a("h4",{attrs:{id:"_1-x心跳实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x心跳实现"}},[t._v("#")]),t._v(" 1.x心跳实现")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("1.x")]),t._v("中，心跳机制实现是通过客户端和服务端各存在的一个定时任务来完成的")]),t._v(" "),a("p",[t._v("在服务注册时，发现是"),a("code",[t._v("临时实例")]),t._v("，客户端会开启一个"),a("code",[t._v("5s")]),t._v("执行一次的定时任务")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" serviceName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" groupName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NacosException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查超时参数是否异常。心跳超时时间(默认15秒)必须大于心跳周期(默认5秒)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NamingUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkInstanceIsLegal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拼接得到新的服务名，格式为：groupName@@serviceId")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" groupedServiceName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NamingUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getGroupedName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serviceName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" groupName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否为临时实例，默认为 true。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEphemeral")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是临时实例，需要定时向 Nacos 服务发送心跳")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeatInfo")]),t._v(" beatInfo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" beatReactor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("buildBeatInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("groupedServiceName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        beatReactor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addBeatInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("groupedServiceName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beatInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送注册服务实例的请求")]),t._v("\n    serverProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("groupedServiceName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" groupName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("这个定时任务会构建一个"),a("code",[t._v("Http")]),t._v("请求，携带这个服务实例的信息，然后发送到服务端")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240414123033885.png",alt:"image-20240414123033885"}})]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("Nacos")]),t._v("服务端也会开启一个定时任务，默认也是"),a("code",[t._v("5s")]),t._v("执行一次，去检查这些服务实例最后一次心跳的时间，也就是客户端最后一次发送"),a("code",[t._v("Http")]),t._v("请求的时间")]),t._v(" "),a("ul",[a("li",[t._v("当最后一次心跳时间超过"),a("code",[t._v("15s")]),t._v("，但没有超过"),a("code",[t._v("30s")]),t._v("，会把这服务实例标记成不健康")]),t._v(" "),a("li",[t._v("当最后一次心跳超过"),a("code",[t._v("30s")]),t._v("，直接把服务从服务注册表中剔除")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240414125751382.png",alt:"image-20240414125751382"}})]),t._v(" "),a("p",[t._v("这就是"),a("code",[t._v("1.x")]),t._v("版本的心跳机制，本质就是两个定时任务，其实"),a("code",[t._v("1.x")]),t._v("的这个心跳还有一个作用，就是跟上面说的"),a("code",[t._v("gRPC")]),t._v("时"),a("code",[t._v("Redo")]),t._v("操作的作用是一样的")]),t._v(" "),a("p",[t._v("服务在处理心跳的时候，发现心跳携带这个服务实例的信息在注册表中没有，此时就会添加到服务注册表")]),t._v(" "),a("p",[t._v("所以心跳也有"),a("code",[t._v("Redo")]),t._v("的类似效果")]),t._v(" "),a("h4",{attrs:{id:"_2-x心跳实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-x心跳实现"}},[t._v("#")]),t._v(" 2.x心跳实现")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("2.x")]),t._v("版本之后，由于"),a("code",[t._v("通信协议改成了gRPC")]),t._v("，客户端与服务端保持长连接，所以"),a("code",[t._v("2.x")]),t._v("版本之后它是利用这个"),a("code",[t._v("gRPC")]),t._v("长连接本身的心跳来保活，一旦这个连接断开，服务端就会认为这个连接注册的服务实例不可用，之后就会将这个服务实例从服务注册表中剔除")]),t._v(" "),a("p",[t._v("除了连接本身的心跳之外，"),a("code",[t._v("Nacos")]),t._v("还有服务端的一个"),a("code",[t._v("主动检测机制")]),t._v(" "),a("code",[t._v("Nacos")]),t._v("服务端也会启动一个定时任务，默认每隔"),a("code",[t._v("3s")]),t._v("执行一次，这个任务会去检查超过"),a("code",[t._v("20s")]),t._v("没有发送请求数据的连接，一旦发现有连接已经超过"),a("code",[t._v("20s")]),t._v("没发送请求，那么就会向这个连接对应的客户端发送一个请求，如果请求不通或者响应失败，此时服务端也会认为与客户端的这个连接异常，从而将这个客户端注册的服务实例从服务注册表中剔除")]),t._v(" "),a("p",[t._v("所以对于2.x版本，主要是两种机制来进行保活：")]),t._v(" "),a("p",[t._v("连接本身的"),a("code",[t._v("心跳机制")]),t._v("，断开就直接剔除服务实例\n"),a("code",[t._v("Nacos")]),t._v("主动"),a("code",[t._v("检查机制")]),t._v("，服务端会对20s没有发送数据的连接进行检查，出现异常时也会主动断开连接，剔除服务实例")]),t._v(" "),a("h4",{attrs:{id:"心跳机制总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#心跳机制总结"}},[t._v("#")]),t._v(" 心跳机制总结")]),t._v(" "),a("p",[t._v("总结：")]),t._v(" "),a("ul",[a("li",[t._v("心跳机制仅仅针对"),a("code",[t._v("临时实例")]),t._v("而言")]),t._v(" "),a("li",[a("code",[t._v("1.x")]),t._v("心跳机制是通过客户端和服务端两个定时任务来完成的，客户端定时上报心跳信息，服务端定时检查心跳时间，超过"),a("code",[t._v("15s")]),t._v("标记不健康，超过"),a("code",[t._v("30s")]),t._v("直接剔除")]),t._v(" "),a("li",[a("code",[t._v("1.x")]),t._v("心跳机制还有类似"),a("code",[t._v("2.x")]),t._v("的"),a("code",[t._v("Redo")]),t._v("作用，服务端发现心跳的服务信息不存在会，会将服务信息添加到注册表，相当于重新注册了")]),t._v(" "),a("li",[a("code",[t._v("2.x")]),t._v("是基于"),a("code",[t._v("gRPC长连接")]),t._v("本身的心跳机制和服务端的定时检查机制来的，出现异常直接剔除")])]),t._v(" "),a("h2",{attrs:{id:"nacos健康检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nacos健康检查"}},[t._v("#")]),t._v(" Nacos健康检查")]),t._v(" "),a("p",[t._v("上面说了，心跳机制仅仅是"),a("code",[t._v("临时实例")]),t._v("用来保护的机制，而对于"),a("code",[t._v("永久实例")]),t._v("来说，一般来说无法主动上报心跳，就比如说"),a("code",[t._v("MySQL")]),t._v("实例，肯定是不会主动上报心跳到Nacos的，所以这就导致无法通过心跳机制来保活")]),t._v(" "),a("p",[t._v("所以针对"),a("code",[t._v("永久实例")]),t._v("的情况，"),a("code",[t._v("Nacos")]),t._v("通过一种叫"),a("code",[t._v("健康检查")]),t._v("的机制去判断服务实例是否活着")]),t._v(" "),a("p",[a("code",[t._v("健康检查")]),t._v("跟"),a("code",[t._v("心跳机制")]),t._v("刚好相反，"),a("code",[t._v("心跳机制")]),t._v("是"),a("code",[t._v("服务实例")]),t._v("向服务端"),a("code",[t._v("发送请求")]),t._v("，而所谓的"),a("code",[t._v("健康检查")]),t._v("就是"),a("code",[t._v("服务端")]),t._v("主动向"),a("code",[t._v("服务实例发送请求")]),t._v("，去探测服务实例是否活着")]),t._v(" "),a("p",[t._v("健康检查机制在"),a("code",[t._v("1.x和2.x")]),t._v("的实现机制是一样的\n"),a("code",[t._v("Nacos")]),t._v("服务端在会去创建一个健康检查任务，这个任务每次执行时间间隔会在"),a("code",[t._v("2000~7000")]),t._v("毫秒之间\n当任务触发的时候，会根据设置的健康检查的方式执行不同的逻辑，目前主要有三种方式："),a("code",[t._v("TCP")]),t._v("，"),a("code",[t._v("HTTP")]),t._v("，"),a("code",[t._v("MySQL")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("TCP")]),t._v("的方式就是根据服务实例的"),a("code",[t._v("ip和端口")]),t._v("去判断是否能连接成功，如果连接成功，就认为健康，反之就任务不健康")]),t._v(" "),a("li",[a("code",[t._v("HTTP")]),t._v("的方式就是向服务实例的"),a("code",[t._v("ip和端口")]),t._v("发送一个"),a("code",[t._v("Http")]),t._v("请求，请求路径是需要设置的，如果能正常请求，说明实例健康，反之就不健康")]),t._v(" "),a("li",[a("code",[t._v("MySQL")]),t._v("的方式是一种特殊的检查方式，他可以执行下面这条Sql来判断数据库是不是主库\n"),a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240414123853637.png",alt:"image-20240414123853637"}})])]),t._v(" "),a("p",[t._v("默认情况下，都是通过"),a("code",[t._v("TCP")]),t._v("的方式来探测服务实例是否还活着")]),t._v(" "),a("h2",{attrs:{id:"nacos的服务发现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nacos的服务发现"}},[t._v("#")]),t._v(" Nacos的服务发现")]),t._v(" "),a("p",[t._v("服务发现就是指当有服务实例注册成功之后，其它服务可以发现这些服务实例\n"),a("code",[t._v("Nacos")]),t._v("提供了两种发现方式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("主动查询：指客户端主动向服务端查询需要关注的服务实例，也就是"),a("code",[t._v("拉（pull）")]),t._v("的模式")])]),t._v(" "),a("li",[a("p",[t._v("服务订阅：指客户端向服务端发送一个订阅服务的请求，当被订阅的服务有信息变动就会主动将服务实例的信息推送给订阅的客户端，本质就是"),a("code",[t._v("推（push）")]),t._v("模式")])])]),t._v(" "),a("p",[t._v("在我们平时使用时，"),a("code",[t._v("一般来说都是选择使用订阅的方式")]),t._v("，这样一旦有服务实例数据的变动，客户端能够第一时间感知，并且"),a("code",[t._v("Nacos")]),t._v("在整合"),a("code",[t._v("SpringCloud")]),t._v("的时候，默认就是使用"),a("code",[t._v("订阅")]),t._v("的方式")]),t._v(" "),a("p",[t._v("对于这两种服务发现方式，1.x和2.x版本实现也是不一样，服务查询其实两者实现都很简单")]),t._v(" "),a("p",[t._v("1.x整体就是发送Http请求去查询服务实例，2.x只不过是将Http请求换成了gRPC的请求\n服务端对于查询的处理过程都是一样的，从服务注册表中查出符合查询条件的服务实例进行返回，不过对于服务订阅，两者的机制就稍微复杂一点\n在Nacos客户端，不论是1.x还是2.x都是通过SDK中的NamingService#subscribe方法来发起订阅的")]),t._v(" "),a("p",[t._v("当有服务实例数据变动的时，客户端就会回调EventListener，就可以拿到最新的服务实例数据了\n虽然1.x还是2.x都是同样的方法，但是具体的实现逻辑是不一样的")]),t._v(" "),a("h2",{attrs:{id:"eureka实现原理了解吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eureka实现原理了解吗"}},[t._v("#")]),t._v(" Eureka实现原理了解吗？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/352352125535.png",alt:"352352125535"}})]),t._v(" "),a("p",[t._v("Eureka的实现原理，大概可以从这几个方面来看：")]),t._v(" "),a("ol",[a("li",[t._v("服务注册与发现: 当一个服务实例启动时，它会向Eureka Server发送注册请求，将自己的信息注册到注册中心。Eureka Server会将这些信息保存在内存中，并提供REST接口供其他服务查询。服务消费者可以通过查询服务实例列表来获取可\n用的服务提供者实例，从而实现服务的发现。")]),t._v(" "),a("li",[t._v("服务健康检查: Eureka通过心跳机制来检测服务实例的健康状态。服务实例会定期向Eureka Server发送心跳，也就是续约，以表明自己的存活状态。如果EurekaServer在一定时间内没有收到某个服务实例的心跳，则会将其标记为不可用，并从服务列表中移除，下线实例。")]),t._v(" "),a("li",[t._v("服务负载均衡: Eureka客户端在调用其他服务时，会从本地缓存中获取服务的注册信息。如果缓存中没有对应的信息，则会向Eureka Server发送查询请求。Eureka Server会返回一个可用的服务实例列表给客户端，客户端可以使用负载均衡算法选择其中一个进行调用。")])]),t._v(" "),a("h2",{attrs:{id:"eureka-server怎么保证高可用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eureka-server怎么保证高可用"}},[t._v("#")]),t._v(" Eureka Server怎么保证高可用？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/948618313155.png",alt:"948618313155"}})]),t._v(" "),a("p",[t._v("Eureka Server保证高可用，主要通过这三个方面来实现：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("多实例部署: 通过将多个Eureka Server实例部署在不同的节点上，可以实现高可用性。当其中一个实例发生故障时，其他实例仍然可以提供服务，并保持注册信息的一致性。")])]),t._v(" "),a("li",[a("p",[t._v("服务注册信息的复制: "),a("strong",[t._v("当一个服务实例向Eureka Server注册时，每个Eureka Server实例都会复制其他实例的注册信息")]),t._v("，以保持数据的一致性。当某个Eureka Server实例发生故障时，其他实例可以接管其工作，保证整个系统的正常运行。")])]),t._v(" "),a("li",[a("p",[t._v("自我保护机制: **Eureka还具有自我保护机制。当Eureka Server节点在一定时间内没有接收到心跳时，它会进入自我保护模式。在自我保护模式下，Eureka Server不再剔除注册表中的服务实例，以保护现有的注册信息。**这样可以防止由于网络抖动或其他原因导致的误剔除，进一步提高系统的稳定性。")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);