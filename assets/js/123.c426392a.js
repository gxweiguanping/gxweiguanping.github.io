(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{453:function(e,r,s){"use strict";s.r(r);var a=s(8),t=Object(a.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"安装hyper-docker-registry-web"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装hyper-docker-registry-web"}},[e._v("#")]),e._v(" 安装hyper/docker-registry-web")]),e._v(" "),r("p",[e._v("Hyper/docker-registry-web 是一个基于 Web 的 Docker Registry 浏览器。要在 Docker 中安装它，你可以遵循以下步骤：")]),e._v(" "),r("h3",{attrs:{id:"步骤1-在你的终端或命令行界面中-运行以下命令来从-docker-hub-下载-hyper-docker-registry-web-镜像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#步骤1-在你的终端或命令行界面中-运行以下命令来从-docker-hub-下载-hyper-docker-registry-web-镜像"}},[e._v("#")]),e._v(" "),r("strong",[e._v("步骤1：在你的终端或命令行界面中，运行以下命令来从 Docker Hub 下载 hyper/docker-registry-web 镜像")])]),e._v(" "),r("div",{staticClass:"language-bash line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull hyper/docker-registry-web\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("h3",{attrs:{id:"步骤2-创建并运行新的-docker-容器实例。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#步骤2-创建并运行新的-docker-容器实例。"}},[e._v("#")]),e._v(" "),r("strong",[e._v("步骤2：创建并运行新的 Docker 容器实例。")])]),e._v(" "),r("div",{staticClass:"language-bash line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-d")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("5001")]),e._v(":8080 "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--restart")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("always "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--name")]),e._v(" registry-web "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--link")]),e._v(" registry:registry "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("REGISTRY_URL")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("http://registry:5000/v2 "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("REGISTRY_NAME")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("localhost:5000 hyper/docker-registry-web\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("在这个例子中，")]),e._v(" "),r("p",[r("code",[e._v("-d")]),e._v(" 表示在后台运行容器")]),e._v(" "),r("p",[r("code",[e._v("-p 5001:8080")]),e._v(" 将容器的 8080 端口映射到主5001 端口")]),e._v(" "),r("p",[r("code",[e._v("--restart=always")]),e._v("：这个参数设置容器的重启策略为 always，也就是说，无论容器的退出代码是什么，Docker 都会自动重启容器。")]),e._v(" "),r("p",[r("code",[e._v("--name registry-web")]),e._v(' 给容器命名为 "registry-web"')]),e._v(" "),r("p",[r("code",[e._v("--link registry:registry")]),e._v(' 链接到名为 "registry" 的另一个容器')]),e._v(" "),r("p",[r("code",[e._v("-e REGISTRY_URL=http://registry:5000/v2")])]),e._v(" "),r("p",[r("code",[e._v("-e REGISTRY_NAME=localhost:5000")]),e._v(" 设置环境变量。")]),e._v(" "),r("p",[e._v("现在，你应该可以通过浏览器访问 http://localhost:5001来查看 Docker Registry Web 界面了。")])])}),[],!1,null,null,null);r.default=t.exports}}]);