(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{423:function(s,a,e){"use strict";e.r(a);var n=e(8),t=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"五、keepalived-nginx-集群-主从模式-搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、keepalived-nginx-集群-主从模式-搭建"}},[s._v("#")]),s._v(" 五、Keepalived+Nginx 集群(主从模式)搭建")]),s._v(" "),a("h2",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("p",[s._v("keepalived是基于VRRP协议实现的保证集群高可用的一个服务软件，主要功能是实现真机的故障隔离和负载均衡器间的失败切换，防止单点故障。一个")]),s._v(" "),a("p",[s._v("LVS服务会有2台服务器运行Keepalived，一台为主服务器（MASTER），一台为备份服务器（BACKUP），但是对外表现为一个虚拟IP，主服务器会发送")]),s._v(" "),a("p",[s._v("特定的消息给备份服务器，当备份服务器收不到这个消息的时候，即主服务器宕机的时候， 备份服务器就会接管虚拟IP，继续提供服务，从而保证了高")]),s._v(" "),a("p",[s._v("可用性。Keepalived是VRRP的完美实现。")]),s._v(" "),a("h2",{attrs:{id:"vrrp-协议简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vrrp-协议简介"}},[s._v("#")]),s._v(" VRRP 协议简介")]),s._v(" "),a("p",[s._v("在现实的网络环境中，两台需要通信的主机大多数情况下并没有直接的物理连接。对于这样的情况，它们之间路由怎样选择？主机如何选定到达目的主机")]),s._v(" "),a("p",[s._v("的下一跳路由，这个问题通常的解决方法有二种：")]),s._v(" "),a("ul",[a("li",[s._v("在主机上使用动态路由协议(RIP、OSPF等)")]),s._v(" "),a("li",[s._v("在主机上配置静态路由")])]),s._v(" "),a("p",[s._v("很明显，在主机上配置动态路由是非常不切实际的，因为管理、维护成本以及是否支持等诸多问题。配置静态路由就变得十分流行，但路由器(或者说默")]),s._v(" "),a("p",[s._v("认网关default gateway)却经常成为单点故障。VRRP的目的就是为了解决静态路由单点故障问题，VRRP通过一竞选(election)协议来动态的将路由任务交")]),s._v(" "),a("p",[s._v("给LAN中虚拟路由器中的某台VRRP路由器。")]),s._v(" "),a("h2",{attrs:{id:"keepalived-nginx实现高可用的思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keepalived-nginx实现高可用的思路"}},[s._v("#")]),s._v(" Keepalived+Nginx实现高可用的思路")]),s._v(" "),a("ol",[a("li",[s._v("请求不要直接打到Nginx上，应该先通过Keepalived（这就是所谓虚拟IP，VIP）。")]),s._v(" "),a("li",[s._v("Keepalived应该能监控Nginx的生命状态，提供一个用户自定义的脚本，定期检查Nginx进程状态，进行权重变化,，从而实现Nginx故障切换。")])]),s._v(" "),a("h2",{attrs:{id:"vrrp-工作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vrrp-工作流程"}},[s._v("#")]),s._v(" VRRP 工作流程")]),s._v(" "),a("h3",{attrs:{id:"初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[s._v("#")]),s._v(" 初始化")]),s._v(" "),a("p",[s._v("路由器启动时，如果路由器的优先级是255(最高优先级，路由器拥有路由器地址)，要发送VRRP通告信息，并发送广播ARP信息通告路由器IP地址对应的")]),s._v(" "),a("p",[s._v("MAC地址为路由虚拟MAC，设置通告信息定时器准备定时发送VRRP通告信息，转为MASTER状态；否则进入BACKUP状态，设置定时器检查定时检查是")]),s._v(" "),a("p",[s._v("否收到MASTER的通告信息。")]),s._v(" "),a("h3",{attrs:{id:"master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master"}},[s._v("#")]),s._v(" Master")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("设置定时通告定时器；")])]),s._v(" "),a("li",[a("p",[s._v("用VRRP虚拟MAC地址响应路由器IP地址的ARP请求；")])]),s._v(" "),a("li",[a("p",[s._v("转发目的MAC是VRRP虚拟MAC的数据包；")])]),s._v(" "),a("li",[a("p",[s._v("如果是虚拟路由器IP的拥有者，将接受目的地址是虚拟路由器IP的数据包，否则丢弃；")])]),s._v(" "),a("li",[a("p",[s._v("当收到shutdown的事件时删除定时通告定时器，发送优先权级为0的通告包，转初始化状态；")])]),s._v(" "),a("li",[a("p",[s._v("如果定时通告定时器超时时，发送VRRP通告信息；")])]),s._v(" "),a("li",[a("p",[s._v("收到VRRP通告信息时，如果优先权为0，发送VRRP通告信息；否则判断数据的优先级是否高于本机，或相等而且实际IP地址大于本地实际IP，设置定")]),s._v(" "),a("p",[s._v("时通告定时器，复位主机超时定时器，转BACKUP状态；否则的话，丢弃该通告包；")])])]),s._v(" "),a("h3",{attrs:{id:"backup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backup"}},[s._v("#")]),s._v(" Backup")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("设置主机超时定时器；")])]),s._v(" "),a("li",[a("p",[s._v("不能响应针对虚拟路由器IP的ARP请求信息；")])]),s._v(" "),a("li",[a("p",[s._v("丢弃所有目的MAC地址是虚拟路由器MAC地址的数据包；")])]),s._v(" "),a("li",[a("p",[s._v("不接受目的是虚拟路由器IP的所有数据包；")])]),s._v(" "),a("li",[a("p",[s._v("当收到shutdown的事件时删除主机超时定时器，转初始化状态；")])]),s._v(" "),a("li",[a("p",[s._v("主机超时定时器超时的时候，发送VRRP通告信息，广播ARP地址信息，转MASTER状态；")])]),s._v(" "),a("li",[a("p",[s._v("收到VRRP通告信息时，如果优先权为0，表示进入MASTER选举；否则判断数据的优先级是否高于本机，如果高的话承认MASTER有效，复位主机超")]),s._v(" "),a("p",[s._v("时定时器；否则的话，丢弃")])])]),s._v(" "),a("h2",{attrs:{id:"实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战"}},[s._v("#")]),s._v(" 实战")]),s._v(" "),a("h3",{attrs:{id:"_1、准备两台虚拟机分别安装-nginx-和-keepalived"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、准备两台虚拟机分别安装-nginx-和-keepalived"}},[s._v("#")]),s._v(" 1、准备两台虚拟机分别安装 nginx 和 keepalived")]),s._v(" "),a("p",[s._v("192.168.1.21")]),s._v(" "),a("p",[s._v("192.168.1.27")]),s._v(" "),a("p",[s._v("1、安装nginx")]),s._v(" "),a("p",[s._v("2、安装 keepalived")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yum install keepalived –y\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("安装完成之后,默认在 etc 里面生成 keepalived 目录,该目录下存在配置文件 keepalived.conf")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20221215181240066.png",alt:"image-20221215181240066"}})]),s._v(" "),a("h3",{attrs:{id:"_2、修改-keepalived-conf-配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、修改-keepalived-conf-配置文件"}},[s._v("#")]),s._v(" 2、修改 keepalived.conf 配置文件")]),s._v(" "),a("p",[s._v("主服务器和从服务器只有两个地方不一样,两个不一样的配置都在 vrrp_instance VI_1 中")]),s._v(" "),a("p",[s._v("state: 主服务器的值是 MASTER ,副本服务器的值是 BACKUP")]),s._v(" "),a("p",[s._v("priority: 主服务器的值比副本服务器的值大即可(例如:主服务器设置为 100,副本服务器设置为 80)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('global_defs {\n   notification_email { # keepalived 服务器宕机异常出现的时候,发送通知邮件,可以配置多个邮箱地址\n    1412556053@qq.com # 收件人邮箱1\n    # ***@**.com      # 收件人邮箱2\n   }\n   notification_email_from 1412556053@qq.com # 邮箱发件人\n   smtp_server stmp.qq.com # 邮箱服务器地址\n   smtp_connect_timeout 30 # 超时时间\n   router_id LVS_DEVEL # 路由 id\n   vrrp_skip_check_adv_addr # 默认不跳过检查\n   # vrrp_strict # 这个东西要注释掉,这个东西要注释掉,这个东西要注释掉...\n   vrrp_gna_interval 0 # 单位秒,在一个网卡上每组消息之间的延迟时间,默认为 0\n   script_user root  \n   enable_script_security\n}\n\n\nvrrp_script chk_haproxy\n{\n    script "/etc/keepalived/chk_nginx.sh" # keepalived 监测 nginx 的监本路径和名称\n    interval 2 #检测时间间隔\n    weight 2  #权重\n}\n\n\n# vrrp 实例,我们集群设置,多机配置,除了 state 和 priority 不一样之外,其它的配置都是一样的\n# 主实例 state 为 MASTER , priority 的值高于副本实例的值\n# 副本实例 state 为 BACKUP , priority 的值低于主实例的值\nvrrp_instance VI_1 {\n    state BACKUP  # 服务器状态,MASTER 代表主服务器, BACKUP 是备份服务器\n    interface ens192 # 通信端口,通过 ifconfig 命令可以看到,根据自己的机器配置\n    virtual_router_id 51 # 虚拟路由 ID ,主实例和副本实例保持一致\n    priority 100 # 权重比,主服务器的 priority 比副本服务器大即可\n    advert_int 1 # 心跳间隔,单位秒, keepalived 多机器集群通过心跳检测,如果发送心跳没反应,就立刻接管\n    authentication { # 服务器之间的通信密码\n        auth_type PASS\n        auth_pass 1111\n    }\n\t\n    track_script { # keepalived 的监测脚本,与 vrrp_script 定义的名称一致\n      chk_haproxy\n    }\n\t\n    virtual_ipaddress { # 自定义虚拟 ip ,可以配置多个,每行一个\n        192.168.1.165\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br")])]),a("h3",{attrs:{id:"_3、编写-keepalived-监测-nginx-的脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、编写-keepalived-监测-nginx-的脚本"}},[s._v("#")]),s._v(" 3、编写 keepalived 监测 nginx 的脚本")]),s._v(" "),a("p",[s._v("我们在 keepalived.conf 中 vrrp_script chk_haproxy 配置的监测脚本路径和名称如下: /etc/keepalived/chk_nginx.sh")]),s._v(" "),a("p",[s._v("所以我们需要在 /etc/keepalived 目录下新建一个 chk_nginx.sh 的脚本文件,文件内容如下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#!/bin/bash\n# nginx 挂掉之后, keepalived 重新启动 nginx ,若不能启动 则关闭当前 keepalived\nstatus=`ps -ef|grep -w  nginx|grep -v grep|wc -l`\necho ${status}\nif [ ${status} -eq 0 ]; then\n    systemctl start nginx.service\n    sleep 2\n    status2=`ps -ef|grep -w  nginx|grep -v grep|wc -l`\n    echo ${status2}\n    if [ ${status2} -eq 0  ]; then\n            systemctl stop keepalived.service\n    fi\nfi\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("然后运行 chmod +x chk_nginx.sh 命令为脚本文件添加可执行权限")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("chmod +x chk_nginx.sh\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_4、启动-nginx-和-keepalived"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、启动-nginx-和-keepalived"}},[s._v("#")]),s._v(" 4、启动 nginx 和 keepalived")]),s._v(" "),a("p",[s._v("分别启动两台服务器上的 nginx 和 keepalived")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 启动 nginx\n./nginx\n\n// 启动 keepalived\nsystemctl start keepalived.service\n\n// 查看 nginx 是否成功启动\nps -ef | grep nginx\n\n// 查看 keepalived 是否成功启动\nps -ef | grep keepalived\n\n\n#扩展\n// 重启keepalived\nsystemctl restart keepalived.service\n\n// 停止keepalived\nsystemctl stop keepalived.service\n\n// 查看keepalived状态\nsystemctl status keepalived.service\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h3",{attrs:{id:"_5、测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、测试"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5、测试")])]),s._v(" "),a("p",[s._v("配置信息如下:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 主服务器:　　192.168.1.27\n\n# 从服务器:　　192.168.1.21\n\n# 虚拟IP:　　192.168.1.165\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("1、浏览器访问 192.168.1.165")]),s._v(" "),a("p",[s._v("2、关闭主机 192.168.1.27 上的 nginx 和 keepalived ,再次访问虚拟 IP ,发现可以正常访问,并且访问的是从机")]),s._v(" "),a("p",[s._v("如果主服务器上的nginx 和 keepalived恢复后，虚拟ip会漂移到主服务器上。")]),s._v(" "),a("h3",{attrs:{id:"_6、扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、扩展"}},[s._v("#")]),s._v(" 6、扩展")]),s._v(" "),a("p",[s._v("如果你的服务器有很多的nginx进程，那么上面chk_nginx.sh脚本就不生效，则可以使用下面的脚本")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#!/bin/bash\n# nginx 挂掉之后, keepalived 重新启动 nginx ,若不能启动 则关闭当前 keepalived\nfile=/usr/local/nginx/logs/nginx.pid\nif [ ! -f "$file" ]; then\n     #尝试启动nginx\n    /usr/local/nginx/sbin/nginx\n    if [ ! -f "$file" ]; then\n        systemctl stop keepalived.service\n    fi\nfi\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);