(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{346:function(a,v,_){"use strict";_.r(v);var t=_(8),i=Object(t.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h2",{attrs:{id:"jvm与java体系结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jvm与java体系结构"}},[a._v("#")]),a._v(" "),v("strong",[a._v("JVM与Java体系结构")])]),a._v(" "),v("h3",{attrs:{id:"java及jvm简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java及jvm简介"}},[a._v("#")]),a._v(" Java及JVM简介")]),a._v(" "),v("p",[a._v("世界上没有最好的编程语言，只有最适用于具体应用场景的编程语言")]),a._v(" "),v("p",[v("strong",[a._v("JVM：跨语言的平台")])]),a._v(" "),v("p",[a._v("Java是目前应用最为广泛的软件开发平台之一。随着Java以及Java社区的不断壮大Java 也早已不再是简简单单的一门计算机语言了，它更是一个平台、一种文化、一个社区。")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("作为一个平台，Java虚拟机扮演着举足轻重的作用")])]),a._v(" "),v("li",[v("p",[a._v("Groovy、Scala、JRuby、Kotlin等都是Java平台的一部分")])]),a._v(" "),v("li",[v("p",[a._v("作为灯种文化，Java几乎成为了“开源”的代名词。")])]),a._v(" "),v("li",[v("p",[a._v("第三方开源软件和框架。如Tomcat、Struts，MyBatis，Spring等。")])]),a._v(" "),v("li",[v("p",[a._v("就连JDK和JVM自身也有不少开源的实现，如openJDK、Harmony。")])]),a._v(" "),v("li",[v("p",[a._v("作为一个社区，Java拥有全世界最多的技术拥护者和开源社区支持，有数不清的论坛和资料。从桌面应用软件、嵌入式开发到企业级应用、后台服务器、中间件，都可以看到Java的身影。其应用形式之复杂、参与人数之众多也令人咋舌。")])])]),a._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230813120319069.png",alt:"image-20230813120319069"}})]),a._v(" "),v("p",[a._v("每个语言都需要转换成字节码文件，最后转换的字节码文件都能通过Java虚拟机进行运行和处理。")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230813121127161.png",alt:"image-20230813121127161"}})]),a._v(" "),v("ul",[v("li",[v("p",[a._v("随着Java7的正式发布，Java虚拟机的设计者们通过JSR-292规范基本实现在Java虚拟机平台上运行非Java语言编写的程序。")])]),a._v(" "),v("li",[v("p",[a._v("Java虚拟机根本不关心运行在其内部的程序到底是使用何种编程语言编写的，它只关心"),v("code",[a._v("字节码")]),a._v("文件。也就是说Java虚拟机拥有语言无关性，并不会单纯地与Java语言“终身绑定”，只要其他编程语言的编译结果满足并包含Java虚拟机的内部指令集、符号表以及其他的辅助信息，它就是一个有效的字节码文件，就能够被虚拟机所识别并装载运行。")])])]),a._v(" "),v("p",[v("strong",[a._v("字节码")])]),a._v(" "),v("ul",[v("li",[v("p",[a._v("我们平时说的java字节码，指的是用java语言编译成的字节码。准确的说任何能在jvm平台上执行的字节码格式都是一样的。所以应该统称为：jvm字节码。")])]),a._v(" "),v("li",[v("p",[a._v("不同的编译器，可以编译出相同的字节码文件，字节码文件也可以在不同的JVM上运行。")])]),a._v(" "),v("li",[v("p",[a._v("Java虚拟机与Java语言并没有必然的联系，它只与特定的二进制文件格式—Class文件格式所关联，Class文件中包含了Java虚拟机指令集（或者称为字节码、Bytecodes）和符号表，还有一些其他辅助信息。")])])]),a._v(" "),v("p",[v("strong",[a._v("多语言混合编程")])]),a._v(" "),v("ul",[v("li",[v("p",[a._v("Java平台上的多语言混合编程正成为主流，通过特定领域的语言去解决特定领域的问题是当前软件开发应对日趋复杂的项目需求的一个方向。")])]),a._v(" "),v("li",[v("p",[a._v("试想一下，在一个项目之中，并行处理用Clojure语言编写，展示层使用JRuby/Rails，中间层则是Java，每个应用层都将使用不同的编程语言来完成，而且，接口对每一层的开发者都是透明的，各种语言之间的交互不存在任何困难，就像使用自己语言的原生API一样方便，因为它们最终都运行在一个虚拟机之上。")])]),a._v(" "),v("li",[v("p",[a._v("对这些运行于Java虚拟机之上、Java之外的语言，来自系统级的、底层的支持正在迅速增强，以JSR-292为核心的一系列项目和功能改进（如Da Vinci Machine项目、Nashorn引擎、InvokeDynamic指令、java.lang.invoke包等），推动Java虚拟机从“Java语言的虚拟机”向 “多语言虚拟机”的方向发展。")])])]),a._v(" "),v("h3",{attrs:{id:"java发展的重大事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java发展的重大事件"}},[a._v("#")]),a._v(" Java发展的重大事件")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("1990年，在Sun计算机公司中，由Patrick Naughton、MikeSheridan及James Gosling领导的小组Green Team，开发出的新的程序语言，命名为oak，后期命名为Java。")])]),a._v(" "),v("li",[v("p",[a._v("1995年，Sun正式发布Java和HotJava产品，Java首次公开亮相。")])]),a._v(" "),v("li",[v("p",[a._v("1996年1月23日，Sun Microsystems发布了JDK 1.0。")])]),a._v(" "),v("li",[v("p",[a._v("1998年，JDK1.2版本发布。同时，sun发布了JSP/Servlet、EJB规范，以及将Java分成了J2EE、J2SE和J2ME。这表明了Java开始向企业、桌面应用和移动设备应用3大领域挺进。")])]),a._v(" "),v("li",[v("p",[a._v("2000年，JDK1.3发布，Java HotSpot Virtual Machine正式发布，成为Java的默认虚拟机。")])]),a._v(" "),v("li",[v("p",[a._v("2002年，JDK1.4发布，古老的Classic虚拟机退出历史舞台。")])]),a._v(" "),v("li",[v("p",[a._v("2003年年底，Java平台的Scala正式发布，同年Groovy也加入了Java阵营。")])]),a._v(" "),v("li",[v("p",[a._v("2004年，JDK1.5发布。同时JDK1.5改名为JavaSE5.0。")])]),a._v(" "),v("li",[v("p",[a._v("2006年，JDK6发布。同年，Java开源并建立了OpenJDK。顺理成章，Hotspot虚拟机也成为了openJDK中的默认虚拟机。")])]),a._v(" "),v("li",[v("p",[a._v("2007年，Java平台迎来了新伙伴Clojure。")])]),a._v(" "),v("li",[v("p",[a._v("2008年，Oracle收购了BEA，得到了JRockit虚拟机。")])]),a._v(" "),v("li",[v("p",[a._v("2009年，Twitter宣布把后台大部分程序从Ruby迁移到Scala，这是Java平台的又一次大规模应用。")])]),a._v(" "),v("li",[v("p",[a._v("2010年，Oracle收购了Sun，获得Java商标和最真价值的HotSpot虚拟机。此时，Oracle拥有市场占用率最高的两款虚拟机HotSpot和JRockit，并计划在未来对它们进行整合：HotRockit")])]),a._v(" "),v("li",[v("p",[a._v("2011年，JDK7发布。在JDK1.7u4中，正式启用了新的垃圾回收器G1。")])]),a._v(" "),v("li",[v("p",[a._v("2017年，JDK9发布。将G1设置为默认Gc，替代CMS")])]),a._v(" "),v("li",[v("p",[a._v("同年，IBM的J9开源，形成了现在的Open J9社区")])]),a._v(" "),v("li",[v("p",[a._v("2018年，Android的Java侵权案判决，Google赔偿Oracle计88亿美元")])]),a._v(" "),v("li",[v("p",[a._v("同年，Oracle宣告JavaEE成为历史名词JDBC、JMS、Servlet赠予Eclipse基金会")])]),a._v(" "),v("li",[v("p",[a._v("同年，JDK11发布，LTS版本的JDK，发布革命性的ZGC，调整JDK授权许可")])]),a._v(" "),v("li",[v("p",[a._v("2019年，JDK12发布，加入RedHat领导开发的shenandoah GC")])])]),a._v(" "),v("h3",{attrs:{id:"虚拟机与java虚拟机"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机与java虚拟机"}},[a._v("#")]),a._v(" 虚拟机与Java虚拟机")]),a._v(" "),v("p",[v("strong",[a._v("虚拟机")])]),a._v(" "),v("p",[a._v("所谓虚拟机（Virtual Machine），就是一台虚拟的计算机。它是一款软件，用来执行一系列虚拟计算机指令。大体上，虚拟机可以分为系统虚拟机和程序虚拟机。")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("大名鼎鼎的Visual Box，Mware就属于系统虚拟机，它们完全是对物理计算机的仿真，提供了一个可运行完整操作系统的软件平台。")])]),a._v(" "),v("li",[v("p",[a._v("程序虚拟机的典型代表就是Java虚拟机，它专门为执行单个计算机程序而设计，在Java虚拟机中执行的指令我们称为Java字节码指令。")])])]),a._v(" "),v("p",[a._v("无论是系统虚拟机还是程序虚拟机，在上面运行的软件都被限制于虚拟机提供的资源中。")]),a._v(" "),v("p",[v("strong",[a._v("Java虚拟机")])]),a._v(" "),v("ul",[v("li",[v("p",[a._v("Java虚拟机是一台执行Java字节码的虚拟计算机，它拥有独立的运行机制，其运行的Java字节码也未必由Java语言编译而成。")])]),a._v(" "),v("li",[v("p",[a._v("JVM平台的各种语言可以共享Java虚拟机带来的跨平台性、优秀的垃圾回器，以及可靠的即时编译器。")])]),a._v(" "),v("li",[v("p",[a._v("Java技术的核心就是Java虚拟机（JVM，Java Virtual Machine），因为所有的Java程序都运行在Java虚拟机内部。")])])]),a._v(" "),v("p",[a._v("作用")]),a._v(" "),v("ul",[v("li",[a._v("Java虚拟机就是二进制字节码的运行环境，负责装载字节码到其内部，解释/编译为对应平台上的机器指令执行。每一条Java指令，Java虚拟机规范中都有详细定义，如怎么取操作数，怎么处理操作数，处理结果放在哪里。")])]),a._v(" "),v("p",[a._v("特点")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("一次编译，到处运行")])]),a._v(" "),v("li",[v("p",[a._v("自动内存管理")])]),a._v(" "),v("li",[v("p",[a._v("自动垃圾回收功能")])])]),a._v(" "),v("p",[v("strong",[a._v("JVM的位置")])]),a._v(" "),v("blockquote",[v("p",[a._v("JVM是运行在操作系统之上的，它与硬件没有直接的交互")])]),a._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230813121809611.png",alt:"image-20230813121809611"}})]),a._v(" "),v("h3",{attrs:{id:"jvm的整体结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jvm的整体结构"}},[a._v("#")]),a._v(" JVM的整体结构")]),a._v(" "),v("p",[v("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230812221609721.png",alt:"image-20230812221609721"}})]),a._v(" "),v("ul",[v("li",[v("p",[a._v("HotSpot VM是目前市面上高性能虚拟机的代表作之一。")])]),a._v(" "),v("li",[v("p",[a._v("它采用解释器与即时编译器并存的架构。")])]),a._v(" "),v("li",[v("p",[a._v("在今天，Java程序的运行性能早已脱胎换骨，已经达到了可以和C/C++程序一较高下的地步。")])])]),a._v(" "),v("h3",{attrs:{id:"jvm的生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jvm的生命周期"}},[a._v("#")]),a._v(" JVM的生命周期")]),a._v(" "),v("p",[v("strong",[a._v("虚拟机的启动")])]),a._v(" "),v("p",[a._v("Java虚拟机的启动是通过引导类加载器（bootstrap class loader）创建一个初始类（initial class）来完成的，这个类是由虚拟机的具体实现指定的。")]),a._v(" "),v("p",[v("strong",[a._v("虚拟机的执行")])]),a._v(" "),v("ul",[v("li",[v("p",[a._v("一个运行中的Java虚拟机有着一个清晰的任务：执行Java程序。")])]),a._v(" "),v("li",[v("p",[a._v("程序开始执行时他才运行，程序结束时他就停止。")])]),a._v(" "),v("li",[v("p",[a._v("执行一个所谓的Java程序的时候，真真正正在执行的是一个叫做Java虚拟机的进程。")])])]),a._v(" "),v("p",[v("strong",[a._v("虚拟机的退出")])]),a._v(" "),v("p",[a._v("有如下的几种情况：")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("程序正常执行结束")])]),a._v(" "),v("li",[v("p",[a._v("程序在执行过程中遇到了异常或错误而异常终止")])]),a._v(" "),v("li",[v("p",[a._v("由于操作系统用现错误而导致Java虚拟机进程终止")])]),a._v(" "),v("li",[v("p",[a._v("某线程调用Runtime类或system类的exit方法，或Runtime类的halt方法，并且Java安全管理器也允许这次exit或halt操作。")])]),a._v(" "),v("li",[v("p",[a._v("除此之外，JNI（Java Native Interface）规范描述了用JNI Invocation API来加载或卸载 Java虚拟机时，Java虚拟机的退出情况。")])])])])}),[],!1,null,null,null);v.default=i.exports}}]);