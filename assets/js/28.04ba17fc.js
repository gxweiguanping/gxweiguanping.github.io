(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{357:function(s,a,t){"use strict";t.r(a);var n=t(8),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"垃圾收集概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集概述"}},[s._v("#")]),s._v(" 垃圾收集概述")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230828211726604.png",alt:"image-20230828211726604"}})]),s._v(" "),a("blockquote",[a("p",[s._v("垃圾收集，不是Java语言的伴生产物。早在1960年，第一门开始使用内存动态分配和垃圾收集技术的Lisp语言诞生。")])]),s._v(" "),a("p",[a("strong",[s._v("关于垃圾收集有三个经典问题：")])]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("哪些内存需要回收？")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("什么时候回收？")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("如何回收？")])])])]),s._v(" "),a("p",[s._v("垃圾收集机制是Java的招牌能力，极大地提高了开发效率。如今，垃圾收集几乎成为现代语言的标配，即使经过如此长时间的发展，Java的垃圾收集机制仍然在不断的演进中，不同大小的设备、不同特征的应用场景，对垃圾收集提出了新的挑战。")]),s._v(" "),a("h3",{attrs:{id:"什么是垃圾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是垃圾"}},[s._v("#")]),s._v(" 什么是垃圾？")]),s._v(" "),a("blockquote",[a("p",[s._v("垃圾是指在运行程序中没有任何指针指向的对象，这个对象就是需要被回收的垃圾。")])]),s._v(" "),a("p",[s._v("如果不及时对内存中的垃圾进行清理，那么，这些垃圾对象所占的内存空间会一直保留到应用程序的结束，被保留的空间无法被其它对象使用，甚至可能导致内存溢出(OOM)。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/Screenshot_2023-08-20-12-40-10-6571_com.miui.home.jpg",alt:"Screenshot_2023-08-20-12-40-10-6571_com.miui.home"}})]),s._v(" "),a("h3",{attrs:{id:"为什么需要gc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要gc"}},[s._v("#")]),s._v(" 为什么需要GC?")]),s._v(" "),a("p",[s._v("GC（垃圾回收）是一种"),a("code",[s._v("自动管理内存的机制，它的作用是帮助我们释放不再使用的内存空间，以便让计算机更高效地运行")]),s._v("。")]),s._v(" "),a("p",[s._v("想象一下，当我们在使用电脑或手机时，我们会打开各种应用程序或者网页，这些程序会占用一定的内存空间。但是，当我们关闭这些应用程序或者离开这些网页时，这些占用的内存空间就变得没有意义了，因为我们不再需要它们。")]),s._v(" "),a("p",[s._v("如果没有GC，我们就需要手动去释放这些不再使用的内存空间，这会非常麻烦和容易出错。而且，如果我们忘记释放内存，那么这些无用的内存空间就会一直占用着计算机的资源，导致计算机变慢甚至崩溃。")]),s._v(" "),a("p",[s._v("而有了GC，它会自动检测哪些内存空间是不再使用的，然后将其释放，这样我们就不需要手动去管理内存了。GC会定期地扫描内存，找出那些没有被引用的对象，然后将它们标记为垃圾，并释放它们所占用的内存空间。")]),s._v(" "),a("p",[s._v("所以，GC的作用就是帮助我们自动释放不再使用的内存空间，让计算机更高效地运行，同时减少我们手动管理内存的工作量。")]),s._v(" "),a("h3",{attrs:{id:"早期的垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#早期的垃圾回收"}},[s._v("#")]),s._v(" 早期的垃圾回收")]),s._v(" "),a("p",[s._v("在早期的C/C++时代，垃圾回收基本上是手工进行的。开发人员可以使用new关键字进行内存申请，并使用delete关键字进行内存释放。")]),s._v(" "),a("p",[s._v("比如以下代码：")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#include <iostream>\n\nint main() {\n    // 使用new关键字申请内存空间\n    int* ptr = new int(5);\n\n    // 使用指针访问内存空间中的值\n    std::cout << "Value: " << *ptr << std::endl;\n\n    // 使用delete关键字释放内存空间\n    delete ptr;\n\n    return 0;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("在这个例子中，使用"),a("code",[s._v("new")]),s._v("关键字动态地分配了一个整数类型的内存空间，并将值5存储在这个内存空间中。然后，使用指针"),a("code",[s._v("ptr")]),s._v("来访问这个内存空间中的值，并将其打印出来。")]),s._v(" "),a("p",[s._v("最后，使用"),a("code",[s._v("delete")]),s._v("关键字手动释放了这个内存空间，以确保不再使用它。这样，就完成了手动进行内存管理的过程。")]),s._v(" "),a("p",[s._v("但这样是会给开发人员带来"),a("code",[s._v("频繁申请和释放内存的管理负担")]),s._v("。倘若有一处内存区间由于程序员编码的问题忘记被回收，那么就会产生"),a("code",[s._v("内存泄漏")]),s._v("，垃圾对象永远无法被清除，随着系统运行时间的不断增长，垃圾对象所耗内存可能持续上升，直到出现内存溢出并造成"),a("code",[s._v("应用程序崩溃")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"java垃圾回收机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java垃圾回收机制"}},[s._v("#")]),s._v(" Java垃圾回收机制")]),s._v(" "),a("p",[s._v("oracle官网关于垃圾回收的介绍 https://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/toc.html")]),s._v(" "),a("ul",[a("li",[s._v("自动内存管理，无需开发人员手动参与内存的分配与回收，这样"),a("code",[s._v("降低内存泄漏和内存溢出的风险")]),s._v("。")]),s._v(" "),a("li",[s._v("没有垃圾回收器，java也会和c++一样，各种悬垂指针，野指针，泄露问题让你头疼不已。")]),s._v(" "),a("li",[s._v("自动内存管理机制，将程序员从繁重的内存管理中释放出来，可以更"),a("code",[s._v("专心地专注于业务开发")]),s._v("。")])]),s._v(" "),a("p",[s._v("在没有垃圾回收器的情况下，Java程序可能会出现悬垂指针、野指针和内存泄漏等问题。以下是一些可能导致这些问题的示例：")]),s._v(" "),a("p",[a("strong",[s._v("悬垂指针")]),s._v("：当一个指针指向已经释放或无效的内存地址时，就称之为悬垂指针（dangling pointer）。悬垂指针可能会导致程序访问无效的内存，从而引发未定义的行为或崩溃。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        \n        obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// obj1的instance指向obj2")]),s._v("\n        obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// obj2置为null")]),s._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时obj2成为悬垂指针，但由于没有垃圾回收器，它仍然存在于内存中")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在后续的代码中，如果误用了obj2，可能导致不可预料的行为或错误")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[a("strong",[s._v("野指针（wild pointer）")]),s._v("：是指指针变量没有被初始化或者指向一个未知的内存地址。野指针可能会导致程序访问未知的内存，同样会引发未定义的行为或崩溃。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// obj为null")]),s._v("\n        \n        obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在没有垃圾回收器的情况下，调用null对象的方法会导致空指针异常")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// do something")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("strong",[s._v("内存泄漏：")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyClass")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每次循环都向list中添加元素，但没有进行清理操作")]),s._v("\n            \n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在没有垃圾回收器的情况下，list会不断增长，占用越来越多的内存")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最终可能导致内存耗尽或程序崩溃")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("这些示例展示了在没有垃圾回收器的情况下，Java程序可能遇到的悬垂指针、野指针和内存泄漏等问题。这些问题会导致程序的不稳定性、内存占用过高以及不可预料的行为。因此，垃圾回收器在Java中起到了重要的作用，帮助我们自动管理内存并避免这些问题的发生。")]),s._v(" "),a("h3",{attrs:{id:"gc主要关注的区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gc主要关注的区域"}},[s._v("#")]),s._v(" "),a("strong",[s._v("GC主要关注的区域")])]),s._v(" "),a("p",[s._v("GC主要关注于 "),a("code",[s._v("方法区")]),s._v(" 和"),a("code",[s._v("堆")]),s._v("中的垃圾收集")]),s._v(" "),a("p",[s._v("垃圾收集器可以对年轻代回收，也可以对老年代回收，甚至是全堆和方法区的回收。其中，Java堆是垃圾收集器的工作重点")]),s._v(" "),a("p",[s._v("从次数上讲：")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("频繁收集Young（新生代）")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("较少收集Old（老年代）")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("基本不收集Perm区（元空间）")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);