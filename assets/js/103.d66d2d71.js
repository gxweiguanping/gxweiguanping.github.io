(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{435:function(e,s,a){"use strict";a.r(s);var t=a(8),n=Object(t.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"配置优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置优化"}},[e._v("#")]),e._v(" 配置优化")]),e._v(" "),s("p",[e._v("对 InfluxDB 的配置优化，主要从一些配置参数出发提高InfluxDB的性能。")]),e._v(" "),s("h2",{attrs:{id:"性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[e._v("#")]),e._v(" 性能优化")]),e._v(" "),s("p",[e._v("Influxdb的存储引擎是TSM Tree, 基本上整体思想和LSM Tree类似，做了一些时序场景下数据存储结构上的建模优化。"),s("code",[e._v("cache-snapshot-memory-size")]),e._v("值需要调大。")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  # CacheSnapshotMemorySize is the size at which the engine will\n  # snapshot the cache and write it to a TSM file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" freeing up memory\n  cache-snapshot-memory-size = "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("562144000")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[s("code",[e._v("cache-snapshot-memory-size")]),e._v(" 这个大小控制的是 LSM 中的 cache 的大小，当 cache 达到一定阈值后，cache 会落盘生成"),s("code",[e._v("tsm file")]),e._v(", 此时的 tsm file 的level为 level 0 , 两个相同 level 的 tsm file 会进行 compact 生成一个"),s("code",[e._v("level + 1")]),e._v("的 tsm file, 既两个"),s("code",[e._v("level 0")]),e._v("的tsm file会生成一个"),s("code",[e._v("level 1")]),e._v("的tsm file，这种设计既TSM tree的写入放大问题。")]),e._v(" "),s("p",[e._v("由于Influxdb是固定两个低level 文件compact成一个高一级 level的tsm file，所以如果cache size越小，dump成tsm file的频率越高，进而做compact的频率也越高，造成写入放大越显著，当写入的频率很高的场景下，会导致influxdb的吞吐下降非常明显。")]),e._v(" "),s("p",[e._v("compact频率变高后，Influxdb写入放大很重要一个原因是TSM file数据做了编码压缩磁盘占用空间，当compact时，需要对数据decode，会带来明显的性能损耗。")]),e._v(" "),s("p",[e._v("Influxdb为了优化这个问题，在做compact时分为optimize compact和full compact两种类型。在full compact场景下，首先会对tsm file中的block做decode，然后按照每个Block存储的point数量，将decode的Point value按照时间顺序重新encode成Block，然后写入到新的TSM file中，其中的性能损耗会非常显著。而在optimize场景下，不会读取block内部的数据，会对多个block拼接，减少性能消耗。")]),e._v(" "),s("p",[e._v("目前部分场景下Influxdb做compact还是会选择 full compact。optimize compact虽然会提升compact速度和减少compact的资源消耗，但是会引起查询放大问题：需要从多个block中才能获取到需要返回的数据。")]),e._v(" "),s("h3",{attrs:{id:"说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[e._v("#")]),e._v(" 说明")]),e._v(" "),s("p",[s("code",[e._v("cache-snapshot-memory-size")]),e._v(" 值理论上是越大越好，但是需要关注你的硬件配置。")]),e._v(" "),s("p",[s("code",[e._v("cache-snapshot-memory-size")]),e._v(" 值跟当前并发写入 tags 数量有关系，如果你的tags数很大的情况下，一定要调大这个值，如果tags数不多，只是少数tag的数据写入频率很高，那么这个值稍低也不会对性能有太大影响。")]),e._v(" "),s("h2",{attrs:{id:"超时设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超时设置"}},[e._v("#")]),e._v(" 超时设置")]),e._v(" "),s("p",[e._v("这个问题主要是在Influxdb的老版本(低于1.5版本)存在，且有一定风险。Influxdb对控制内存使用量上的设计比较粗糙。建议生产库上不要随意执行sql，一旦sql导致内存使用过多，容易导致Influxdb oom。而且在目前Inverted Index的设计中，Influxdb oom kill掉之后重新启动速度很慢，因为启动过程要重新遍历tsm file生成内存中的Inverted Index，加上数据都是进行了encode，在数据量比较大的情况下，启动速度非常慢，所以建议上述的读取数量开关打开，因为默认情况下是不会发生出现那么大请求，如果有这种特殊sql存在，请酌情考虑。")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("coordinator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  # The maximum time a query will is allowed to execute before being killed by the system.  This limit\n  # can help prevent run away queries.  Setting the value to "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" disables the limit.\n  query-timeout = "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"120s"')]),e._v("\n  \n  # The maximum number of points a SELECT can process.  A value of "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" will make\n  # the maximum point count unlimited.  This will only be checked every "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" seconds so queries will not\n  # be aborted immediately when hitting the limit.\n  max-select-point = "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000000")]),e._v("\n  \n  # The maximum number of series a SELECT can run.  A value of "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" will make the maximum series\n  # count unlimited.\n  max-select-series = "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000000")]),e._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  # The default chunk size for result sets that should be chunked.\n  max-row-limit = "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000000")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br")])]),s("p",[e._v("InfluxDB对控制内存使用量主要cost在几个方面：")]),e._v(" "),s("ul",[s("li",[e._v('返回结果集很大的情况下，数据会cache在内存中，等计算完成后，统一返回给Client。Influxdb内部算子是通过pipeline的方式流式交互，但是返回给Client需要Client在调用的时候传递"chunked"参数才能实现pipeline方式返回。所以建议max-select-point，query-timeout，max-row-limit一定要打开，防止一些误操作查询。 不过1.6版本后据说有了kill process的功能，这样可以及时kill掉，这块本人没有具体调研，这里不做介绍。')]),e._v(" "),s("li",[e._v("如果sql没有对tags filter condition，那么每条Sql都会在内存中拷贝一份全量的Series，所以sql query 的 filter condition需要定义明确。")])]),e._v(" "),s("p",[e._v('InfluxDB oom的问题在正常的时序使用场景下不会发生，但是一不小心就可以踩进"坑"里。')]),e._v(" "),s("h2",{attrs:{id:"安全层面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全层面"}},[e._v("#")]),e._v(" 安全层面")]),e._v(" "),s("p",[e._v("如果线上环境使用，"),s("code",[e._v("reporting-disabled")]),e._v("这个要配置上，不仅整个系统的安全性得到了提升，同时也有助于风控。")]),e._v(" "),s("p",[e._v("这个特定的配置选项 "),s("code",[e._v("reporting-disabled")]),e._v(" 控制了InfluxDB是否会向 usage.influxdata.com 报告使用数据。")]),e._v(" "),s("p",[e._v("默认情况下，这个选项被设置为 "),s("code",[e._v("false")]),e._v("，这意味着InfluxDB会每24小时向 usage.influxdata.com 发送一次使用数据报告。这些报告包含一些关于你的InfluxDB实例的信息，包括操作系统类型（os）、处理器架构（arch）、InfluxDB版本、系列数量以及其他使用数据。但是请注意，这些报告中"),s("strong",[e._v("不包含任何用户数据库的数据")]),e._v("。")]),e._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[e._v("# Once every "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("24")]),e._v(" hours InfluxDB will report usage data to usage.influxdata.com\n# The data includes a random ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" arch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" version"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" the number of series and other\n# usage data. No data from user databases is ever transmitted.\n# Change this option to "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v(" to disable reporting.\nreporting-disabled = "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h2",{attrs:{id:"关闭http日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭http日志"}},[e._v("#")]),e._v(" 关闭http日志")]),e._v(" "),s("p",[e._v("InfluxDB 1.8.10 默认情况下会记录一些 HTTP 请求的日志，这对于调试和监控服务可能很有用。但是，在生产环境中，这些日志可能会变得非常冗长，并且在某些情况下你可能希望禁用它们以减少日志输出。")]),e._v(" "),s("p",[e._v("要关闭 InfluxDB 的特定 HTTP 日志记录，你需要编辑 InfluxDB 的配置文件。")]),e._v(" "),s("p",[e._v("找到 "),s("code",[e._v("[http]")]),e._v(" 部分，你会看到像这样的设置：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('[http]\n  enabled = true\n  bind-address = ":8086"\n  auth-enabled = false\n  log-enabled = true\n  write-tracing = false\n  pprof-enabled = false\n  https-enabled = false\n  https-certificate = "/etc/ssl/influxdb.pem"\n  max-row-limit = 10000\n  max-connection-limit = 0\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("p",[e._v("其中，"),s("code",[e._v("log-enabled = true")]),e._v(" 表示启用 HTTP 日志记录。将这个值改为 "),s("code",[e._v("false")]),e._v(" 即可关闭 HTTP 日志记录：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("toml[http]\n  ...\n  log-enabled = false\n  ...\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("不然你的日志文件会来越大")])])}),[],!1,null,null,null);s.default=n.exports}}]);