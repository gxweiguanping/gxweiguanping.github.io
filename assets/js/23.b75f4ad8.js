(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{353:function(s,a,t){"use strict";t.r(a);var n=t(8),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"java堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java堆"}},[s._v("#")]),s._v(" Java堆")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230814145012049.png",alt:"image-20230814145012049"}})]),s._v(" "),a("h3",{attrs:{id:"堆-heap-的核心概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆-heap-的核心概述"}},[s._v("#")]),s._v(" 堆（Heap）的核心概述")]),s._v(" "),a("ol",[a("li",[s._v("对于Java应用程序来说，"),a("code",[s._v("Java堆（Java Heap）是虚拟机所管理的内存中最大的一块")]),s._v("。")]),s._v(" "),a("li",[s._v("Java堆是垃圾收集器管理的内存区域，因此一些资料中它也被称作“GC堆”（Garbage Collected Heap)。")]),s._v(" "),a("li",[s._v("Java世界里“几乎”所有的对象实例都在这里分配内存。在《Java虚拟机规范》中对Java堆的描述是：“所有的对象实例以及数组都应当在堆上分配 (The heap is the runtime data area from which memory for all class instances and arrays is allocated)”，而这里写的“几乎”是指从实现角度来看，随着Java语言的发展，现在已经能看到些许迹象表明日后可能出现值类型的支持，即使只考虑现在，由于即时编译技术的进步，尤其是逃逸分析技术的日渐强大，栈上分配、标量替换优化手段已经导致一些微妙的变化悄然发生，所以说Java对象实例都分配在堆上也渐渐变得不是那么绝对了。")]),s._v(" "),a("li",[s._v("从分配内存的角度看，所有线程共享的Java堆中可以划分出多个线程私有的分配缓冲区（"),a("code",[s._v("Thread Local Allocation Buffer，TLAB")]),s._v("），以提升对象分配时的效率。")]),s._v(" "),a("li",[s._v("《Java虚拟机规范》规定，堆可以处于"),a("code",[s._v("物理上不连续")]),s._v("的内存空间中，但在"),a("code",[s._v("逻辑上")]),s._v("它应该被视为"),a("code",[s._v("连续")]),s._v("的。")]),s._v(" "),a("li",[s._v("Java堆既可以被实现成固定大小的，也可以是可扩展的，不过当前主流的Java虚拟机都是按照可扩展来实现的（"),a("code",[s._v("通过参数-Xmx和-Xms设定")]),s._v("）。如果在Java堆中没有内存完成实例分配，并且堆也无法再扩展时，Java虚拟机将会抛出"),a("code",[s._v("OutOfMemoryError")]),s._v("异常")]),s._v(" "),a("li",[s._v("在方法结束后，堆中的对象不会马上被移除，仅仅在垃圾收集的时候才会被移除。")])]),s._v(" "),a("p",[s._v("以下代码说明了栈、堆、方法区的联系")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleHeap")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleHeap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("show")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my id is "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleHeap")]),s._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleHeap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleHeap")]),s._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleHeap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819101007833.png",alt:"image-20230819101007833"}})]),s._v(" "),a("h3",{attrs:{id:"堆内存细分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆内存细分"}},[s._v("#")]),s._v(" 堆内存细分")]),s._v(" "),a("blockquote",[a("p",[s._v("下面的JDK7和JDK8的堆内存是"),a("code",[s._v("逻辑上")]),s._v("三部分")])]),s._v(" "),a("h4",{attrs:{id:"堆空间内部结构-jdk7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆空间内部结构-jdk7"}},[s._v("#")]),s._v(" 堆空间内部结构（JDK7）")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("新生区（Young Generation Space）")]),s._v("：\n"),a("ul",[a("li",[s._v("分为Eden区和Survivor区，用于存放新创建的对象。")]),s._v(" "),a("li",[s._v("对象在Eden区进行初始分配，然后可能会被移到Survivor区。")])])]),s._v(" "),a("li",[a("strong",[s._v("养老区（Tenure Generation Space）")]),s._v("：\n"),a("ul",[a("li",[s._v("也称为老年区，用于存放经过多次垃圾回收仍然存活的对象。")]),s._v(" "),a("li",[s._v("在养老区进行长时间存活的对象，可能会晋升到养老区。")])])]),s._v(" "),a("li",[a("strong",[s._v("永久区（Permanent Space）")]),s._v("：\n"),a("ul",[a("li",[s._v("用于存放类信息、方法信息、常量池等。")]),s._v(" "),a("li",[s._v("存在问题，可能导致永久代溢出，例如字符串常量池过大。")])])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819103616213.png",alt:"image-20230819103616213"}})]),s._v(" "),a("h4",{attrs:{id:"堆空间内部结构-jdk8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆空间内部结构-jdk8"}},[s._v("#")]),s._v(" 堆空间内部结构（JDK8）")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("新生区（Young Generation Space）")]),s._v("：\n"),a("ul",[a("li",[s._v("分为Eden区和Survivor区，用于存放新创建的对象，与Java 7相同。")]),s._v(" "),a("li",[s._v("对象在Eden区进行初始分配，然后可能会被移到Survivor区。")])])]),s._v(" "),a("li",[a("strong",[s._v("养老区（Tenure Generation Space）")]),s._v("：\n"),a("ul",[a("li",[s._v("也称为老年区，用于存放经过多次垃圾回收仍然存活的对象，与Java 7相同。")]),s._v(" "),a("li",[s._v("在养老区进行长时间存活的对象，可能会晋升到养老区。")])])]),s._v(" "),a("li",[a("strong",[s._v("元空间（Metaspace）")]),s._v("：\n"),a("ul",[a("li",[s._v("取代了永久区，用于存放类信息、方法信息等。")]),s._v(" "),a("li",[s._v("元空间使用本地内存而不是Java堆，可以动态调整大小。")])])])]),s._v(" "),a("p",[s._v("综上所述，Java 7及之前的堆内存分为新生区、养老区和永久区，而Java 8及之后的堆内存分为新生区、养老区和元空间。在Java 8后，永久代被元空间所取代，这可以带来更好的内存管理和性能。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819103930685.png",alt:"image-20230819103930685"}})]),s._v(" "),a("h3",{attrs:{id:"设置堆内存大小与oom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置堆内存大小与oom"}},[s._v("#")]),s._v(" 设置堆内存大小与OOM")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v('⚠️小贴士：通过选项"-Xmx"和"-Xms"来进行设置堆大小，'),a("code",[s._v("只会影响物理上的堆")]),s._v("。")])]),s._v(" "),a("h4",{attrs:{id:"堆空间大小的设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆空间大小的设置"}},[s._v("#")]),s._v(" 堆空间大小的设置")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("堆的大小设置")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("在JVM启动时通过选项 "),a("code",[s._v("-Xms")]),s._v(" 和 "),a("code",[s._v("-Xmx")]),s._v(" 进行设置。")]),s._v(" "),a("li",[a("code",[s._v("-Xms")]),s._v(" 表示堆区的起始内存（"),a("code",[s._v("-XX:InitialHeapSize")]),s._v("）。")]),s._v(" "),a("li",[a("code",[s._v("-Xmx")]),s._v(" 表示堆区的最大内存（"),a("code",[s._v("-XX:MaxHeapSize")]),s._v("）。")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("内存限制和异常")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("如果堆区内存超过 "),a("code",[s._v("-Xmx")]),s._v(" 指定的最大值，将抛出 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 异常。")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("相同值配置")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("通常将 "),a("code",[s._v("-Xms")]),s._v(" 和 "),a("code",[s._v("-Xmx")]),s._v(" 参数配置为相同的值，这样做可以确保JVM在启动时分配足够的内存空间，避免频繁的堆扩展操作，从而提高应用程序的启动性能。此外，将最大堆大小设置为初始堆大小的值可以避免堆大小的动态调整，减少了垃圾回收的频率和停顿时间，提高了应用程序的运行时性能。")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("默认设置")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("默认情况下，初始内存大小约为物理电脑内存大小的 1/64。")]),s._v(" "),a("li",[s._v("默认情况下，最大内存大小约为物理电脑内存大小的 1/4。")])]),s._v(" "),a("div",{staticClass:"language-JAVA line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MemorySizeVerification")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取当前运行时对象")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runtime")]),s._v(" runtime "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runtime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRuntime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取Java虚拟机中的堆内存大小（以M为单位）")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// runtime.totalMemory()获取的是字节")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" initialMemorySize "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" runtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("totalMemory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取Java虚拟机试图使用的最大堆内存（以M为单位）")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" maxMemorySize "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" runtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("maxMemory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Xms："')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" initialMemorySize "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"M"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Xms："')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" maxMemorySize "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"M"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"电脑的内存大小为："')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" initialMemorySize "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64.0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"G"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"电脑的内存大小为："')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" maxMemorySize "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"G"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819114530070.png",alt:"image-20230819114530070"}})])])]),s._v(" "),a("p",[s._v("当你启动Java应用程序时，你可以使用 "),a("code",[s._v("-Xms")]),s._v(" 和 "),a("code",[s._v("-Xmx")]),s._v(" 参数来指定堆区的起始内存和最大内存。下面是一些示例：")]),s._v(" "),a("p",[a("strong",[s._v("使用更大的堆区")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("java -Xms1g -Xmx2g YourMainClass\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这会将堆区的初始内存设置为1GB，最大内存设置为2GB。如果你的应用程序需要处理大量数据或需要更多内存，可以适当增加堆区的大小。")]),s._v(" "),a("p",[a("strong",[s._v("使用不同的单位")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("java -Xms256m -Xmx512m YourMainClass\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在这个示例中，"),a("code",[s._v("-Xms")]),s._v(" 和 "),a("code",[s._v("-Xmx")]),s._v(" 参数的值使用了默认的单位（字节）。你还可以使用其他单位，例如 "),a("code",[s._v("k")]),s._v(" 表示千字节，"),a("code",[s._v("m")]),s._v(" 表示兆字节，"),a("code",[s._v("g")]),s._v(" 表示千兆字节。")]),s._v(" "),a("p",[a("strong",[s._v("指定相同的初始和最大内存")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("java "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xms512m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xmx512m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("YourMainClass")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这会将堆区的初始内存和最大内存都设置为512MB。这样做可以避免在运行过程中动态调整堆区大小，有助于提高性能。")]),s._v(" "),a("p",[a("strong",[s._v("指定不同的初始和最大内存")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("java -Xms256m -Xmx1024m YourMainClass\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这会将堆区的初始内存设置为256MB，最大内存设置为1024MB。这样可以让堆区在需要时动态扩展，但不超过最大内存限制。")]),s._v(" "),a("p",[a("strong",[s._v("在idea中的操作")])]),s._v(" "),a("ul",[a("li",[s._v("-Xms20m：设置堆内存的初始大小为20MB。")]),s._v(" "),a("li",[s._v("-Xmx20m：设置堆内存的最大大小为20MB。")]),s._v(" "),a("li",[s._v("-XX:+PrintGCDetails：开启打印垃圾回收的详细信息，包括每次垃圾回收的时间、回收前后的堆内存使用情况等")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819105936352.png",alt:"image-20230819105936352"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819110420233.png",alt:"image-20230819110420233"}})]),s._v(" "),a("h4",{attrs:{id:"outofmemory举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outofmemory举例"}},[s._v("#")]),s._v(" OutOfMemory举例")]),s._v(" "),a("p",[s._v("当涉及 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 时，以下是一些示例代码，说明不同情况下可能导致内存不足的情况。")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("堆内存溢出")]),s._v("：")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapOOMExample")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分配1MB的内存")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OutOfMemoryError")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Heap memory out of bounds."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230815120403504.png",alt:"image-20230815120403504"}})]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("方法调用栈溢出")]),s._v("：")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StackOverflowExample")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("recursiveMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("recursiveMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("recursiveMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StackOverflowError")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Stack overflow."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230815120456607.png",alt:"image-20230815120456607"}})]),s._v(" "),a("p",[s._v("这些示例代码展示了不同情况下可能导致 "),a("code",[s._v("OutOfMemoryError")]),s._v(" 的情况。请注意，这些代码故意创建了不合理的场景以触发错误。在实际开发中，应谨慎管理内存，避免发生内存不足的情况。")]),s._v(" "),a("h3",{attrs:{id:"年轻代与老年代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#年轻代与老年代"}},[s._v("#")]),s._v(" 年轻代与老年代")]),s._v(" "),a("p",[s._v("存储在JVM中的Java对象可以分为两类，并对Java堆区进行进一步细分如下：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("两类Java对象的生命周期")]),s._v("：\n"),a("ul",[a("li",[a("strong",[s._v("瞬时对象")]),s._v("：这类对象的生命周期很短暂，"),a("code",[s._v("创建和消亡都迅速")]),s._v("。")]),s._v(" "),a("li",[a("strong",[s._v("长生命周期对象")]),s._v("：这类对象的生命周期很长，在某些情况下甚至能"),a("code",[s._v("与JVM的生命周期保持一致")]),s._v("。")])])]),s._v(" "),a("li",[a("strong",[s._v("Java堆区的划分")]),s._v("：\n"),a("ul",[a("li",[a("strong",[s._v("年轻代（Young Generation）")]),s._v("：这是一个对象的初始分配区域，用于存储新创建的对象。\n"),a("ul",[a("li",[a("code",[s._v("Eden空间")]),s._v("：初始分配的对象存放在此，大部分对象很快消亡。")]),s._v(" "),a("li",[a("code",[s._v("Survivor0(form)空间")]),s._v("：从Eden空间和Survivor1空间中经过一次垃圾回收后存活的对象被移到此。")]),s._v(" "),a("li",[a("code",[s._v("Survivor1(to)空间")]),s._v("："),a("code",[s._v("与Survivor0空间交替使用")]),s._v("，存储经过多次垃圾回收后仍存活的对象。")])])]),s._v(" "),a("li",[a("strong",[s._v("老年代（Old Generation）")]),s._v("：这是年轻代中生命周期较长的对象的存放区域，也是垃圾回收后存活的对象的目的地。")])])])]),s._v(" "),a("p",[s._v("综上所述，JVM中的Java对象可以根据其生命周期划分为瞬时对象和长生命周期对象。而Java堆区则进一步细分为年轻代（包括Eden空间、Survivor0空间和Survivor1空间）以及老年代，以便有效地管理不同生命周期的对象。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/61e73b1c-10df-4165-ba8c-ae0933ef89b8.png",alt:"61e73b1c-10df-4165-ba8c-ae0933ef89b8"}})]),s._v(" "),a("p",[s._v("下面这参数开发中一般不会进行调整：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819125324668.png",alt:"image-20230819125324668"}})]),s._v(" "),a("p",[a("strong",[s._v("调整新生代和老年代占比")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("默认"),a("code",[s._v("-XX:NewRatio=2")]),s._v("，表示新生代占1，老年代占2，新生代占整个堆的1/3")])]),s._v(" "),a("li",[a("p",[s._v("可以修改"),a("code",[s._v("-XX:NewRatio=4")]),s._v("，表示新生代占1，老年代占4，新生代占整个堆的1/5")])])]),s._v(" "),a("p",[a("strong",[s._v("调整新生代中"),a("code",[s._v("Eden")]),s._v("、"),a("code",[s._v("From")]),s._v("、"),a("code",[s._v("To")]),s._v("的占比")])]),s._v(" "),a("p",[s._v("在HotSpot中，Eden空间和另外两个survivor空间缺省所占的比例是8：1：1，但是其实他还有一个自适应的策略，所以如果我们想看到8:1:1，我们可以通过选项“"),a("code",[s._v("-XX:SurvivorRatio")]),s._v("”调整这个空间比例。比如"),a("code",[s._v("-XX:SurvivorRatio=8")]),s._v("，就是默认的8:1:1")]),s._v(" "),a("p",[s._v("例如，如果使用默认的SurvivorRatio=8，那么新生代中的内存布局将是：Eden区占用新生代80%的空间，而每个Survivor区占用10%的空间。这意味着如果堆大小为1GB，那么新生代的大小将为341MB，其中Eden区的大小将为273MB，而每个Survivor区的大小将为34MB。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Eden")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Survivor0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Survivor1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Old")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Head")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Space")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("273")]),s._v("M  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v("M    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v("M    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("683")]),s._v("M  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v("M  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GB")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819151753340.png",alt:"image-20230819151753340"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819152401686.png",alt:"image-20230819152401686"}})]),s._v(" "),a("p",[s._v("几乎所有的Java对象都是在Eden区被new出来的。绝大部分的Java对象的销毁都在新生代进行了。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("IBM公司的专门研究表明，新生代中80%的对象都是“朝生夕死”的")]),s._v("。")])]),s._v(" "),a("p",[s._v('可以使用选项"'),a("code",[s._v("-Xmn")]),s._v('"设置新生代最大内存大小，这个参数一般使用默认值就可以了。')]),s._v(" "),a("h3",{attrs:{id:"图解对象分配过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图解对象分配过程"}},[s._v("#")]),s._v(" 图解对象分配过程")]),s._v(" "),a("p",[s._v("为新对象分配内存是一件非常严谨和复杂的任务，JVM的设计者们不仅需要考虑内存如何分配、在哪里分配等问题，并且由于内存分配算法与内存回收算法密切相关，所以还需要考虑GC执行完内存回收后是否会在内存空间中产生内存碎片。")]),s._v(" "),a("p",[s._v("1、new的对象先放伊甸园区。此区有大小限制。")]),s._v(" "),a("p",[s._v("2、当伊甸园的空间填满时，程序又需要创建对象，JVM的垃圾回收器将对伊甸园区进行垃圾回收（MinorGC），将伊甸园区中的不再被其他对象所引用的对象进行销毁。再加载新的对象放到伊甸园区")]),s._v(" "),a("p",[s._v("3、 然后将伊甸园中的剩余对象移动到幸存者0区。")]),s._v(" "),a("p",[s._v("4、如果再次触发垃圾回收，此时上次幸存下来的放到幸存者0区的，如果没有回收，就会放到幸存者1区。")]),s._v(" "),a("p",[s._v("5、 如果再次经历垃圾回收，此时会重新放回幸存者0区，接着再去幸存者1区。")]),s._v(" "),a("p",[s._v("6、啥时候能去养老区呢？可以设置次数。默认是15次。")]),s._v(" "),a("ul",[a("li",[a("ul",[a("li",[s._v("可以设置参数：进行设置"),a("code",[s._v("-Xx:MaxTenuringThreshold= N")])])])])]),s._v(" "),a("p",[s._v("7、 在养老区，相对悠闲。当养老区内存不足时，再次触发GC：Major GC，进行养老区的内存清理")]),s._v(" "),a("p",[s._v("8、若养老区执行了Major GC之后，发现依然无法进行对象的保存，就会产生OOM异常。")]),s._v(" "),a("blockquote",[a("p",[s._v("红色：表示该对象被视为垃圾")]),s._v(" "),a("p",[s._v("绿色：表示该对象还在使用")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/ce3beaa9-3669-4062-862a-25d4ed37ba5f.jpg",alt:"ce3beaa9-3669-4062-862a-25d4ed37ba5f"}})]),s._v(" "),a("p",[a("strong",[s._v("流程图")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819141118542.png",alt:"image-20230819141118542"}})]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @author:wgp\n * @create: 2023-08-19 15:51\n * @Description: -Xms600m -Xmx600m\n */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapInstanceTest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapInstanceTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapInstanceTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("p",[s._v("运行以上代码后在Visual VM 的可以观察到流程")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819160748736.png",alt:"image-20230819160748736"}})]),s._v(" "),a("p",[s._v("可以看到老年代满了之后，Full GC也不能回收掉垃圾后就出现OOM")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819160829660.png",alt:"image-20230819160829660"}})]),s._v(" "),a("p",[a("strong",[s._v("总结")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("针对幸存者s0，s1区的总结：复制之后有交换，谁空谁是to")])]),s._v(" "),a("li",[a("p",[s._v("关于垃圾回收：频繁在新生区收集，很少在老年代收集，几乎不再永久代和元空间进行收集")])])]),s._v(" "),a("h3",{attrs:{id:"minor-gc、majorgc、full-gc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minor-gc、majorgc、full-gc"}},[s._v("#")]),s._v(" Minor GC、MajorGC、Full GC")]),s._v(" "),a("p",[s._v("JVM在进行GC时，并非每次都对上面三个内存区域一起回收的，大部分时候回收的都是指"),a("code",[s._v("新生代")]),s._v("。")]),s._v(" "),a("p",[s._v("针对Hotspot VM的实现，它里面的GC按照回收区域又分为两大种类型：一种是"),a("code",[s._v("部分收集（Partial GC）")]),s._v("，一种是"),a("code",[s._v("整堆收集（FullGC）")])]),s._v(" "),a("ul",[a("li",[s._v("部分收集（Partial GC）：不是完整收集整个Java堆的垃圾收集。其中又分为：\n"),a("ul",[a("li",[s._v("新生代收集（Minor GC / Young GC）：指目标只是新生代的垃圾收集")]),s._v(" "),a("li",[s._v("老年代收集（Major GC / Old GC）：指目标只是老年代的垃圾收集。目前只有CMS收集器会有单独收集老年代的行为")])])]),s._v(" "),a("li",[s._v("混合收集（MixedGC）：指目标是收集整个新生代以及部分老年代的垃圾收集。目前只有G1收集器会有这种行为。")]),s._v(" "),a("li",[s._v("整堆收集（Full GC）：收集整个java堆和方法区的垃圾收集。")])]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("很多时候Major GC会和Full GC混淆使用，需要具体分辨是老年代回收还是整堆回收。")])]),s._v(" "),a("h4",{attrs:{id:"最简单的分代式gc策略的触发条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最简单的分代式gc策略的触发条件"}},[s._v("#")]),s._v(" 最简单的分代式GC策略的触发条件")]),s._v(" "),a("h4",{attrs:{id:"年轻代gc-minor-gc-触发机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#年轻代gc-minor-gc-触发机制"}},[s._v("#")]),s._v(" "),a("strong",[s._v("年轻代GC（Minor GC）触发机制")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("当"),a("code",[s._v("年轻代空间不足时")]),s._v("，就会触发MinorGC，这里的年轻代满指的是"),a("code",[s._v("Eden代满")]),s._v("，"),a("code",[s._v("Survivor满不会引发GC")]),s._v("。那么"),a("code",[s._v("Survivor")]),s._v("什么时候会被清理呢？"),a("code",[s._v("Eden代满")]),s._v("的时候，他会顺带清理"),a("code",[s._v("Survivor")])])]),s._v(" "),a("li",[a("p",[s._v("因为Java对象大多都具备朝生夕灭的特性.，所以Minor GC非常频繁，一般回收速度也比较快")])]),s._v(" "),a("li",[a("p",[s._v("Minor GC会引发STW（"),a("code",[s._v("Stop-The-World")]),s._v("是指在进行垃圾回收时，应用程序的执行会被暂停)，暂停其它用户的线程，等垃圾回收结束，用户线程才恢复运行")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/4dd6da08-bb08-4cf1-b0f7-127412d4a85b.png",alt:"4dd6da08-bb08-4cf1-b0f7-127412d4a85b"}})]),s._v(" "),a("h4",{attrs:{id:"老年代gc-major-gc-full-gc-触发机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#老年代gc-major-gc-full-gc-触发机制"}},[s._v("#")]),s._v(" 老年代GC（Major GC / Full GC）触发机制")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("指发生在老年代的GC，对象从老年代消失时，我们说 "),a("code",[s._v("Major GC")]),s._v("或 "),a("code",[s._v("Full GC")]),s._v("发生了")])]),s._v(" "),a("li",[a("p",[s._v("出现了Major Gc，经常会伴随至少一次的Minor GC（但非绝对的，在Paralle1 Scavenge收集器的收集策略里就有直接进行MajorGC的策略选择过程）")])]),s._v(" "),a("li",[a("p",[s._v("也就是在老年代空间不足时，会先尝试触发Minor Gc。如果之后空间还不足，则触发Major GC")])]),s._v(" "),a("li",[a("p",[s._v("Major GC的速度一般会比Minor GC慢10倍以上，STW的时间更长")])]),s._v(" "),a("li",[a("p",[s._v("如果Major GC后，内存还不足，就报OOM了")])])]),s._v(" "),a("h4",{attrs:{id:"full-gc触发机制-到垃圾收集器时细讲"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#full-gc触发机制-到垃圾收集器时细讲"}},[s._v("#")]),s._v(" Full GC触发机制（到垃圾收集器时细讲）")]),s._v(" "),a("p",[s._v("触发Full GC执行的情况有如下五种：")]),s._v(" "),a("ul",[a("li",[s._v("调用System.gc()时，系统"),a("code",[s._v("建议执行Full GC，但是不必然执行")])]),s._v(" "),a("li",[s._v("老年代空间不足")]),s._v(" "),a("li",[s._v("方法区空间不足")]),s._v(" "),a("li",[s._v("通过Minor GC后进入老年代的平均大小大于老年代的可用内存")]),s._v(" "),a("li",[s._v("由Eden区、survivor space0（From Space）区向survivor space1（To Space）区复制时，对象大小大于To Space可用内存，则把该对象转存到老年代，且老年代的可用内存小于该对象大小")])]),s._v(" "),a("p",[s._v("说明："),a("code",[s._v("Full GC 是开发或调优中尽量要避免的。这样暂时时间会短一些")])]),s._v(" "),a("h3",{attrs:{id:"堆空间分代思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆空间分代思想"}},[s._v("#")]),s._v(" 堆空间分代思想")]),s._v(" "),a("p",[s._v("为什么要把Java堆分代？不分代就不能正常工作了吗？")]),s._v(" "),a("p",[s._v("经研究，不同对象的生命周期不同。70%-99%的对象是临时对象。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("新生代：有Eden、两块大小相同的survivor（又称为from/to，s0/s1）构成，to总为空。")])]),s._v(" "),a("li",[a("p",[s._v("老年代：存放新生代中经历多次GC仍然存活的对象。")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/d211a72e-321e-14c64-957c-b1b55747eabe.png",alt:"d211a72e-321e-14c64-957c-b1b55747eabe"}})]),s._v(" "),a("p",[s._v("其实不分代完全可以，"),a("code",[s._v("分代的唯一理由就是优化GC性能")]),s._v("。如果没有分代，那所有的对象都在一块，假设一个公司有很多员工，每个员工都有一些临时使用的文件和工具。如果所有员工都把这些文件和工具放在同一个地方，那么当需要清理的时候，就需要遍历整个存储区域来找到哪些文件和工具是不再使用的。这样会浪费很多时间和资源。GC的时候要找到哪些对象没用，这样就会对堆的所有区域进行扫描。而很多对象都是朝生夕死的，如果分代的话，把新创建的对象放到某一地方，当GC的时候先把这块存储“朝生夕死”对象的区域进行回收，这样就会腾出很大的空间出来。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/9ffd2734-dcad-41ba-aa13-eccb5a757f58.png",alt:"9ffd2734-dcad-41ba-aa13-eccb5a757f58"}})]),s._v(" "),a("h3",{attrs:{id:"对象提升规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象提升规则"}},[s._v("#")]),s._v(" 对象提升规则")]),s._v(" "),a("p",[s._v("如果对象在Eden出生并经过第一次Minor GC后仍然存活，并且能被Survivor容纳的话，将被移动到survivor空间中，并将对象年龄设为1。对象在survivor区中每熬过一次MinorGC，年龄就增加1岁，当它的年龄增加到一定程度（默认为15岁，其实每个JVM、每个GC都有所不同）时，就会被晋升到老年代")]),s._v(" "),a("p",[s._v("对象晋升老年代的年龄阀值，可以通过选项"),a("code",[s._v("-XX:MaxTenuringThreshold")]),s._v("来设置")]),s._v(" "),a("p",[s._v("针对不同年龄段的对象分配原则如下所示：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("优先分配到Eden")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("大对象直接分配到老年代")]),s._v("（尽量避免程序中出现过多的大对象）")])]),s._v(" "),a("li",[a("p",[s._v("长期存活的对象分配到老年代")])]),s._v(" "),a("li",[a("p",[s._v("动态对象年龄判断：如果survivor区中相同年龄的所有对象大小的总和大于Survivor空间的一半，年龄大于或等于该年龄的对象可以直接进入老年代，无须等到"),a("code",[s._v("MaxTenuringThreshold")]),s._v("中要求的年龄。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("空间分配担保")]),s._v("： "),a("code",[s._v("-XX:HandlePromotionFailure")])])])]),s._v(" "),a("h4",{attrs:{id:"谁进行空间担保"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#谁进行空间担保"}},[s._v("#")]),s._v(" "),a("strong",[s._v("谁进行空间担保？")])]),s._v(" "),a("p",[s._v("JVM 使用分代收集算法，将堆内存划分为年轻代和老年代，两块内存分别采用不同的垃圾回收算法，空间担保指的是老年代进行空间分配担保")]),s._v(" "),a("h4",{attrs:{id:"什么是空间分配担保"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是空间分配担保"}},[s._v("#")]),s._v(" 什么是空间分配担保？")]),s._v(" "),a("p",[s._v("在发生Minor GC之前，虚拟机会检查老年代最大可用的连续空间是否大于新生代所有对象的总空间。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("如果大于，则此次Minor GC是安全的")])]),s._v(" "),a("li",[a("p",[s._v("如果小于，则虚拟机会查看"),a("code",[s._v("-XX:HandlePromotionFailure")]),s._v("设置值是否允担保失败。")])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("如果"),a("code",[s._v("HandlePromotionFailure=true")]),s._v("，那么会继续检查老年代最大可用连续空间是否大于历次晋升到老年代的对象的平均大小。")])])]),s._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[s._v("如果大于，则尝试进行一次Minor GC，但这次Minor GC依然是有风险的；")])])])])]),s._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[s._v("如果小于，则改为进行一次Full GC。")])])])])]),s._v(" "),a("li",[a("ul",[a("li",[s._v("如果"),a("code",[s._v("HandlePromotionFailure=false")]),s._v("，则改为进行一次Full Gc。")])])])]),s._v(" "),a("h4",{attrs:{id:"为什么要进行空间担保"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要进行空间担保"}},[s._v("#")]),s._v(" "),a("strong",[s._v("为什么要进行空间担保？")])]),s._v(" "),a("p",[s._v("因为新生代采用"),a("strong",[s._v("复制收集算法")]),s._v("，假如大量对象在 Minor GC 后仍然存活（最极端情况为内存回收后新生代中所有对象均存活），而 Survivor 空间是比较小的，这时就需要老年代进行分配担保，把 Survivor 无法容纳的对象放到老年代。"),a("strong",[s._v("老年代要进行空间分配担保，前提是老年代得有足够空间来容纳这些对象")]),s._v("，但一共有多少对象在内存回收后存活下来是不可预知的，"),a("strong",[s._v("因此只好取之前每次垃圾回收后晋升到老年代的对象大小的平均值作为参考")]),s._v("。使用这个平均值与老年代剩余空间进行比较，来决定是否进行 Full GC 来让老年代腾出更多空间。")]),s._v(" "),a("p",[s._v("在JDK6 Update24之后，HandlePromotionFailure参数不会再影响到虚拟机的空间分配担保策略，观察openJDK中的源码变化，虽然源码中还定义了HandlePromotionFailure参数，但是在代码中已经不会再使用它。")]),s._v(" "),a("p",[a("code",[s._v("JDK6 Update 24之后的规则变为只要老年代的连续空间大于新生代对象总大小或者历次晋升的平均大小就会进行Minor GC，否则将进行FullGC。")])]),s._v(" "),a("h3",{attrs:{id:"为对象分配内存-tlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为对象分配内存-tlab"}},[s._v("#")]),s._v(" 为对象分配内存：TLAB")]),s._v(" "),a("h4",{attrs:{id:"为什么有tlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么有tlab"}},[s._v("#")]),s._v(" 为什么有TLAB")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("堆区是线程共享区域，任何线程都可以访问到堆区中的共享数据 。")])]),s._v(" "),a("li",[a("p",[s._v("由于对象实例的创建在JVM中非常频繁，因此在并发环境下从堆区中划分内存空间是线程不安全的 。")])]),s._v(" "),a("li",[a("p",[s._v("为避免多个线程操作同一地址，需要使用加锁等机制，进而影响分配速度。")])])]),s._v(" "),a("h4",{attrs:{id:"什么是tlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是tlab"}},[s._v("#")]),s._v(" 什么是TLAB")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("TLAB（Thread Local Allocation Buffer），称为本地线程分配缓冲。")])]),s._v(" "),a("li",[a("p",[s._v("从内存模型而不是垃圾收集的角度，对"),a("code",[s._v("Eden区域")]),s._v("继续进行划分，JVM为每个线程分配了一个私有缓存区域，它包含在Eden空间内。")])]),s._v(" "),a("li",[a("p",[s._v("多线程同时分配内存时，使用TLAB可以避免一系列的非线程安全问题，同时还能够提升内存分配的吞吐量，因此我们可以将这种内存分配方式称之为快速分配策略。")])]),s._v(" "),a("li",[a("p",[s._v("哪个线程要分配内存，就在哪个线程的本地缓冲区中分配，只有本地缓冲区用完了，分配新的缓存区时才需要同步锁定。")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20230819174137490.png",alt:"image-20230819174137490"}})]),s._v(" "),a("h4",{attrs:{id:"tlab的说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tlab的说明"}},[s._v("#")]),s._v(" TLAB的说明")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("尽管不是所有的对象实例都能够在TLAB中成功分配内存，但JVM确实是将TLAB作为内存分配的首选。")])]),s._v(" "),a("li",[a("p",[s._v("默认情况下，JVM是开启TLAB的，在程序中，开发人员可以通过选项“"),a("code",[s._v("-XX:UseTLAB")]),s._v("”设置是否开启TLAB空间。")])]),s._v(" "),a("li",[a("p",[s._v("默认情况下，TLAB空间的内存非常小，仅占有整个Eden空间的1%，当然我们可以通过选项 “"),a("code",[s._v("-XX:TLABWasteTargetPercent")]),s._v("” 设置TLAB空间所占用Eden空间的百分比大小。")])]),s._v(" "),a("li",[a("p",[s._v("一旦对象在TLAB空间分配内存失败时，JVM就会尝试着通过使用加锁机制确保数据操作的原子性，直接在Eden空间中分配内存。")])])]),s._v(" "),a("h4",{attrs:{id:"tlab空间分配内存失败时-加锁过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tlab空间分配内存失败时-加锁过程"}},[s._v("#")]),s._v(" TLAB空间分配内存失败时，加锁过程")]),s._v(" "),a("p",[s._v("当对象在TLAB空间分配内存失败时，JVM会尝试使用加锁机制来确保数据操作的原子性，然后在Eden空间中分配内存。")]),s._v(" "),a("p",[s._v("具体过程如下：")]),s._v(" "),a("ol",[a("li",[s._v("当线程在自己的TLAB中分配内存失败时，JVM会尝试获取一个全局的分配锁（Allocation Lock）。")]),s._v(" "),a("li",[s._v("获取分配锁后，JVM会检查Eden空间是否有足够的连续空间来分配对象。")]),s._v(" "),a("li",[s._v("如果Eden空间有足够的连续空间，JVM会在Eden空间中分配内存，并更新相关的内存分配指针。")]),s._v(" "),a("li",[s._v("分配完成后，JVM会释放分配锁，允许其他线程继续进行内存分配操作。")])]),s._v(" "),a("p",[s._v("这种加锁机制的目的是确保在多线程环境下，对象的分配操作是原子性的，避免多个线程同时在Eden空间中分配内存时发生竞争和冲突。")]),s._v(" "),a("p",[s._v("需要注意的是，由于加锁机制的存在，当多个线程同时在Eden空间中分配内存时，可能会导致性能下降，因为线程需要等待获取分配锁。因此，在多线程环境下，尽量使用TLAB来减少线程之间的竞争，提高对象分配的效率。")]),s._v(" "),a("h3",{attrs:{id:"堆空间的参数设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆空间的参数设置"}},[s._v("#")]),s._v(" 堆空间的参数设置")]),s._v(" "),a("p",[s._v("官网地址：https://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 详细的参数内容会在JVM下篇：性能监控与调优篇中进行详细介绍，这里先熟悉下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintFlagsInitial")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查看所有的参数的默认初始值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintFlagsFinal")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查看所有的参数的最终值（可能会存在修改，不再是初始值）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xms")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//初始堆空间内存（默认为物理内存的1/64）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xmx")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最大堆空间内存（默认为物理内存的1/4）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xmn")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置新生代的大小。（初始值及最大值）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NewRatio")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//配置新生代与老年代在堆结构的占比")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SurvivorRatio")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置新生代中Eden和S0/S1空间的比例")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MaxTenuringThreshold")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置新生代垃圾的最大年龄")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintGCDetails")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出详细的GC处理日志")]),s._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//打印gc简要信息：①-Xx：+PrintGC ②-verbose:gc")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HandlePromotionFalilure")]),s._v("："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//是否设置空间分配担保")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"堆是分配对象的唯一选择么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆是分配对象的唯一选择么"}},[s._v("#")]),s._v(" 堆是分配对象的唯一选择么？")]),s._v(" "),a("p",[s._v("在《深入理解Java虚拟机》中关于Java堆内存有这样一段描述：")]),s._v(" "),a("blockquote",[a("p",[s._v("随着JIT编译期的发展与逃逸分析技术逐渐成熟，栈上分配、标量替换优化技术将会导致一些微妙的变化，所有的对象都分配到堆上也渐渐变得不那么“绝对”了。")])]),s._v(" "),a("p",[s._v("在Java虚拟机中，对象是在Java堆中分配内存的，这是一个普遍的常识。但是，有一种特殊情况，那就是如果经过逃逸分析（Escape Analysis）后发现，一个对象并没有逃逸出方法的话，那么就可能被优化成栈上分配。这样就无需在堆上分配内存，也无须进行垃圾回收了。这也是最常见的堆外存储技术。")]),s._v(" "),a("h4",{attrs:{id:"逃逸分析概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逃逸分析概述"}},[s._v("#")]),s._v(" 逃逸分析概述")]),s._v(" "),a("h4",{attrs:{id:"逃逸分析-代码优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逃逸分析-代码优化"}},[s._v("#")]),s._v(" 逃逸分析：代码优化")])])}),[],!1,null,null,null);a.default=e.exports}}]);