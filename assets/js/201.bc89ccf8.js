(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{530:function(a,s,t){"use strict";t.r(s);var n=t(8),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"threadlocal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal"}},[a._v("#")]),a._v(" ThreadLocal")]),a._v(" "),s("blockquote",[s("p",[a._v("本文的所研究的的ThreadLocal都是jdk1.8版本的")])]),a._v(" "),s("h2",{attrs:{id:"threadlocal是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal是什么"}},[a._v("#")]),a._v(" ThreadLocal是什么？")]),a._v(" "),s("p",[a._v("ThreadLocal，也就是线程本地变量。如果你创建了一个ThreadLocal变量，那么访问这个变量的每个线程都会有这个变量的一个本地拷贝，多个线程操作这个变量的时候，实际是操作自己本地内存里面的变量，从而起到线程隔离的作用，避免了线程安全问题。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/802796539711724.png",alt:"802796539711724"}})]),a._v(" "),s("ul",[s("li",[s("p",[a._v("创建：创建了一个ThreadLoca变量threadLocal，任何一个线程都能并发访问localVariable。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" localVariable "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("写入：线程可以在任何地方使用localVariable，写入变量。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"A thread local value"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("读取：线程在任何地方读取的都是它写入的变量")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("清理：为防止内存泄露，不再需要使用"),s("code",[a._v("ThreadLocal")]),a._v("变量时调用其"),s("code",[a._v("remove()")]),a._v("方法。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("threadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])])]),a._v(" "),s("h2",{attrs:{id:"在工作中用到过threadlocal吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在工作中用到过threadlocal吗"}},[a._v("#")]),a._v(" 在工作中用到过ThreadLocal吗？")]),a._v(" "),s("p",[a._v("我们的系统应用是一个典型的MVC架构，登录后的用户每次访问接口，都会在请求头中携带一个token，在控制层可以根据这个token，解析出用户的基本信息。那么问题来了，假如在服务层和持久层都要用到用户信息，比如rpc调用、更新用户获取等等，那应该怎么办呢？")]),a._v(" "),s("p",[a._v("这时候我们就可以用到ThreadLocal，在控制层拦截请求把用户信息存入ThreadLocal，这样我们在任何一个地方，都可以取出ThreadLocal中存的用户数据，但是要记得用完之后remove。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/711036888404147.png",alt:"711036888404147"}})]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Component")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UserInterceptor")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HandlerInterceptor")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CurrUserInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" userInfoThreadLocal "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("preHandle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HttpServletRequest")]),a._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HttpServletResponse")]),a._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HandlerMethod")]),a._v(" handlerMethod "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HandlerMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取方法上的NoLogin注解")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Nologin")]),a._v(" noLoginAnnotation "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" handlerMethod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getAnnotation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Nologin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("noLoginAnnotation "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 访问不需要登录")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 从请求中获取token,并解析出")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" token "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"x-token"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" userName "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolveToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 根据userName查询用户")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CurrUserInfo")]),a._v(" currUserInfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getUserByUserName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("userName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 将当前用户信息设置到ThreadLocal")]),a._v("\n        userInfoThreadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("currUserInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("afterCompletion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HttpServletRequest")]),a._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HttpServletResponse")]),a._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        userInfoThreadLocal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br")])]),s("p",[a._v("我们常用的数据库连接池也用到了ThreadLocal：")]),a._v(" "),s("ul",[s("li",[a._v("数据库连接池的连接交给ThreadLoca进行管理，保证当前线程的操作都是同一个Connnection。")])]),a._v(" "),s("h2",{attrs:{id:"threadlocalmap的数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocalmap的数据结构"}},[a._v("#")]),a._v(" ThreadLocalMap的数据结构？")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240307214034105.png",alt:"image-20240307214034105"}})]),a._v(" "),s("p",[s("code",[a._v("Thread")]),a._v("类有一个类型为"),s("code",[a._v("ThreadLocal.ThreadLocalMap")]),a._v("的实例变量"),s("code",[a._v("threadLocals")]),a._v("，也就是说每个线程有一个自己的"),s("code",[a._v("ThreadLocalMap")]),a._v("。")]),a._v(" "),s("p",[s("code",[a._v("ThreadLocalMap")]),a._v("有自己的独立实现，可以简单地将它的"),s("code",[a._v("key")]),a._v("视作"),s("code",[a._v("ThreadLocal")]),a._v("，"),s("code",[a._v("value")]),a._v("为代码中放入的值（实际上"),s("code",[a._v("key")]),a._v("并不是"),s("code",[a._v("ThreadLocal")]),a._v("本身，而是它的一个"),s("strong",[a._v("弱引用")]),a._v("）。")]),a._v(" "),s("p",[a._v("每个线程在往"),s("code",[a._v("ThreadLocal")]),a._v("里放值的时候，都会往自己的"),s("code",[a._v("ThreadLocalMap")]),a._v("里存，读也是以"),s("code",[a._v("ThreadLocal")]),a._v("作为引用，在自己的"),s("code",[a._v("map")]),a._v("里找对应的"),s("code",[a._v("key")]),a._v("，从而实现了"),s("strong",[a._v("线程隔离")]),a._v("。")]),a._v(" "),s("p",[s("code",[a._v("ThreadLocalMap")]),a._v("有点类似"),s("code",[a._v("HashMap")]),a._v("的结构，只是"),s("code",[a._v("HashMap")]),a._v("是由"),s("strong",[a._v("数组+链表")]),a._v("实现的，而"),s("code",[a._v("ThreadLocalMap")]),a._v("中并没有"),s("strong",[a._v("链表")]),a._v("结构。")]),a._v(" "),s("p",[a._v("我们还要注意"),s("code",[a._v("Entry")]),a._v("， 它的"),s("code",[a._v("key")]),a._v("是"),s("code",[a._v("ThreadLocal<?> k")]),a._v(" ，继承自"),s("code",[a._v("WeakReference")]),a._v("， 也就是我们常说的弱引用类型。")]),a._v(" "),s("h2",{attrs:{id:"threadlocal-内存泄露是怎么回事"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal-内存泄露是怎么回事"}},[a._v("#")]),a._v(" ThreadLocal 内存泄露是怎么回事？")]),a._v(" "),s("blockquote",[s("p",[a._v("Memory overflow：内存溢出，没有足够的内存提供申请者使用。")]),a._v(" "),s("p",[a._v("Memory leak：内存泄漏是指程序中己动态分配的堆内存由于某种原因程序未释放或无法释放，造成系统内存的浪费，导致程序运行速度减慢甚至系统溃等严重后果。I内存泄漏的堆积终将导致内存溢出。")])]),a._v(" "),s("p",[a._v("我们先来分析一下使用ThreadLocal时的内存，我们都知道，在JVM中，栈内存线程私有，存储了对象的引用，堆内存线程共享，存储了对象实例。")]),a._v(" "),s("p",[a._v("所以呢，栈中存储了ThreadLocal、Thread的引用，堆中存储了它们的具体实例。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240307215638393.png",alt:"image-20240307215638393"}})]),a._v(" "),s("p",[a._v("ThreadLocalMap中使用的 key 为 ThreadLocal 的弱引用。")]),a._v(" "),s("blockquote",[s("p",[s("strong",[a._v("强引用")]),a._v("：我们new出来的对象就是强引用类型，只要强引用存在，垃圾回收器将永远不会回收被引用的对象，哪怕内存不足")]),a._v(" "),s("p",[s("strong",[a._v("弱引用")]),a._v("：只要垃圾回收机制一运行，不管JVM的内存空间是否充足，都会回收该对象占用的内存。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240307221117315.png",alt:"image-20240307221117315"}})]),a._v(" "),s("p",[a._v("如果我们的"),s("strong",[a._v("强引用")]),a._v("不存在的话，那么 "),s("code",[a._v("key")]),a._v(" 就会被回收，但是ThreadLocalMap生命周期和Thread是一样的，它这时候如果不被回收，就会出现这种情况：ThreadLocalMap的key没了，value还在，这就会造成了"),s("code",[a._v("内存泄漏")]),a._v("问题 。")]),a._v(" "),s("p",[a._v("ThreadLocalMap生命周期和Thread，项目中一般我们都是使用线程池的时候，核心线程结束是不会销毁的，而是接着放入了线程池中。")]),a._v(" "),s("blockquote",[s("p",[a._v("这里可以得出一个结论，就是ThreadLocal发生内存泄漏的原因跟ThreadLocalMap的key是强引用还是弱引用都没有关系，是因为ThreadLocalMap生命周期和Thread生命周期是一样的原因。")])]),a._v(" "),s("h2",{attrs:{id:"怎么解决threadlocal内存泄漏问题呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么解决threadlocal内存泄漏问题呢"}},[a._v("#")]),a._v(" 怎么解决ThreadLocal内存泄漏问题呢?")]),a._v(" "),s("p",[a._v("很简单，使用完ThreadLocal后，及时调用remove()方法释放内存空间。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" localVariable "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tlocalVariable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v('"'),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),a._v("内存泄漏”"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t……\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("finally")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tlocalVariable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h2",{attrs:{id:"为什么key还要设计成弱引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么key还要设计成弱引用"}},[a._v("#")]),a._v(" 为什么key还要设计成弱引用？")]),a._v(" "),s("p",[a._v("在ThreadLocal中，每个ThreadLocal实例都对应着一个ThreadLocalMap对象，而ThreadLocalMap使用ThreadLocal实例作为键，用于存储线程局部变量的值。"),s("code",[a._v("如果将ThreadLocal实例作为强引用存储在ThreadLocalMap中")]),a._v("，那么即使线程不再使用某个\nThreadLocal实例，也就是ThreaLocal Reference强引用断开了，但是key还强引用这ThreadLocal实例，导致该实例也无法被垃圾回收，从而可能导致内存泄漏。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/image-20240307221714170.png",alt:"image-20240307221714170"}})]),a._v(" "),s("p",[a._v("那么，如果key设计成弱引用，就不会发生内存泄漏吗？")]),a._v(" "),s("p",[a._v("事实上，在ThreadLocalMap中的 get/ getEntry方法中，会对key为null（也即是ThreadLocal为null）进行判断，如果为null的话，那么是会对value置为nul的。")]),a._v(" "),s("blockquote",[s("p",[a._v("这就意味着使用完ThreadLocal，CurrentThread依然运行的前提下，就算忘记调用remove方法，"),s("code",[a._v("弱引用比强引用可以多一层保障：弱引用的ThreadLocal会被回收，对应的value在下一次ThreadLocalMap调用set，get，remove中的任一方法的时候会被清除，从而避免内存泄漏。")])])]),a._v(" "),s("p",[a._v("也就是我们下面会说到的清理流程。")]),a._v(" "),s("h2",{attrs:{id:"threadlocalmap怎么解决hash冲突的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocalmap怎么解决hash冲突的"}},[a._v("#")]),a._v(" ThreadLocalMap怎么解决Hash冲突的？")]),a._v(" "),s("h4",{attrs:{id:"线性探测法解决hash冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性探测法解决hash冲突"}},[a._v("#")]),a._v(" 线性探测法解决Hash冲突")]),a._v(" "),s("p",[a._v("该方法一次探测下一个地址，直到有空的地址后插入，若整个空间都找不到空余的地址，则产生溢出。")]),a._v(" "),s("p",[a._v("举个例子，假设当前table长度为16，也就是说如果计算出来key的hash值为14，如果table[14]上已经有值，并且其key与当前key不一致，那么就发生了hash冲突，这个时候将1401得到15，取table[15]进行判断，这个时候如果还是冲突会回到0，取table[0]，以此类推，直到可以插入。")]),a._v(" "),s("p",[a._v("按照上面的描述，可以把Entry table看成一个环形数组。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/aHR0cHM6Ly90dmExLnNpbmFpbWcuY24vbGFyZ2UvMDA3UzhaSWxseTFnaDRpcGM4MGhmajMwdzEwaHVnbzUuanBn.png",alt:"aHR0cHM6Ly90dmExLnNpbmFpbWcuY24vbGFyZ2UvMDA3UzhaSWxseTFnaDRpcGM4MGhmajMwdzEwaHVnbzUuanBn"}})]),a._v(" "),s("h2",{attrs:{id:"threadlocalmap过期key的探测式清理流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocalmap过期key的探测式清理流程"}},[a._v("#")]),a._v(" ThreadLocalMap过期key的探测式清理流程?")]),a._v(" "),s("h2",{attrs:{id:"threadlocalmap过期key的启发式清理流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocalmap过期key的启发式清理流程"}},[a._v("#")]),a._v(" ThreadLocalMap过期key的启发式清理流程?")]),a._v(" "),s("h2",{attrs:{id:"threadlocalmap扩容机制了解吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocalmap扩容机制了解吗"}},[a._v("#")]),a._v(" ThreadLocalMap扩容机制了解吗？")]),a._v(" "),s("h2",{attrs:{id:"父子线程怎么共享数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子线程怎么共享数据"}},[a._v("#")]),a._v(" 父子线程怎么共享数据？")]),a._v(" "),s("h2",{attrs:{id:"threadlocal核心方法源码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal核心方法源码"}},[a._v("#")]),a._v(" ThreadLocal核心方法源码")]),a._v(" "),s("p",[a._v("基于ThreadLocal的内部结构，ThreadLocal对外暴露的方法有以下4个。")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("方法声明")]),a._v(" "),s("th",[a._v("描述")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("protected T initialValue()")]),a._v(" "),s("td",[a._v("返回当前线程局部变量的初始值")])]),a._v(" "),s("tr",[s("td",[a._v("public void set(T value)")]),a._v(" "),s("td",[a._v("返回当前线程绑定的局部变量")])]),a._v(" "),s("tr",[s("td",[a._v("public T get()")]),a._v(" "),s("td",[a._v("获取当前线程绑定的局部变量")])]),a._v(" "),s("tr",[s("td",[a._v("public void remove()")]),a._v(" "),s("td",[a._v("移除当前线程绑定的局部变量")])])])]),a._v(" "),s("h3",{attrs:{id:"set方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set方法"}},[a._v("#")]),a._v(" set方法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n  *设置当前线程对应的ThreadLoca1的值\n  *\n  *@param value将要保存在当前线程对应的ThreadLocal的值\n  */")]),a._v("   \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取当前线程对象")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取此线程对象中维护的ThreadLocalMap对象")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("map "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 判断map是否存在")]),a._v("\n            map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//存在则调用map.set设置此实体entry")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//当前线程Thread不存在ThreadLocalMap对象，则调用createMap进行ThreadLocalMap对象的初始化")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("createMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("h3",{attrs:{id:"getmap方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getmap方法"}},[a._v("#")]),a._v(" getMap方法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n   * 获取当前线程Thread对应维护的ThreadLocalMap\n   *\n   * @param t the current thread 当前线程\n   * @return the map对应维护的ThreadLocalMap\n   */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("threadLocals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h3",{attrs:{id:"createmap方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#createmap方法"}},[a._v("#")]),a._v(" createMap方法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("createMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" firstValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//这里的this是调用此方法的threadLocal")]),a._v("\n        t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("threadLocals "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" firstValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[s("strong",[a._v("执行流程")])]),a._v(" "),s("ol",[s("li",[s("p",[a._v("获取当前线程对象。在Java中，可以通过"),s("code",[a._v("Thread.currentThread()")]),a._v("方法来获取当前执行"),s("code",[a._v("set")]),a._v("方法的线程对象。")])]),a._v(" "),s("li",[s("p",[a._v("在当前线程对象中，获取"),s("code",[a._v("ThreadLocalMap")]),a._v("。"),s("code",[a._v("ThreadLocalMap")]),a._v("是一个哈希表，用于存储当前线程与其绑定的"),s("code",[a._v("ThreadLocal")]),a._v("对象以及相应的值。")])]),a._v(" "),s("li",[s("p",[a._v("在"),s("code",[a._v("ThreadLocalMap")]),a._v("中查找与当前"),s("code",[a._v("ThreadLocal")]),a._v("对象相关联的"),s("code",[a._v("Entry")]),a._v("对象。"),s("code",[a._v("Entry")]),a._v("是"),s("code",[a._v("ThreadLocalMap")]),a._v("中的节点，用于存储"),s("code",[a._v("ThreadLocal")]),a._v("对象与其关联的值。查找过程如下：")]),a._v(" "),s("p",[a._v("a. 首先，通过当前"),s("code",[a._v("ThreadLocal")]),a._v("对象的哈希值计算得到在"),s("code",[a._v("ThreadLocalMap")]),a._v("中的索引位置。")]),a._v(" "),s("p",[a._v("b. 根据索引位置获取对应的"),s("code",[a._v("Entry")]),a._v("对象。")]),a._v(" "),s("p",[a._v("c. 如果获取的"),s("code",[a._v("Entry")]),a._v("对象不为null，并且"),s("code",[a._v("Entry")]),a._v("的"),s("code",[a._v("ThreadLocal")]),a._v("对象与当前的"),s("code",[a._v("ThreadLocal")]),a._v("对象相等（表示找到了匹配的键值对），则将当前的值与该"),s("code",[a._v("Entry")]),a._v("对象关联的值进行替换，完成"),s("code",[a._v("set")]),a._v("操作。")]),a._v(" "),s("p",[a._v("d. 如果获取的"),s("code",[a._v("Entry")]),a._v("对象为null，表示当前"),s("code",[a._v("ThreadLocal")]),a._v("对象还没有与当前线程绑定的值，需要创建一个新的"),s("code",[a._v("Entry")]),a._v("对象并插入到"),s("code",[a._v("ThreadLocalMap")]),a._v("中，完成"),s("code",[a._v("set")]),a._v("操作。")])]),a._v(" "),s("li",[s("p",[a._v("如果在"),s("code",[a._v("ThreadLocalMap")]),a._v("中找不到与当前"),s("code",[a._v("ThreadLocal")]),a._v("对象相关联的"),s("code",[a._v("Entry")]),a._v("对象（即当前线程还没有绑定过该"),s("code",[a._v("ThreadLocal")]),a._v("对象），则需要创建一个新的"),s("code",[a._v("Entry")]),a._v("对象，将当前线程与"),s("code",[a._v("ThreadLocal")]),a._v("对象以及给定的值进行关联，并将该"),s("code",[a._v("Entry")]),a._v("对象插入到"),s("code",[a._v("ThreadLocalMap")]),a._v("中。")])]),a._v(" "),s("li",[s("p",[a._v("完成"),s("code",[a._v("set")]),a._v("操作后，"),s("code",[a._v("ThreadLocal")]),a._v("对象与值的绑定关系就建立好了，当前线程在后续访问该"),s("code",[a._v("ThreadLocal")]),a._v("对象时，可以直接从"),s("code",[a._v("ThreadLocalMap")]),a._v("中获取对应的值。")])])]),a._v(" "),s("h3",{attrs:{id:"get方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get方法"}},[a._v("#")]),a._v(" get方法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取当前线程对象")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取此线程对象中维护的ThreadLocalMap对象")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("map "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//如果此map存在")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//以当前的ThreadLocal 为key，调用getEntr y获取对应的存储实体e")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Entry")]),a._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getEntry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("e "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//对e进行判空")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SuppressWarnings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"unchecked"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取存储实体e对应的value值,即为我们想要的当前线程对应此ThreadLocal的值")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n         * 初始化∶有两种情况有执行当前代码\n         * 第一种情况: map不存在，表示此线程没有维护的ThreadLocalMap对象\n         * 第二种情况: map存在，但是没有与当前ThreadLoca1关联的entry\n         */")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setInitialValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br")])]),s("h3",{attrs:{id:"setinitialvalue方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setinitialvalue方法"}},[a._v("#")]),a._v(" setInitialValue方法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setInitialValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("initialValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//调用initalvalue获取初始化的值,此方法可以被子类重写，如果不重写默认返回nu11")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取当前线程对象")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取此线程对象中维护的ThreadLocalMap对象")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("map "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//存在则调用map . set设置此实体entry")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("createMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("instanceof")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TerminatingThreadLocal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TerminatingThreadLocal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TerminatingThreadLocal")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br")])]),s("p",[s("strong",[a._v("执行流程：")])]),a._v(" "),s("ol",[s("li",[s("p",[a._v("获取当前线程对象。在Java中，可以通过"),s("code",[a._v("Thread.currentThread()")]),a._v("方法来获取当前执行"),s("code",[a._v("get")]),a._v("方法的线程对象。")])]),a._v(" "),s("li",[s("p",[a._v("在当前线程对象中，获取"),s("code",[a._v("ThreadLocalMap")]),a._v("。"),s("code",[a._v("ThreadLocalMap")]),a._v("是一个哈希表，用于存储当前线程与其绑定的"),s("code",[a._v("ThreadLocal")]),a._v("对象以及相应的值。")])]),a._v(" "),s("li",[s("p",[a._v("在"),s("code",[a._v("ThreadLocalMap")]),a._v("中查找与当前"),s("code",[a._v("ThreadLocal")]),a._v("对象相关联的"),s("code",[a._v("Entry")]),a._v("对象。"),s("code",[a._v("Entry")]),a._v("是"),s("code",[a._v("ThreadLocalMap")]),a._v("中的节点，用于存储"),s("code",[a._v("ThreadLocal")]),a._v("对象与其关联的值。查找过程如下：")]),a._v(" "),s("p",[a._v("a. 首先，通过当前"),s("code",[a._v("ThreadLocal")]),a._v("对象的哈希值计算得到在"),s("code",[a._v("ThreadLocalMap")]),a._v("中的索引位置。")]),a._v(" "),s("p",[a._v("b. 根据索引位置获取对应的"),s("code",[a._v("Entry")]),a._v("对象。")]),a._v(" "),s("p",[a._v("c. 如果获取的"),s("code",[a._v("Entry")]),a._v("对象不为null，并且"),s("code",[a._v("Entry")]),a._v("的"),s("code",[a._v("ThreadLocal")]),a._v("对象与当前的"),s("code",[a._v("ThreadLocal")]),a._v("对象相等（表示找到了匹配的键值对），则返回该"),s("code",[a._v("Entry")]),a._v("对象关联的值，完成"),s("code",[a._v("get")]),a._v("操作。")]),a._v(" "),s("p",[a._v("d. 如果获取的"),s("code",[a._v("Entry")]),a._v("对象为null，表示当前线程还没有与当前"),s("code",[a._v("ThreadLocal")]),a._v("对象绑定的值，此时返回"),s("code",[a._v("null")]),a._v("，表示没有找到相关的值。")])]),a._v(" "),s("li",[s("p",[a._v("如果在"),s("code",[a._v("ThreadLocalMap")]),a._v("中找不到与当前"),s("code",[a._v("ThreadLocal")]),a._v("对象相关联的"),s("code",[a._v("Entry")]),a._v("对象（即当前线程还没有绑定过该"),s("code",[a._v("ThreadLocal")]),a._v("对象），则返回"),s("code",[a._v("null")]),a._v("，表示没有找到相关的值。")])])]),a._v(" "),s("h3",{attrs:{id:"remove方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remove方法"}},[a._v("#")]),a._v(" remove方法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalMap")]),a._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取当前线程对象中维护的ThreadLocalMap对象")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n             m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 存在则调用map .remove,以当前ThreadLoca1为key删除对应的实体entry")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[s("strong",[a._v("执行流程：")])]),a._v(" "),s("ol",[s("li",[s("p",[a._v("获取当前线程对象。在Java中，可以通过"),s("code",[a._v("Thread.currentThread()")]),a._v("方法来获取当前执行"),s("code",[a._v("remove")]),a._v("方法的线程对象。")])]),a._v(" "),s("li",[s("p",[a._v("在当前线程对象中，获取"),s("code",[a._v("ThreadLocalMap")]),a._v("。"),s("code",[a._v("ThreadLocalMap")]),a._v("是一个哈希表，用于存储当前线程与其绑定的"),s("code",[a._v("ThreadLocal")]),a._v("对象以及相应的值。")])]),a._v(" "),s("li",[s("p",[a._v("在"),s("code",[a._v("ThreadLocalMap")]),a._v("中查找与当前"),s("code",[a._v("ThreadLocal")]),a._v("对象相关联的"),s("code",[a._v("Entry")]),a._v("对象。"),s("code",[a._v("Entry")]),a._v("是"),s("code",[a._v("ThreadLocalMap")]),a._v("中的节点，用于存储"),s("code",[a._v("ThreadLocal")]),a._v("对象与其关联的值。查找过程如下：")]),a._v(" "),s("p",[a._v("a. 首先，通过当前"),s("code",[a._v("ThreadLocal")]),a._v("对象的哈希值计算得到在"),s("code",[a._v("ThreadLocalMap")]),a._v("中的索引位置。")]),a._v(" "),s("p",[a._v("b. 根据索引位置获取对应的"),s("code",[a._v("Entry")]),a._v("对象。")]),a._v(" "),s("p",[a._v("c. 如果获取的"),s("code",[a._v("Entry")]),a._v("对象不为null，并且"),s("code",[a._v("Entry")]),a._v("的"),s("code",[a._v("ThreadLocal")]),a._v("对象与当前的"),s("code",[a._v("ThreadLocal")]),a._v("对象相等（表示找到了匹配的键值对），则将该"),s("code",[a._v("Entry")]),a._v("对象从"),s("code",[a._v("ThreadLocalMap")]),a._v("中移除，解除当前线程与"),s("code",[a._v("ThreadLocal")]),a._v("对象之间的绑定关系，完成"),s("code",[a._v("remove")]),a._v("操作。")]),a._v(" "),s("p",[a._v("d. 如果获取的"),s("code",[a._v("Entry")]),a._v("对象为null，表示当前线程并没有与当前"),s("code",[a._v("ThreadLocal")]),a._v("对象绑定的值，无需执行任何操作，直接结束"),s("code",[a._v("remove")]),a._v("方法。")])]),a._v(" "),s("li",[s("p",[a._v("如果在"),s("code",[a._v("ThreadLocalMap")]),a._v("中找不到与当前"),s("code",[a._v("ThreadLocal")]),a._v("对象相关联的"),s("code",[a._v("Entry")]),a._v("对象（即当前线程还没有绑定过该"),s("code",[a._v("ThreadLocal")]),a._v("对象），无需执行任何操作，直接结束"),s("code",[a._v("remove")]),a._v("方法。")])])]),a._v(" "),s("h3",{attrs:{id:"initialvalue方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initialvalue方法"}},[a._v("#")]),a._v(" initialValue方法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n  * 返回当前线程对应的ThreadLocal的初始值\n  * 此方法的第一次调用发生在，当线程通过get方法访问此线程的ThreadLocal值时除非线程先调用了set方法，在这种情况下，       * initialvalue才不会被这个线程调用。☆通常情况下，每个线程最多调用一次这个方法。\n  \n  * <p>这个方法仅仅简单的返回nu17 {@code nu11};\n  * 如果程序员想ThreadLoca1线程局部变量有一个除nu11以外的初始值，☆必须通过子类继承{@code ThreadLoca1}的方式去重写此   * 方法通常,可以通过匿名内部类的方式实现\n  * @return当前ThreadLocal的初始值\n*/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("initialValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[a._v("此方法的作用是返回该线程局部变量的初始值。")]),a._v(" "),s("ul",[s("li",[a._v("这个方法是一个延迟调用方法，从上面的代码我们得知，在set方法还未调用而先调用了get方法时才执行，并且仅执行1次。")]),a._v(" "),s("li",[a._v("这个方法缺省实现直接返回一个null。")]),a._v(" "),s("li",[a._v("如果想要一个除null之外的初始值，可以重写此方法。（备注：该方法是一个protected的方法，显然是为了让子类覆盖而设计的）")])])])}),[],!1,null,null,null);s.default=e.exports}}]);