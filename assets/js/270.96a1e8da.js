(window.webpackJsonp=window.webpackJsonp||[]).push([[270],{600:function(s,t,a){"use strict";a.r(t);var n=a(8),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"选择题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择题"}},[s._v("#")]),s._v(" 选择题")]),s._v(" "),t("h2",{attrs:{id:"单项选择题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单项选择题"}},[s._v("#")]),s._v(" 单项选择题")]),s._v(" "),t("h3",{attrs:{id:"short-s-2-s-s-1-会报错吗-short-s-2-s-1-会报错吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#short-s-2-s-s-1-会报错吗-short-s-2-s-1-会报错吗"}},[s._v("#")]),s._v(" short s=2;s=s+1; 会报错吗？short s=2;s+=1; 会报错吗？")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案：s=s+1 会报错，s+=1 不会报错")])]),s._v(" "),t("p",[s._v("分析：因为 s=s+1 会导致 short 类型升级为 int 类型，所以会报错，而 s+=1 还是原来的 short 类型，所以不会报错。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/202406071743430.png",alt:"image-20240607174309102"}})])]),s._v(" "),t("h3",{attrs:{id:"访问修饰符作用范围由大到是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问修饰符作用范围由大到是"}},[s._v("#")]),s._v(" 访问修饰符作用范围由大到是（）")]),s._v(" "),t("p",[s._v("A. private -> protected -> default -> public")]),s._v(" "),t("p",[s._v("B. public -> protected -> default -> private")]),s._v(" "),t("p",[s._v("C. private -> default -> protected -> public")]),s._v(" "),t("p",[s._v("D. public -> default -> protected -> private")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案：B")])]),s._v(" "),t("blockquote",[t("p",[s._v("Java中的修饰符有public、private、protected、default")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("修饰符")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("同一类中")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("同一包中的类")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("子类")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("其他包的类")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("private")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}}),s._v(" "),t("td",{staticStyle:{"text-align":"center"}}),s._v(" "),t("td",{staticStyle:{"text-align":"center"}})]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("default")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}}),s._v(" "),t("td",{staticStyle:{"text-align":"center"}})]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("protected")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}})]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("public")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("✅")])])])])]),s._v(" "),t("h3",{attrs:{id:"java-中-下面接口以键-值对的方式存储对象的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-中-下面接口以键-值对的方式存储对象的是"}},[s._v("#")]),s._v(" Java 中，下面接口以键－值对的方式存储对象的是（ ）")]),s._v(" "),t("p",[s._v("A. java.util.List")]),s._v(" "),t("p",[s._v("B. java.util.Map")]),s._v(" "),t("p",[s._v("C. java.util.Collection")]),s._v(" "),t("p",[s._v("D. java.util.Set")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案：B")])]),s._v(" "),t("p",[s._v("分析：本题考察的是 Java 语言 基本数据结构的知识。")]),s._v(" "),t("ul",[t("li",[s._v("对于选项 A，List 中保存了相同类型的多个元素，元素是按照存入的顺序存储的，元素可以重复。 所以，选项A错误。")]),s._v(" "),t("li",[s._v("对于选项 B，"),t("strong",[s._v("Map 是以键－值对的方式来存储对象的，并且键不允许重复 所以，选项B正确")]),s._v("。")]),s._v(" "),t("li",[s._v("对于选项 C，java.util.Collection 个集合接口，它提供了对集合对象进行基本操作的通用接口方法。而 Set List 是它的两个具体的接口，由于 Set List 都不是以键－值对的式来存储对象的，因此， Collection 接口也不是。所以，选项 错误。")]),s._v(" "),t("li",[s._v("对于选项 D，Set 中也保存了相同类型的多个元素，元素是不能重复的。所以，选项D错误。")])]),s._v(" "),t("p",[s._v("各接口的区别见下表")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/202406111815279.png",alt:"image-20240611181546934"}})])]),s._v(" "),t("h3",{attrs:{id:"以下不是-object-类的方法的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以下不是-object-类的方法的是"}},[s._v("#")]),s._v(" 以下不是 Object 类的方法的是（）")]),s._v(" "),t("p",[s._v("A. hashCode()")]),s._v(" "),t("p",[s._v("B. finalize()")]),s._v(" "),t("p",[s._v("C. notify()")]),s._v(" "),t("p",[s._v("D. hasNaxt()")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案：D")])]),s._v(" "),t("p",[s._v("分析：本题考察的是 Object 类的知识。")]),s._v(" "),t("p",[s._v("Object 类是类层次结构的根，在 Java 言中，所有的类从根本上而言都继承自这个类。而且， Object 类是 Java 语言中唯 没有父类的类，而其他所有的类，包括标准容器类，例如数组，都继承了 Object 类。")]),s._v(" "),t("p",[s._v("具体而言， Object 类的方法见下表")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/studentgitee/note-picture/raw/master/202406111819948.png",alt:"image-20240611181922694"}})])]),s._v(" "),t("h3",{attrs:{id:"有以下代码-程序的运行结果是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有以下代码-程序的运行结果是"}},[s._v("#")]),s._v(" 有以下代码，程序的运行结果是（）")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("change")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test ok"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'g'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"good"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'c'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" ex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        ex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("change")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"and"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("A. good and abc")]),s._v(" "),t("p",[s._v("B. good and gbc")]),s._v(" "),t("p",[s._v("C. test ok and abc")]),s._v(" "),t("p",[s._v("D. test ok and gbc")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[s._v("分析：本题考察的是Java语言中传参方式以及不可变类的知识。")]),s._v(" "),t("p",[s._v("不可变类（Immutable class）是指当创建了这个类的实例后，就不允许修改它的值了，也就是说， 一个对象一旦被创建出来，在其整个生命周期中，它的成员变量就不能被修改了。 它有点类似于常量（const），即只允许其他程序进行读操作，而不允许其他程序进行修改操作。 在Java 类库中，所有基本类型的包装类都是不可变类，例如Integer、 Float等。此外， String 也是不可变类。 可能有人会有疑问，既然如String 是不可变类，为什么还可以写出如下代码来修改String类型的值呢？")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        s"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" world"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("程序的运行结果为")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("good and gbc\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v('表面上看， s＋＝"world" 的作用好像是修改String类型对象s 的值，其实不是， Strings＝"Hello" 语句声明了一个可以指向String类型对象的引用，这个引用的名字为s，它指向了一个字符串常量 "Hello"。 s+="world"并没有改变s 所指向的字符串的值（由于"Hello"是String类型的对象，而String又是不可变量）， 在这行代码运行后， s 指向了另外一个String类型的对象，该对象的内容为 "Hello world"。原来的那个字符串常量"Hello"，还存在于内存中，并没有被改变。')]),s._v(" "),t("p",[s._v("在Java 语言中，除了 8种原始的数据类型（分别为"),t("code",[s._v("byte")]),s._v("、 "),t("code",[s._v("short")]),s._v("、 "),t("code",[s._v("int")]),s._v("、 "),t("code",[s._v("long")]),s._v("、 "),t("code",[s._v("float")]),s._v("、 "),t("code",[s._v("double")]),s._v("、 "),t("code",[s._v("char")]),s._v("和 "),t("code",[s._v("boolean")]),s._v("）外，其他的类型都是对象，在方法调用的时候，传递的都是引用。引用从本质上来讲也是按值传递，只不过传递的这个值是对象的引用而己，因此，在方法调用的时候， 对形参引用所指对象属性值的修改对实参可见。但是对引用值本身的修改对实参是不可见的。")]),s._v(" "),t("p",[s._v("回到本题中来，在调用change方法的时候， change方法的形参实际上是实参（main 方法中的str）的一个副本，由于String是不可变量，因此，无法通过str 来修改这个字符串的 内容， 执行语句str=”test ok”的结果是使形参的str指向了另外一个常量字符串（可以理解为修改了形参的值，而不是修改了形参所指向对象的值），但是这个修改对实参是不可见的，调用 change 方法结束后对象的main方法中 str 的值还是\"good\"，而change 方法的形参ch也是实参 ch (main 方法中的 ch 值）的一个副本，但是在这个方法中通过形参ch修改了实参ch所指向 对象的值，即数组元素的值，形参ch与实参ch指向的是同一个对象，因此，通过形参对这个对象值的修改对实参是可见的，所以，当调用ex.change方法后， main方法中 ch指向的数组的值变为｛'a','b','c'｝，因为该方法只是改变了 ch[0]的值而己，所以，程序最终输出为字符串good and gbc，所以， 选项B正确。")])]),s._v(" "),t("h3",{attrs:{id:"有如下代码-上程序的运行结果是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有如下代码-上程序的运行结果是"}},[s._v("#")]),s._v(" 有如下代码，上程序的运行结果是（）")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[s._v("答案： B。")]),s._v(" "),t("p",[s._v("分析：本题考察的是前置自增运算符＋＋和后置自增运算符＋＋的知识。")]),s._v(" "),t("p",[s._v("在编程的时候，经常会用到变量的自增或自减操作，尤其在循环语句中用得最多。")]),s._v(" "),t("p",[s._v("以自增为例， 有两种自增方式：前置与后置，即"),t("code",[s._v("++i")]),s._v(" 和 "),t("code",[s._v("i++")]),s._v("，它们的不同点在于后置的 "),t("code",[s._v("i++")]),s._v(" 是在程序"),t("code",[s._v("执行完毕后")]),s._v("自增，而前置的"),t("code",[s._v("++i")]),s._v("是在程序"),t("code",[s._v("开始执行前")]),s._v("进行自增。 对于本题而言，整型变量i被初始化为 6，因此，第一个输出为 6，第二个输出"),t("code",[s._v("i++")]),s._v("，因 为这是后置"),t("code",[s._v("++")]),s._v("操作，因此，输出结果为6，输出后i的值变为7，故最后一个输出操作的值为 7。 所以，选项B正确。")]),s._v(" "),t("p",[s._v("所以，本题的答案为B。")])]),s._v(" "),t("h3",{attrs:{id:"二进制数-11101-转化为十进制数是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二进制数-11101-转化为十进制数是"}},[s._v("#")]),s._v(" 二进制数 11101 转化为十进制数是（ ）")]),s._v(" "),t("p",[s._v("A. 23")]),s._v(" "),t("p",[s._v("B. 17")]),s._v(" "),t("p",[s._v("C. 26")]),s._v(" "),t("p",[s._v("D. 29")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： D。")])]),s._v(" "),t("p",[s._v("分析：本题考察的是进制转换的知识。")]),s._v(" "),t("p",[s._v("本题中，二进制数 11101 对应的十进制数表示为\n$$\n1"),t("em",[s._v("2^0 + 0")]),s._v("2^1 + 1"),t("em",[s._v("2^2 + 1")]),s._v("2^3 + 1*2^4 = 29\n$$\n所以，选项D正确。")]),s._v(" "),t("p",[s._v("除了人工转换外，在Java语言中，也可以用如下方法将一个二进制 数转换为十进制数：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"11101"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 29")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("h3",{attrs:{id:"以下可以对对象加互斥锁的关键字是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以下可以对对象加互斥锁的关键字是"}},[s._v("#")]),s._v(" 以下可以对对象加互斥锁的关键字是（ )")]),s._v(" "),t("p",[s._v("A. synchronized")]),s._v(" "),t("p",[s._v("B. serialize")]),s._v(" "),t("p",[s._v("C. volatile")]),s._v(" "),t("p",[s._v("D. static")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： A。")])]),s._v(" "),t("p",[s._v("分析：本题考察的是Java关键字的知识。")]),s._v(" "),t("ul",[t("li",[s._v("对于选项A，"),t("code",[s._v("synchronized")]),s._v(" （同步的）是java语言的关键字， 主要用来给对象和方法或者 代码块加锁，当它锁定一个方法或者一个代码块时，同一时刻最多只有一个线程执行这段代 码。当两个并发线程访问同一个对象中的这个加锁同步代码块时，同一时间只能有一个线程执行。所以，选项A正确。")]),s._v(" "),t("li",[s._v("对于选项 ，serialize 是序列化的意思，所以对象的序列化指的是把对象转换为字节序列的过程，所谓对象的反序列化指的是把字节序列恢复为对象的过程。 通常，对象的序列化主要有以下两种用途：①将对象的字节序列永久地保存到硬盘上，通常存放在一个文件中； ②在网络上传送对象的字节序列。在Java语言中，序列化通过Serializable接口来实现。 所以， 选项B不正确。")]),s._v(" "),t("li",[s._v("对于选项C，在由Java语言编写的程序中，有时候为了提高程序的运行效率，编译器会做一些优化操作，把经常被访问的变量缓存起来，程序在读取这个变量的时候有可能会直接 从寄存器中读取这个值，而不会去内存中读取。这样做的一个好处是提高了程序的运行效率， 但当遇到多线程编程时，变量的值可能被其他线程改变了，而该缓存的值不会做相应的改变， 从而造成应用程序读取的值和实际的变量值不一致。 关键字volatile正好能够解决这一问题， 被关键字 volatile 修饰的变量编译器不会做优化，每次都会从内存中读取。 所以，选项C不正确。")]),s._v(" "),t("li",[s._v("对于选项D， 关键宇static 主要有以下两种作用：第一，为某特定数据类型或对象分配单 一的存储空间，而与创建对象的个数无关。第二，希望某个方法或属性与类而不是对象关联在一起，也就是说，在不创建对象的情况下就可以通过类来直接调用方法或使用类的属性。 总之，被static 修饰的属性（方法〉是类的属性（方法），不属于任何对象。 所以，选项D不 正确。")])]),s._v(" "),t("p",[s._v("所以，本题的答案为A。")])]),s._v(" "),t("h2",{attrs:{id:"不定项选择题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不定项选择题"}},[s._v("#")]),s._v(" 不定项选择题")]),s._v(" "),t("h3",{attrs:{id:"下列关于类的构造方法的描述中-正确的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下列关于类的构造方法的描述中-正确的是"}},[s._v("#")]),s._v(" 下列关于类的构造方法的描述中，正确的是（ ）")]),s._v(" "),t("p",[s._v("A. 类中的构造方法不可省略")]),s._v(" "),t("p",[s._v("B. 构造方法必须与类同名，但方法不能与class 同名")]),s._v(" "),t("p",[s._v("C. 构造方法在一个对象被new时执行")]),s._v(" "),t("p",[s._v("D. 一个类只能定义一个构造方法")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： C。")])]),s._v(" "),t("p",[s._v("分析： 本题考察的是Java语言构造方法的知识。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("对于选项 A，类中的构造方法是可以省略的，当省略的时候，编译器会提供一个默认的 构造方法以供使用。因此，选项A错误。")])]),s._v(" "),t("li",[t("p",[s._v("对于选项B，构造方法必须与类名相同，但是方法名也可以与类名相同。 如下例所示：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"无参构造"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"普通方法，与类同名"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("程序的运行结果为")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("无参构造\n普通方法，与类同名\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("对于选项C，当一个对象被new的时候必定会调用构造方法。因此，选项C正确。")])]),s._v(" "),t("li",[t("p",[s._v("对于选项 D， 由于构造方法也可以重载，所以， 一个类可以定义多个构造方法。因此， 选项D错误。")])])]),s._v(" "),t("p",[s._v("所以，本题的答案为C。")])]),s._v(" "),t("h3",{attrs:{id:"下列关于java语言中-main方法的描述中-正确的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下列关于java语言中-main方法的描述中-正确的是"}},[s._v("#")]),s._v(" 下列关于Java语言中 main方法的描述中，正确的是（ ）")]),s._v(" "),t("p",[s._v("A. Java 程序的 main方法必须写在类里面")]),s._v(" "),t("p",[s._v("B. Java 程序中可以有多个main方法")]),s._v(" "),t("p",[s._v("C. Java 程序的 main 方法中，如果只有一条语句，可以不用大括号｛｝括起来")]),s._v(" "),t("p",[s._v("D. Java 程序中类名必须与文件名一样")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： A、 B。")])]),s._v(" "),t("p",[s._v("分析：本题考察的是Java基本语法的知识。 在Java 语言中， main 方法是程序的入口方法， 一个程序要想运行必须要有main方法， 但是只有满足特定条件的main方法才能作为程序的入口方法。")]),s._v(" "),t("p",[s._v("对于本题而言：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("对于选项A，由于Java语言是纯面向对象语言，所以，所有的属性与方法都必须定义在 类里面， 而且， main方法也不例外。因此，选项A正确。")])]),s._v(" "),t("li",[t("p",[s._v("对于选项B, Java程序可以定义多个main方法，但是只有"),t("code",[s._v("public static void main(String[] args）")]),s._v("方法才是 Java 程序的入口方法， 其他main方法都不是，并且这个入口方法必须被定义在 类名与文件名相同的被public修饰的类中，如下例所示（Test.java):")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Test main  ... "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"T main  ... "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("程序的运行结果为")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Test main  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("从上例可以看出，这个程序中定义了多个main方法，但是只有满足特定条件的main方 法才能作为程序的入口方法。因此，选项B正确。")])]),s._v(" "),t("li",[t("p",[s._v("对于选项C，在Java语言中，不管方法体里有几条语句，所有的方法体都必须用大括号 ｛｝括起来。因此，选项C错误。")])]),s._v(" "),t("li",[t("p",[s._v("对于选项D，在Java语言中，一个文件内部可以有多个类的存在，但只有被public修饰 的类的名字与文件的名字相同，其他类的名字可以根据需求随意起名字。因此，选项D错误。")])])]),s._v(" "),t("p",[s._v("所以，本题的答案为A、 B。")])]),s._v(" "),t("h3",{attrs:{id:"在类声明中-声明一个类不能再被继承的关键字是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在类声明中-声明一个类不能再被继承的关键字是"}},[s._v("#")]),s._v(" 在类声明中，声明一个类不能再被继承的关键字是（ ）")]),s._v(" "),t("p",[s._v("A. private")]),s._v(" "),t("p",[s._v("B. abstract")]),s._v(" "),t("p",[s._v("C. final")]),s._v(" "),t("p",[s._v("D. static")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： C。")])]),s._v(" "),t("p",[s._v("分析：本题考察的是Java关键字的知识。")]),s._v(" "),t("ul",[t("li",[s._v("对于选项A，关键字private 是一个作用域修饰符，被关键宇private修饰过的变量或方法 只有当前类或对象具有访问权限。 所以，选项A不正确。")]),s._v(" "),t("li",[s._v("对于选项B， 在 Java 语言中，可以通过把类或者类中的某些方法声明为 abstract 来表示一个类是抽象类。所以，选项B不正确。")]),s._v(" "),t("li",[s._v("对于选项C，被 final修饰的变量为常量，当这个方法被声明为final时，该方法不允许任 何子类重写，当一个类被声明为由final时，此类不能被继承，所有方法都不能被重写。所以， 选项C正确。")]),s._v(" "),t("li",[s._v("对于选项D，关键字static 主要有两种作用：第一，为某特定数据类型或对象分配单一的 存储空间，而与创建对象的个数无关；第二，希望某个方法或属性与类而不是对象关联在一 起，也就是说，在不创建对象的情况下就可以通过类来直接调用方法或使用类的属性。 即被 static 修饰的属性（方法）是类的属性（方法〉，不属于任何对象。 所以，选项D不正确。")])]),s._v(" "),t("p",[s._v("所以，本题的答案为C")])]),s._v(" "),t("h3",{attrs:{id:"下面关于关键字abstract-的描述中-正确的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下面关于关键字abstract-的描述中-正确的是"}},[s._v("#")]),s._v(" 下面关于关键字abstract 的描述中，正确的是（ ）")]),s._v(" "),t("p",[s._v("A. 关键宇abstract 可以修饰类或方法")]),s._v(" "),t("p",[s._v("B. final 类的方法都不能是 abstract，因为 final 类不能有子类")]),s._v(" "),t("p",[s._v("C. abstract 类不能实例化")]),s._v(" "),t("p",[s._v("D. abstract 类的子类必须实现其超类的所有abstract 方法")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： A、 B、 C。")])]),s._v(" "),t("p",[s._v("分析：本题考察的是抽象类的知识。 在Java 语言中，关键宇abstract 主要用来定义抽象类或抽象方法。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("对于选项A，在Java语言中，关键宇 abstract 只能修饰类或方法，代表抽象方法或抽象类。所以，选项A正确。")])]),s._v(" "),t("li",[t("p",[s._v("对于选项B，在Java语言中，关键字 final可以用来修饰类、方法和变量 （包括成员变量 和局部变量）。具体而言，final 具有以下性质：")]),s._v(" "),t("ul",[t("li",[s._v("①当用 final 修饰一个类时，表明这个类不能被继承；")]),s._v(" "),t("li",[s._v("②当final修饰方法时，这个方法不能被子类重写；")]),s._v(" "),t("li",[s._v("③当final修饰变量时，如果是基本数据类型的变量，则其数值一旦被初始化之后便不能更改，如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象。所以，被final修饰的方法是不能被继承的， 因此，该方法不能为abstract。")])]),s._v(" "),t("p",[s._v("所以，选项B正确。")])]),s._v(" "),t("li",[t("p",[s._v("对于选项C，由于抽象类中存在没有方法体的方法，因此，不能被实例化。所以，选项C 正确。")])]),s._v(" "),t("li",[t("p",[s._v("对于选项D，子类可以实现超类所有的方法（这个子类能被实例化），子类也可以是一个抽 象类，此时这个子类可以实现超类的abstract方法，也可以不实现。所以，选项D错误。")])])]),s._v(" "),t("p",[s._v("所以，本题的答案为A、B、 C。")])]),s._v(" "),t("h3",{attrs:{id:"以下不是合法的标识符的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以下不是合法的标识符的是"}},[s._v("#")]),s._v(" 以下不是合法的标识符的是（ ）")]),s._v(" "),t("p",[s._v("A. STR")]),s._v(" "),t("p",[s._v("B. x3ab")]),s._v(" "),t("p",[s._v("C. void")]),s._v(" "),t("p",[s._v("D. abed")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： C。")])]),s._v(" "),t("p",[s._v("分析：本题考察的是标识符的知识。")]),s._v(" "),t("p",[s._v("在Java 语言中，变量名、方法名和数组名统称为标识符， Java语言规定标识符只能由字 母 (a～z, A～Z）、数字 （0～9）、下划线（_）和$组成，并且标识符的第一个字符必须是字母、下划线或$。而且，标识符也不能包含空白字符（换行符、空格和制表符〉。 此外， Java 语言的关键字也不能作为标识符来使用。 以上这四个选项都符合变量的命名规则，但是，选项C中的void是Java语言的关键字， 因此，它不能被用作标识符使用。所以，选项C不正确。 所以，本题的答案为C。")])]),s._v(" "),t("h3",{attrs:{id:"以下关于类的描述中-正确的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以下关于类的描述中-正确的是"}},[s._v("#")]),s._v(" 以下关于类的描述中，正确的是（ ）")]),s._v(" "),t("p",[s._v("A. 只要没有定义不带参数的构造方法，JVM都会为类生成一个默认构造方法")]),s._v(" "),t("p",[s._v("B. 局部变量的作用范围仅仅在定义它的方法内，或者是在定义它的控制流块中")]),s._v(" "),t("p",[s._v("C. 使用其他类的方法仅仅需要引用方法的名字即可")]),s._v(" "),t("p",[s._v("D. 在类中定义的变量称为类的成员变量，在其他类中可以直接使用")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： B。")])]),s._v(" "),t("p",[s._v("分析：本题考察的是Java语言知识。")]),s._v(" "),t("ul",[t("li",[s._v("对于选项 A，只要类中定义了构造方法（不管有没有参数）， JVM 都不会提供默认构造方法了。因此，选项A错误。")]),s._v(" "),t("li",[s._v("对于选项 B，变量的作用域指的是可以使用此变量的名称来引用它的程序区域， 变量声明在程序中的位置决定了该变量的作用域。局部变量在方法或方法的一个代码块中声明，它 的作用域为它所在的代码块 （代码块是整个方法或方法中的某块代码，即以括号｛｝包括的代 码）。所以，局部变量仅在定义它的方法或块内可见。因此，选项B正确。")]),s._v(" "),t("li",[s._v("对于选项C， 在使用其他类的方法的时候，需要用"),t("code",[s._v("类名.方法")]),s._v("来引用，不能直接通过方法名字引用。因此，选项C错误。")]),s._v(" "),t("li",[s._v("对于选项 D，只有被 static 修饰的变量才是类的成员变量，但是当类中的变量被 private 修饰时，其他类是无法直接使用的。因此，选项D错误。")])]),s._v(" "),t("p",[s._v("所以，本题的答案为B。")])]),s._v(" "),t("h3",{attrs:{id:"下列关于java语言中关键字super-的说法中-正确的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下列关于java语言中关键字super-的说法中-正确的是"}},[s._v("#")]),s._v(" 下列关于Java语言中关键字super 的说法中，正确的是（ ）")]),s._v(" "),t("p",[s._v("A. 关键字super是在子类对象中指代其父类对象的引用")]),s._v(" "),t("p",[s._v("B. 子类通过关键字super只能调用父类的属性，而不能调用父类的方法")]),s._v(" "),t("p",[s._v("C. 子类通过关键宇super只能调用父类的方法，而不能调用父类的属性")]),s._v(" "),t("p",[s._v("D. 关键字super不仅可以指代子类的直接父类，还可以指代父类的父类")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： A。")])]),s._v(" "),t("p",[s._v("分析： 本题考察的是super关键字的知识。")]),s._v(" "),t("p",[s._v("在Java 语言中，关键字this 指的是对当前对象的引用，关键字 super指的是当前对象里 面的父对象的引用，当引用当前对象的某个方法或某个成员时，通常会使用this，而通过super 可以调用父类的构造方法、父类的方法和属性。如下例所示：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Base")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" status "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Base")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("status "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Base"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sub")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Base")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sub")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("status "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("status "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printSub")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sub"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"status = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printBase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"status = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sub")]),s._v(" sub "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sub")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        sub"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printBase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        sub"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printSub")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br")])]),t("p",[s._v("程序的运行结果为")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Base\nstatus "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsub\nstatus "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("通过以上分析可知，选项A正确，选项B和选项C错误，对于选项D，super只能表示父类的引用，不能表示父类的父类。")]),s._v(" "),t("p",[s._v("因此，选项D错误。 所以，本题的答案为A。")])]),s._v(" "),t("h3",{attrs:{id:"下面关于string、-stringbuilder-以及-stringbuffer-的描述中-正确的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下面关于string、-stringbuilder-以及-stringbuffer-的描述中-正确的是"}},[s._v("#")]),s._v(" 下面关于String、 StringBuilder 以及 StringBuffer 的描述中， 正确的是（ ）")]),s._v(" "),t("p",[s._v("A. 对String 对象的任何改变都不影响到原对象，相关的任何change操作都会生成新 的对象")]),s._v(" "),t("p",[s._v("B. StringBuffer 是线程安全的")]),s._v(" "),t("p",[s._v("C. StringBuilder 是线程安全的")]),s._v(" "),t("p",[s._v("D. 可以修改StringBuilder和 StringBuffer 的内容")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： A、 B、 D。")])]),s._v(" "),t("p",[s._v("分析：本题考察的是Java语言中字符串相关知识。")]),s._v(" "),t("p",[s._v("在Java 语言中， String 是不可变类，也就是说， String对象一旦被创建，字符串的内 容将不能被改变，而StringBuffer 是可变类，当对象被创建后，仍然可以对字符串的内容 进行修改。由于 String 是不可变类，因此，它适合在需要被共享的场合中使用，而当一个字符串经常需要被修改时，最好使用 StringBuffer来实现。如果使用 String来保存一个 经常被修改的字符串，在字符串被修改时，会比 StringBuffer 多很多附加的操作，同时生成很多无用的对象，由于这些无用的对象会被垃圾回收器回收，所以会影响程序的性能。在规模小的项目中这个影响很小，但是在一个规模大的项目中，这会对程序的运行效率带来很 大的影响。")]),s._v(" "),t("p",[s._v("String 字符串修改实现的原理如下：当使用 String类型来对字符串进行修改时，其实现方法是首先创建一个StringBuffer，然后调用如StringBuffer 的 append 方法，最后调用 StringBuffer 的toString 方法把结果返回。举例如下：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ns "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"World"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("以上代码与下述代码等价：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuffer")]),s._v(" sb "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuffer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"World"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ns "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("由此可以看出， 上述过程比使用 StringBuffer 多了一些附加的操作，同时也生成了一些临 时的对象，这样会导致程序的执行效率降低。")]),s._v(" "),t("p",[s._v("StringBuilder 也是可以被修改的字符串，它与 StringBuffer类似，都是字符串缓冲区，但 StringBuilder 不是线程安全的，如果只是在单线程中使用字符串缓冲区，那么 StringBuilder 的效率会更高些。因此，在只有单线程访问的时候，可以使用StringBuilder，当有多个线程访问时，最好使用线程安全的StringBuffer。因为 StringBuffer 必要时可以对这些方法进行同步， 所以，任意特定实例上的所有操作就好像是以串行顺序发生的，该顺序与所涉及的每个线程 进行的方法调用顺序一致。")]),s._v(" "),t("p",[s._v("在执行效率方面， StringBuilder 最高， StringBuffer次之， String 最低，鉴于这一情况，一般而言，如果要操作的数据量比较小，可以使用String类，如果是在单线程下操作大量数据，优先 使用StringBuilder 类，如果是在多线程下操作大量数据，优先考虑StringBuffer类。")]),s._v(" "),t("p",[s._v("从以上分析可知， StringBuilder不是线程安全的。所以，选项A、选项B与选项D正确。")]),s._v(" "),t("p",[s._v("所以，本题的答案为A、 B、 D。")])]),s._v(" "),t("h3",{attrs:{id:"以下不是基本数据类型的类型有"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以下不是基本数据类型的类型有"}},[s._v("#")]),s._v(" 以下不是基本数据类型的类型有（ ）")]),s._v(" "),t("p",[s._v("A. int")]),s._v(" "),t("p",[s._v("B. String")]),s._v(" "),t("p",[s._v("C. Byte")]),s._v(" "),t("p",[s._v("D. Float")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[s._v("答案： B、 C、 D。")]),s._v(" "),t("p",[s._v("分析：本题考察的是Java语言中基本类型知识。")]),s._v(" "),t("p",[s._v("Java 语言一共提供了 8 种原始的数据类型（byte、 short、 int、 long、 float、 double、 char 和boolean），这些数据类型不是对象，而是Java语言中不同于类的特殊类型，这些基本类型 的数据变量在声明之后就会立刻在栈上分配内存空间。此外， Java 语言还提供了这些原始数据类型的包装类（字符类型 Character，布尔类型 Boolean，数值类型 Byte、 Short、 Integer、 Long、 Float、 Double）。")]),s._v(" "),t("p",[s._v("本题中， Byte、 Float 是包装类类型， String 是存储字符串的类，只有int是基本数据类型。 所以，选项B、选项C与选项D正确。")]),s._v(" "),t("p",[s._v("所以，本题的答案为B、 C、 D。")])]),s._v(" "),t("h3",{attrs:{id:"javathread-中的方法-resume-负责恢复哪些线程的执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javathread-中的方法-resume-负责恢复哪些线程的执行"}},[s._v("#")]),s._v(" JavaThread 中的方法 resume（）负责恢复哪些线程的执行？")]),s._v(" "),t("p",[s._v("A. 通过调用wait（）方法而停止运行的线程")]),s._v(" "),t("p",[s._v("B. 通过调用 sleep（）方法而停止运行的线程")]),s._v(" "),t("p",[s._v("C. 通过调用stop（）方法而停止的钱程")]),s._v(" "),t("p",[s._v("D. 通过调用suspend（）方法而停止运行的线程")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("p",[t("strong",[s._v("答案： D。")])]),s._v(" "),t("p",[s._v("分析：本题考察的是线程相关方法的知识。")]),s._v(" "),t("ul",[t("li",[s._v("对于选项A，wait（）方法是一种使线程暂停执行的方法，例如，当线程交互时，如果线程 对一个同步对象发出了一个wait（）调用请求，那么该线程会暂停执行，被调对象进入等待状态，直到被唤醒（通常使用notify方法唤醒）或等待时间超时。所以，选项A错误。")]),s._v(" "),t("li",[s._v("对于选项B, sleep（）方法的作用是使当前运行的线程休眠指定的时间。所以，选项B错误。")]),s._v(" "),t("li",[s._v("对于选项C，可以使用 stop（）方法来终止线程的执行。当使用 Thread.stop（）方法来终止线程时，它会释放已经锁定的所有的监视资源。如果当前任何一个受这些监视资源保护的对象处于一个不一致的状态，其他的线程将会看到这个不一致的状态，这可能会导致程序执行的 不确定性，并且这种问题很难被定位。因此，不雄荐使用。所以，选项C错误。")]),s._v(" "),t("li",[s._v("对于选项D，suspend（）方法就是将一个线程挂起（暂停），并且不会自动恢复，必须通过调用 对应的resume（）方法，才能使得线程重新进入可执行状态。所以，选项D正确。")])]),s._v(" "),t("p",[s._v("所以，本题的答案为D。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);