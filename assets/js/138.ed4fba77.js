(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{468:function(s,a,e){"use strict";e.r(a);var t=e(8),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"基本git命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本git命令"}},[s._v("#")]),s._v(" 基本Git命令")]),s._v(" "),a("h3",{attrs:{id:"初始化仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化仓库"}},[s._v("#")]),s._v(" 初始化仓库")]),s._v(" "),a("p",[a("strong",[s._v("在项目文件夹中运行以下命令来创建一个新的Git仓库：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git init\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"克隆仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆仓库"}},[s._v("#")]),s._v(" 克隆仓库")]),s._v(" "),a("p",[a("strong",[s._v("从远程仓库克隆一个项目：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("repository-url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("git clone <repository-url>")]),s._v(" 命令用于从远程 Git 仓库克隆一个副本到本地计算机。参数的含义如下：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("<repository-url>")]),s._v(": 这是远程 Git 仓库的 URL。它可以是一个 HTTP(S) 或 SSH 地址，指向您要克隆的远程仓库。例如，"),a("code",[s._v("https://github.com/user/repo.git")]),s._v(" 或 "),a("code",[s._v("git@github.com:user/repo.git")]),s._v("。")])]),s._v(" "),a("p",[s._v("例如，如果您要克隆一个 URL 为 "),a("code",[s._v("https://github.com/user/repo.git")]),s._v(" 的远程仓库，您可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/user/repo.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行此命令后，Git 将在当前目录下创建一个名为 "),a("code",[s._v("repo")]),s._v(" 的新目录，并将远程仓库的所有文件、分支和提交历史复制到该目录中。接下来，您可以进入 "),a("code",[s._v("repo")]),s._v(" 目录，在本地进行修改、提交和与远程仓库的同步。")]),s._v(" "),a("h3",{attrs:{id:"添加和提交文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加和提交文件"}},[s._v("#")]),s._v(" 添加和提交文件")]),s._v(" "),a("p",[a("strong",[s._v("添加文件到暂存区：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("git add <file-name>")]),s._v(" 命令用于将指定文件添加到 Git 的暂存区（staging area），以便在下次提交时包含这些更改。参数的含义如下：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("<file-name>")]),s._v("：这是要添加到暂存区的文件名。您可以使用相对或绝对路径指定文件。也可以使用通配符 "),a("code",[s._v("*")]),s._v(" 添加多个文件或目录。")])]),s._v(" "),a("p",[s._v("例如，如果您要将名为 "),a("code",[s._v("example.txt")]),s._v(" 的文件添加到暂存区，可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" example.txt\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果您要一次性将多个文件添加到暂存区，可以使用逗号分隔的文件列表或通配符 "),a("code",[s._v("*")]),s._v("。例如，将所有 "),a("code",[s._v(".txt")]),s._v(" 文件添加到暂存区：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" *.txt\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在执行 "),a("code",[s._v("git commit")]),s._v(" 命令时，暂存区中的所有更改将被记录为一个新的提交。通过使用 "),a("code",[s._v("git add")]),s._v(" 命令，您可以选择性地添加一部分更改而不是所有更改，以便创建更小、更具描述性的提交。")]),s._v(" "),a("p",[a("strong",[s._v("添加所有文件到暂存区：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("提交更改：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Commit message"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"查看状态和历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看状态和历史"}},[s._v("#")]),s._v(" 查看状态和历史")]),s._v(" "),a("p",[s._v("查看仓库状态：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查看提交历史：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"分支管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[s._v("#")]),s._v(" 分支管理")]),s._v(" "),a("p",[a("strong",[s._v("创建新分支：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("git branch <branch-name>")]),s._v(" 命令用于在当前 Git 仓库中创建一个新的分支。参数的含义如下：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("<branch-name>")]),s._v("：这是您要创建的新分支的名称。")])]),s._v(" "),a("p",[s._v("例如，如果您想要创建一个名为 "),a("code",[s._v("feature-x")]),s._v(" 的新分支，您可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch feature-x\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这将在当前的提交（HEAD）下创建一个新的分支。创建新分支后，您可以使用 "),a("code",[s._v("git checkout")]),s._v(" 命令切换到新分支进行开发。")]),s._v(" "),a("p",[s._v("需要注意的是，"),a("code",[s._v("git branch")]),s._v(" 命令只是创建一个新分支，并不会自动切换到新分支。要同时创建并切换到新分支，您可以使用 "),a("code",[s._v("git checkout -b <branch-name>")]),s._v(" 命令。")]),s._v(" "),a("p",[a("strong",[s._v("切换到其他分支：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("git checkout <branch-name>")]),s._v(" 命令用于在 Git 仓库中切换到指定的分支。参数的含义如下：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("<branch-name>")]),s._v("：这是您要切换到的分支的名称。")])]),s._v(" "),a("p",[s._v("例如，如果您想要切换到名为 "),a("code",[s._v("feature-x")]),s._v(" 的分支，您可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout feature-x\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行此命令后，您将切换到 "),a("code",[s._v("feature-x")]),s._v(" 分支，并且您的工作目录中的文件将更新为该分支的最新提交。在这个新分支上进行的任何修改和提交都将仅在该分支上进行，不会影响其他分支。")]),s._v(" "),a("p",[s._v("需要注意的是，如果您在切换分支前对工作目录中的文件进行了修改，但尚未提交，Git 会提醒您提交更改，或者使用 "),a("code",[s._v("git stash")]),s._v(" 将更改暂存起来，以便在切换分支后还能恢复这些更改。")]),s._v(" "),a("p",[a("strong",[s._v("创建并切换到新分支：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("git checkout -b <branch-name>")]),s._v(" 命令用于在 Git 仓库中创建一个新的分支，并立即切换到这个新分支。参数的含义如下：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("<branch-name>")]),s._v("：这是您要创建并切换到的新分支的名称。")])]),s._v(" "),a("p",[s._v("例如，如果您想要创建一个名为 "),a("code",[s._v("feature-x")]),s._v(" 的新分支，并立即切换到这个新分支，您可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" feature-x\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行此命令后，Git 将基于当前分支创建一个新的 "),a("code",[s._v("feature-x")]),s._v(" 分支，并将工作目录中的文件更新为该分支的最新提交。在这个新分支上进行的任何修改和提交都将仅在该分支上进行，不会影响其他分支。")]),s._v(" "),a("p",[s._v("这个命令等同于先执行 "),a("code",[s._v("git branch <branch-name>")]),s._v(" 创建新分支，然后执行 "),a("code",[s._v("git checkout <branch-name>")]),s._v(" 切换到新分支。")]),s._v(" "),a("p",[a("strong",[s._v("列出所有分支：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("合并分支：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("git merge <branch-name>")]),s._v(" 命令用于将指定分支的更改合并到当前分支。参数的含义如下：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("<branch-name>")]),s._v("：这是您要合并到当前分支的源分支的名称。")])]),s._v(" "),a("p",[s._v("例如，如果您当前位于 "),a("code",[s._v("master")]),s._v(" 分支，并希望合并 "),a("code",[s._v("feature-x")]),s._v(" 分支的更改，您可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge feature-x\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行此命令后，Git 将尝试自动合并两个分支的更改。如果在合并过程中遇到冲突（即，两个分支对同一文件的同一部分进行了不同的更改），则需要手动解决冲突并提交更改以完成合并操作。")]),s._v(" "),a("p",[a("code",[s._v("git merge")]),s._v(' 默认使用"快进合并"（fast-forward merge）策略，如果可能的话。这意味着，如果当前分支的提交是要合并分支的提交的直接祖先，Git 会简单地将当前分支指针移动到要合并分支的最新提交。否则，Git 会创建一个新的合并提交，它具有两个父提交（即，当前分支和要合并分支的最新提交）。')]),s._v(" "),a("p",[a("strong",[s._v("删除分支：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("git branch -d <branch-name>")]),s._v(" 命令用于删除一个本地分支。其中 "),a("code",[s._v("<branch-name>")]),s._v(" 是你想要删除的分支的名称。请注意，你不能删除当前已检出的分支。在删除分支之前，确保已经将所需的更改合并到其他分支，因为删除分支将丢失该分支上的所有更改。")]),s._v(" "),a("p",[s._v("如果要强制删除分支，即使它尚未合并到其他分支，可以使用：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这将无条件地删除分支，无论其合并状态如何。请谨慎使用此选项。")]),s._v(" "),a("h3",{attrs:{id:"远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[s._v("#")]),s._v(" 远程仓库")]),s._v(" "),a("p",[a("strong",[s._v("添加远程仓库：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("repository-url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("<remote-name>")]),s._v(": 这是您要添加的远程仓库的名称。为了方便使用，您可以为远程仓库选择一个简短且易于记忆的名称。例如，您可以使用 "),a("code",[s._v("upstream")]),s._v(" 作为名称，表示上游仓库。")]),s._v(" "),a("li",[a("code",[s._v("<repository-url>")]),s._v(": 这是远程 Git 仓库的 URL。它可以是一个 HTTP(S) 或 SSH 地址，指向您要添加的远程仓库。例如，"),a("code",[s._v("https://github.com/user/repo.git")]),s._v(" 或 "),a("code",[s._v("git@github.com:user/repo.git")]),s._v("。")])]),s._v(" "),a("p",[s._v("例如，如果您要添加一个名为 "),a("code",[s._v("upstream")]),s._v(" 的远程仓库，其 URL 为 "),a("code",[s._v("https://github.com/user/repo.git")]),s._v("，您可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" upstream https://github.com/user/repo.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行此命令后，您可以使用 "),a("code",[s._v("upstream")]),s._v(" 名称引用该远程仓库，并使用其他 Git 命令（如 "),a("code",[s._v("git fetch")]),s._v("、"),a("code",[s._v("git pull")]),s._v("、"),a("code",[s._v("git push")]),s._v(" 等）与该远程仓库进行交互。")]),s._v(" "),a("p",[a("strong",[s._v("查看远程仓库列表：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("拉取远程仓库的更改：")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git pull <remote-name> <branch-name>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("<remote-name>")]),s._v(": 这是您要拉取更改的远程仓库的名称。在克隆一个 Git 仓库时，默认的远程仓库名称为 "),a("code",[s._v("origin")]),s._v("。您可以通过运行 "),a("code",[s._v("git remote")]),s._v(" 命令查看当前 Git 仓库中已配置的所有远程仓库。")]),s._v(" "),a("li",[a("code",[s._v("<branch-name>")]),s._v(": 这是您要从远程仓库拉取更改的分支名称。例如，如果您想要获取远程仓库中 "),a("code",[s._v("main")]),s._v(" 分支的更改，那么 "),a("code",[s._v("<branch-name>")]),s._v(" 就是 "),a("code",[s._v("main")]),s._v("。")])]),s._v(" "),a("p",[s._v("举个例子，如果您想要从名为 "),a("code",[s._v("origin")]),s._v(" 的远程仓库拉取 "),a("code",[s._v("main")]),s._v(" 分支的更改，并将其合并到您当前所在的分支，您可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin main\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个命令将获取远程仓库 "),a("code",[s._v("origin")]),s._v(" 中 "),a("code",[s._v("main")]),s._v(" 分支上的更改，并将其合并到您当前所在的分支。这样，您可以在本地分支上查看并处理远程分支的更新。")]),s._v(" "),a("p",[a("strong",[s._v("推送本地更改到远程仓库：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("<remote-name>")]),s._v(": 这是您要推送到的远程仓库的名称。在克隆一个 Git 仓库时，默认的远程仓库名称为 "),a("code",[s._v("origin")]),s._v("。您可以通过运行 "),a("code",[s._v("git remote")]),s._v(" 命令查看当前 Git 仓库中已配置的所有远程仓库。")]),s._v(" "),a("li",[a("code",[s._v("<branch-name>")]),s._v(": 这是您要推送的本地分支名称。例如，如果您当前所在的分支是 "),a("code",[s._v("feature")]),s._v("，并且您希望将更改推送到远程仓库，那么 "),a("code",[s._v("<branch-name>")]),s._v(" 就是 "),a("code",[s._v("feature")]),s._v("。")])]),s._v(" "),a("p",[s._v("举个例子，如果您想要将本地的 "),a("code",[s._v("my-feature-branch")]),s._v(" 分支推送到名为 "),a("code",[s._v("origin")]),s._v(" 的远程仓库，您可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin my-feature-branch\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个命令将把您在 "),a("code",[s._v("my-feature-branch")]),s._v(" 分支上所做的更改推送到 "),a("code",[s._v("origin")]),s._v(" 远程仓库。远程仓库中的其他人将能够看到您的更改并与您")]),s._v(" "),a("p",[s._v("的分支进行协作。")]),s._v(" "),a("p",[a("strong",[s._v("删除远程仓库：")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("<remote-name>")]),s._v(" 参数是您要删除的远程仓库的名称。")])]),s._v(" "),a("p",[s._v("例如，当您想要删除一个名为 "),a("code",[s._v("upstream")]),s._v(" 的远程仓库时，可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" upstream\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"撤销更改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销更改"}},[s._v("#")]),s._v(" 撤销更改")]),s._v(" "),a("p",[s._v("撤销工作区的更改：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("移除暂存区的更改：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("撤销上一次提交（创建一个新的提交以撤销之前的提交）：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" revert "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-hash"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("重置到特定提交（谨慎使用，会丢失所有后续提交）：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit-hash"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"回滚到某一次提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回滚到某一次提交"}},[s._v("#")]),s._v(" 回滚到某一次提交")]),s._v(" "),a("h4",{attrs:{id:"回滚到之前某一版本且该版本后的提交都不需要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回滚到之前某一版本且该版本后的提交都不需要"}},[s._v("#")]),s._v(" 回滚到之前某一版本且该版本后的提交都不需要")]),s._v(" "),a("p",[s._v("1）首先使用git log命令查看版本号(commit后就是版本号)")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("commit ec32027ecbaa90e4c89662440117a6b9c9293c3c \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("2）git reset --hard 版本号 回滚到之前某版本，此时本地已经回滚，远程仓库还未回滚")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("git reset")]),s._v(" 是用于移动 HEAD 指针的命令，HEAD 是指向当前所在分支的指针。")]),s._v(" "),a("li",[a("code",[s._v("--hard")]),s._v(" 选项表示重置后，将工作目录、暂存区和本地仓库全部恢复到指定版本，即丢弃之前的所有更改。")])]),s._v(" "),a("p",[s._v("3）git push -f 回滚远程仓库版本")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("git push")]),s._v(" 是用于将本地更改推送到远程仓库的命令。")]),s._v(" "),a("li",[a("code",[s._v("-f")]),s._v(" 或 "),a("code",[s._v("--force")]),s._v(" 选项表示强制推送，它用于覆盖远程仓库上的历史记录。")])]),s._v(" "),a("h4",{attrs:{id:"回滚到之前某一版本但该版本后的提交仍需保留"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回滚到之前某一版本但该版本后的提交仍需保留"}},[s._v("#")]),s._v(" 回滚到之前某一版本但该版本后的提交仍需保留")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1）首先使用git log命令查看版本号(commit后就是版本号)")]),s._v("\ngit log\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2）版本号回滚到之前版本")]),s._v("\ngit revert "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("n \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3） 提交")]),s._v("\ngit commit "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"备注信息"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4）推送至远程仓库")]),s._v("\ngit push \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"git-commit但未push-把修改撤销到工作区中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit但未push-把修改撤销到工作区中"}},[s._v("#")]),s._v(" git commit但未push 把修改撤销到工作区中")]),s._v(" "),a("p",[s._v("使用 git reset --soft HEAD^ 命令，撤销了commit 代码依然保留")]),s._v(" "),a("p",[a("code",[s._v("git reset --soft HEAD^")]),s._v(" 是用于取消最后一次提交并将提交的更改保留在工作区中的 Git 命令。它将 "),a("code",[s._v("HEAD")]),s._v(" 指针（当前分支的最新提交）向后移动一个提交，取消最后一次提交，但保留提交的更改在工作区中。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("git reset")]),s._v(" 用于移动分支的指针。")]),s._v(" "),a("li",[a("code",[s._v("--soft")]),s._v(" 选项表示重置将保留提交的更改在工作区中。")]),s._v(" "),a("li",[a("code",[s._v("HEAD^")]),s._v(" 表示将 "),a("code",[s._v("HEAD")]),s._v(" 指针向后移动一个提交，即取消最后一次提交。")])]),s._v(" "),a("p",[s._v("执行此命令后，你的更改将在工作区中保留，你可以对它们进行修改并重新提交，而不需要重新创建这些更改。这在需要修复或修改最后一次提交时非常有用。")]),s._v(" "),a("p",[s._v("请注意，如果你希望取消并删除最后一次提交，可以使用 "),a("code",[s._v("--hard")]),s._v(" 选项而不是 "),a("code",[s._v("--soft")])])])}),[],!1,null,null,null);a.default=r.exports}}]);