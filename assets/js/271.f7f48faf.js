(window.webpackJsonp=window.webpackJsonp||[]).push([[271],{602:function(t,a,s){"use strict";s.r(a);var n=s(8),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"填空题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#填空题"}},[t._v("#")]),t._v(" 填空题")]),t._v(" "),a("h2",{attrs:{id:"math-round-11-5-等于-math-round-11-5-等于"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math-round-11-5-等于-math-round-11-5-等于"}},[t._v("#")]),t._v(" Math.round(11.5)等于（）？Math.round(-11.5)等于（）？")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看")]),t._v(" "),a("p",[a("strong",[t._v("答案：12， -11")])]),t._v(" "),a("p",[t._v("分析：本题考察的是Math类中round方法的使用。")]),t._v(" "),a("p",[t._v("Math 类主要提供了下面5个与取整相关的方法：")]),t._v(" "),a("ol",[a("li",[t._v("static double ceil(double a）：返回大于等于 a 的最小整数。")]),t._v(" "),a("li",[t._v("static double floor( double a）：返回小于等于 a 的最大整数。")]),t._v(" "),a("li",[t._v("static double rint(double a）：四舍五入方法，返回与 a 的值最相近的整数，为 double 类型。")]),t._v(" "),a("li",[t._v("static long round( double a）：四舍五入方法，返回与 a 的值最相近的长整型数。")]),t._v(" "),a("li",[t._v("static int round( float a）：四舍五入方法，返回与 a 的值最相近的整型数。")])]),t._v(" "),a("p",[t._v("对于本题而言， round 是一个四舍五入的方法， 11.5 的小数部分为 0.5， 当对其执行 Math.round（）操作时，结果需要四舍五入，所以，结果为 12：-11.5 的小数部分也为 0.5，当对 其执行Math.round（）操作时，结果也需要四舍五入，由于-11＞-12，因此，结果为－11")])]),t._v(" "),a("h2",{attrs:{id:"有如下程序-那么程序的运行结果是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有如下程序-那么程序的运行结果是"}},[t._v("#")]),t._v(" 有如下程序，那么程序的运行结果是（）")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看")]),t._v(" "),a("p",[a("strong",[t._v("答案： false。")])]),t._v(" "),a("p",[t._v("分析：本题考察的是字符串知识。 在 Java 语言中，除了 8 种基本的数据类型外，其他的类型都为引用类型，因此， 语句 str1 == str2 的功能是比较 str1 与 str2 这两个字符串的地址是否相同，显然， str1 存储在常量区， 而由2 中的“world”是在堆空间上申请的另外一块存储空间，因此， 二者必然有不同的存储 地址。")]),t._v(" "),a("p",[t._v("因此，程序的运行结果为false。")])]),t._v(" "),a("h2",{attrs:{id:"在java-语言中-基本数据类型包括-、字符类型-、布尔类型boolean和-数值类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在java-语言中-基本数据类型包括-、字符类型-、布尔类型boolean和-数值类型"}},[t._v("#")]),t._v(" 在Java 语言中，基本数据类型包括（ ）、字符类型（ ）、布尔类型boolean和 数值类型（ ）")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看")]),t._v(" "),a("p",[a("strong",[t._v("答案：浮点型float、 double、thar、 byte、 short、 int、 long。")])]),t._v(" "),a("p",[t._v("分析：本题考察的是Java数据类型的知识。 Java 语言中只有 8 种基本数据类型，分别为 byte、 short、 int、 long、 float、 double、 char 和boolean。在方法调用传参时，这8种基本数据类型都是按值传递的，除此之外，所有的数据类型都是按引用传递的。 由以上分析可知，本题的答案为：浮点型float、 double，字符类型char，布尔类型boolean，数值类型byte、 short、 int、 long。")])]),t._v(" "),a("h2",{attrs:{id:"字符串分为两大类-一类是字符串常量-另一类是字符串变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串分为两大类-一类是字符串常量-另一类是字符串变量"}},[t._v("#")]),t._v(" 字符串分为两大类： 一类是字符串常量（ ）；另一类是字符串变量（ ）")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看")]),t._v(" "),a("p",[a("strong",[t._v("答案： String，StringBuffer。")])]),t._v(" "),a("p",[t._v("分析：本题考察的是对Java字符串的理解。")]),t._v(" "),a("p",[t._v("在Java 语言中， String 是不可变类，也就是说，如String对象一旦被创建，其值将不能被改变，而StringBuffer 是可变类，当对象被创建后，仍然可以对其值进行修改。 由于如String是不可变类，因此，适合在需要被共享的场合中使用，而当一个字符串经常需要被修改时， 最好使用 StringBuffer 来实现。如果使用 String 来保存一个经常被修改的字符串，在字符串被修改 的时候会比StringBuffer 多了很多附加的操作，同时会生成很多无用的对象，由于这些无用的 对象会被垃圾回收器回收，所以，会影响程序的性能。在规模小的项目中这种影响很小， 但 是在一个规模大的项目中，这会给程序的运行效率带来很大的负面影响")])])])}),[],!1,null,null,null);a.default=r.exports}}]);